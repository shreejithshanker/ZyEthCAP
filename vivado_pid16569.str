/*

Xilinx Vivado v2017.4 (64-bit) [Major: 2017, Minor: 4]
SW Build: 2086221 on Fri Dec 15 20:54:30 MST 2017
IP Build: 2085800 on Fri Dec 15 22:25:07 MST 2017

Process ID: 16569
License: Customer

Current time: 	Thu May 02 12:50:10 BST 2019
Time zone: 	Greenwich Mean Time (Europe/London)

OS: Ubuntu
OS Version: 4.18.0-16-generic
OS Architecture: amd64
Available processors (cores): 4

Display: :1
Screen size: 4480x2520
Screen resolution (DPI): 96
Available screens: 3
Available disk space: 243 GB
Default font: family=Dialog,name=Dialog,style=plain,size=12

Java version: 	1.8.0_112 64-bit
Java home: 	/tools/Xilinx/Vivado/2017.4/tps/lnx64/jre
JVM executable location: 	/tools/Xilinx/Vivado/2017.4/tps/lnx64/jre/bin/java

User name: 	alex
User home directory: /home/alex
User working directory: /home/alex/GitHub/ZyEthCAP
User country: 	GB
User language: 	en
User locale: 	en_GB

RDI_BASEROOT: /tools/Xilinx/Vivado
HDI_APPROOT: /tools/Xilinx/Vivado/2017.4
RDI_DATADIR: /tools/Xilinx/Vivado/2017.4/data
RDI_BINDIR: /tools/Xilinx/Vivado/2017.4/bin

Vivado preferences file location: /home/alex/.Xilinx/Vivado/2017.4/vivado.xml
Vivado preferences directory: /home/alex/.Xilinx/Vivado/2017.4/
Vivado layouts directory: /home/alex/.Xilinx/Vivado/2017.4/layouts
PlanAhead jar file location: 	/tools/Xilinx/Vivado/2017.4/lib/classes/planAhead.jar
Vivado log file location: 	
Vivado journal file location: 	
Engine tmp dir: 	./.Xil/Vivado-16569-alex-pc

GUI allocated memory:	177 MB
GUI max memory:		3,052 MB
Engine allocated memory: 848 MB

Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.

*/

// TclEventType: START_GUI
// Tcl Message: Sourcing tcl script '/home/alex/.Xilinx/Vivado/Vivado_init.tcl' 
// Tcl Message: start_gui 
// TclEventType: PROJECT_OPEN_DIALOG
// HOptionPane Error: 'Can't open project 'nicap_test'. Please verify that the project still exists. (Open Project)'
// [GUI Memory]: 94 MB (+96027kb) [00:00:05]
// [Engine Memory]: 818 MB (+706689kb) [00:00:05]
selectButton("PAResourceOtoP.PABaseTab_CANT_OPEN_PROJECT_PLEASE_VERIFY_OK", "OK"); // JButton (A, G)
selectList(PAResourceQtoS.SyntheticaGettingStartedView_RECENT_PROJECTS, "/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.xpr", 0); // q (O, cj)
// bs (cj):  Open Project : addNotify
// Opening Vivado Project: /home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.xpr. Version: Vivado v2017.4 
// TclEventType: DEBUG_PROBE_SET_CHANGE
// Tcl Message: open_project /home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.xpr 
// TclEventType: MSGMGR_MOVEMSG
// TclEventType: FILESET_TARGET_UCF_CHANGE
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_COMPLETED
// TclEventType: FILESET_TARGET_UCF_CHANGE
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_CURRENT
// TclEventType: FILE_SET_CHANGE
// HMemoryUtils.trashcanNow. Engine heap size: 919 MB. GUI used memory: 42 MB. Current time: 5/2/19 12:50:12 PM BST
// TclEventType: FILE_SET_CHANGE
// [Engine Memory]: 955 MB (+100400kb) [00:00:10]
// TclEventType: FILE_SET_CHANGE
// TclEventType: PROJECT_NEW
// [Engine Memory]: 1,007 MB (+3929kb) [00:00:11]
// Tcl Message: open_project /home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.xpr 
// Tcl Message: Scanning sources... Finished scanning sources 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/alex/GitHub/ip-cores/partial_led_1.0'. INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/alex/GitHub/ZyEthCAP/zycap_core'. INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2017.4/data/ip'. 
// Project name: nicap_test; location: /home/alex/GitHub/ZyEthCAP/nicap_extend; part: xc7z020clg400-1
// Tcl Message: open_project: Time (s): cpu = 00:00:12 ; elapsed = 00:00:07 . Memory (MB): peak = 6165.961 ; gain = 194.375 ; free physical = 2205 ; free virtual = 25432 
dismissDialog("Open Project"); // bs (cj)
// TclEventType: DG_ANALYSIS_MSG_RESET
// [Engine Memory]: 1,061 MB (+4549kb) [00:00:14]
// TclEventType: DG_ANALYSIS_MSG_RESET
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Open Synthesized Design]", 15, true); // u (O, cj) - Node
// Run Command: PAResourceCommand.PACommandNames_GOTO_NETLIST_DESIGN
// bs (cj):  Open Synthesized Design : addNotify
// Tcl Message: open_run synth_1 -name synth_1 
// Tcl Message: Design is defaulting to impl run constrset: constrs_1 Design is defaulting to synth run part: xc7z020clg400-1 
// TclEventType: DG_GRAPH_GENERATED
// HMemoryUtils.trashcanNow. Engine heap size: 1,122 MB. GUI used memory: 60 MB. Current time: 5/2/19 12:50:27 PM BST
// [Engine Memory]: 1,191 MB (+80091kb) [00:00:27]
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: POWER_CNS_STALE
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// [Engine Memory]: 1,384 MB (+140424kb) [00:00:41]
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// HMemoryUtils.trashcanNow. Engine heap size: 1,388 MB. GUI used memory: 55 MB. Current time: 5/2/19 12:50:47 PM BST
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: MARK_DEBUG_NET
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: MARK_DEBUG_NET
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// [Engine Memory]: 1,530 MB (+80010kb) [00:00:57]
// [Engine Memory]: 1,782 MB (+184155kb) [00:01:02]
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: TIMING_RESULTS_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 1,904 MB. GUI used memory: 56 MB. Current time: 5/2/19 12:51:07 PM BST
// [Engine Memory]: 1,904 MB (+34993kb) [00:01:03]
// TclEventType: DESIGN_NEW
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// Xgd.load filename: /tools/Xilinx/Vivado/2017.4/data/parts/xilinx/zynq/devint/zynq/xc7z020/xc7z020.xgd; ZipEntry: xc7z020_detail.xgd elapsed time: 0.5s
// Device: addNotify
// DeviceView Instantiated
// [GUI Memory]: 104 MB (+5853kb) [00:01:05]
// TclEventType: CURR_DESIGN_SET
// Tcl Message: INFO: [Project 1-454] Reading design checkpoint '/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo.dcp' for cell 'eth_bridge/bit_buffer' INFO: [Netlist 29-17] Analyzing 505 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Device 21-403] Loading part xc7z020clg400-1 INFO: [Project 1-570] Preparing netlist for logic optimization 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/constrs_1/new/top_io.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_fplan_debug_bu.xdc] 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_fplan_debug_bu.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_io_debug.xdc] 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_io_debug.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_io.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_io.xdc] 
// Tcl Message: INFO: [Project 1-538] Using original IP XDC constraints instead of the XDC constraints in dcp '/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo.dcp' 
// Tcl Message: INFO: [Vivado 12-3272] Current instance is the top level cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst' of design 'synth_1' [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl:16] 
// Tcl Message: Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst' Sourcing Tcl File [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst' 
// Tcl Message: INFO: [Vivado 12-3272] Current instance is the top level cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst' of design 'synth_1' [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl:16] 
// Tcl Message: Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst' Sourcing Tcl File [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_single.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr' 
// Tcl Message: INFO: [Vivado 12-3272] Current instance is the top level cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr' of design 'synth_1' [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_single.tcl:5] 
// Tcl Message: Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_single.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr' Sourcing Tcl File [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_single.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd' 
// Tcl Message: INFO: [Vivado 12-3272] Current instance is the top level cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd' of design 'synth_1' [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_single.tcl:5] 
// Tcl Message: INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). 
// Tcl Message: Generating merged BMM file for the design top 'sys_top'... 
// Tcl Message: INFO: [Project 1-111] Unisim Transformation Summary:   A total of 43 instances were transformed.   RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 43 instances  
// Device view-level: 0.0
// RouteApi: Init Delay Mediator Swing Worker Finished
// ExpRunCommands.openSynthResults elapsed time: 51.1s
// Tcl Message: open_run: Time (s): cpu = 00:00:35 ; elapsed = 00:00:50 . Memory (MB): peak = 7107.410 ; gain = 914.430 ; free physical = 1410 ; free virtual = 24639 
// 'dO' command handler elapsed time: 51 seconds
// M (cj): Critical Messages: addNotify
// [GUI Memory]: 122 MB (+13487kb) [00:01:06]
// Elapsed time: 51 seconds
dismissDialog("Open Synthesized Design"); // bs (cj)
// Tcl Message: update_compile_order -fileset sources_1 
selectButton(PAResourceAtoD.CmdMsgDialog_OK, "OK"); // f (M)
dismissDialog("Critical Messages"); // M (cj)
// Tcl Command: 'rdi::info_commands {opt*}'
// Tcl Command: 'rdi::info_commands {opt_design*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "opt_design", true); // aF (ae, cj)
// Tcl Command: 'opt_design'
// Tcl Command: 'opt_design'
// TclEventType: NETLIST_UPDATE
// Tcl Message: opt_design 
// Tcl Message: Command: opt_design Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: Attempting to get a license: PartialReconfiguration 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Common 17-1540] The version limit for your license is '2019.02' and has expired for new software. A version limit expiration means that, although you may be able to continue to use the current version of tools or IP with this license, you will not be eligible for any updates or new releases. 
// Tcl Message: Feature available: PartialReconfiguration Running DRC as a precondition to command opt_design  Starting DRC Task 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 4 threads 
// TclEventType: TIMING_RESULTS_STALE
// TclEventType: NETLIST_UPDATE
// HMemoryUtils.trashcanNow. Engine heap size: 1,995 MB. GUI used memory: 93 MB. Current time: 5/2/19 12:51:22 PM BST
// Tcl Message: INFO: [Project 1-461] DRC finished with 0 Errors INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message:  Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.84 . Memory (MB): peak = 7142.930 ; gain = 32.016 ; free physical = 1386 ; free virtual = 24615 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// Tcl Message:  Starting Logic Optimization Task  Phase 1 Retarget 
// Tcl Message: INFO: [Opt 31-138] Pushed 10 inverter(s) to 95 load pin(s). INFO: [Opt 31-49] Retargeted 0 cell(s). 
// Tcl Message: Phase 1 Retarget | Checksum: 13ff25ff9  Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.92 . Memory (MB): peak = 7142.930 ; gain = 0.000 ; free physical = 1385 ; free virtual = 24614 
// Tcl Message: INFO: [Opt 31-389] Phase Retarget created 47 cells and removed 120 cells 
// Tcl Message:  Phase 2 Constant propagation 
// Tcl Message: INFO: [Opt 31-138] Pushed 4 inverter(s) to 12 load pin(s). 
// Tcl Message: Phase 2 Constant propagation | Checksum: 1c9fe16a7  Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 7142.930 ; gain = 0.000 ; free physical = 1385 ; free virtual = 24614 
// Tcl Message: INFO: [Opt 31-389] Phase Constant propagation created 95 cells and removed 341 cells 
// Tcl Message:  Phase 3 Sweep 
// Tcl Message: Phase 3 Sweep | Checksum: 149b24956  Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 7142.930 ; gain = 0.000 ; free physical = 1391 ; free virtual = 24619 
// Tcl Message: INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 996 cells 
// Tcl Message:  Phase 4 BUFG optimization Phase 4 BUFG optimization | Checksum: 149b24956  Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 7142.930 ; gain = 0.000 ; free physical = 1390 ; free virtual = 24619 
// Tcl Message: INFO: [Opt 31-389] Phase BUFG optimization created 0 cells and removed 0 cells 
// Tcl Message:  Phase 5 Shift Register Optimization Phase 5 Shift Register Optimization | Checksum: 149b24956  Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 7142.930 ; gain = 0.000 ; free physical = 1391 ; free virtual = 24619 
// Tcl Message: INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells 
// Tcl Message:  Starting Connectivity Check Task  Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.03 . Memory (MB): peak = 7142.930 ; gain = 0.000 ; free physical = 1389 ; free virtual = 24618 Ending Logic Optimization Task | Checksum: 18cbd5a82  Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 7142.930 ; gain = 0.000 ; free physical = 1389 ; free virtual = 24618  Starting Power Optimization Task 
// Tcl Message: INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns. 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// Tcl Message: INFO: [Physopt 32-619] Estimated Timing Summary | WNS=0.825 | TNS=0.000 | INFO: [Pwropt 34-9] Applying IDT optimizations ... INFO: [Pwropt 34-10] Applying ODC optimizations ... 
// [Engine Memory]: 2,349 MB (+366303kb) [00:01:25]
// Tcl Message: Running Vector-less Activity Propagation...  Finished Running Vector-less Activity Propagation 
// TclEventType: POWER_CNS_STALE
// TclEventType: NETLIST_UPDATE
// Tcl Message:   Starting PowerOpt Patch Enables Task 
// Tcl Message: INFO: [Pwropt 34-162] WRITE_MODE attribute of 42 BRAM(s) out of a total of 54 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated. INFO: [Timing 38-35] Done setting XDC timing constraints. INFO: [Pwropt 34-201] Structural ODC has moved 11 WE to EN ports 
// Tcl Message: Number of BRAM Ports augmented: 39 newly gated: 15 Total Ports: 108 Ending PowerOpt Patch Enables Task | Checksum: 1f113bea4  Time (s): cpu = 00:00:00.91 ; elapsed = 00:00:00.61 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1338 ; free virtual = 24571 Ending Power Optimization Task | Checksum: 1f113bea4  Time (s): cpu = 00:00:10 ; elapsed = 00:00:05 . Memory (MB): peak = 7491.434 ; gain = 348.504 ; free physical = 1353 ; free virtual = 24585 
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 23 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered. opt_design completed successfully 
// Tcl Message: opt_design: Time (s): cpu = 00:00:18 ; elapsed = 00:00:14 . Memory (MB): peak = 7491.434 ; gain = 380.520 ; free physical = 1352 ; free virtual = 24585 
// HMemoryUtils.trashcanNow. Engine heap size: 2,311 MB. GUI used memory: 93 MB. Current time: 5/2/19 12:51:32 PM BST
// Elapsed time: 14 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {place*}'
// Tcl Command: 'rdi::info_commands {place_design*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "place_design", true); // aF (ae, cj)
// Tcl Command: 'place_design'
// [GUI Memory]: 129 MB (+975kb) [00:01:32]
// Tcl Command: 'place_design'
// Tcl Message: place_design 
// Tcl Message: Command: place_design Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' INFO: [DRC 23-27] Running DRC with 4 threads INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message: Running DRC as a precondition to command place_design 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 4 threads 
// bs (cj):  Tcl Command Line : addNotify
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message:  Starting Placer Task 
// Tcl Message: INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 4 CPUs 
// Tcl Message:  Phase 1 Placer Initialization  Phase 1.1 Placer Initialization Netlist Sorting 
// Tcl Message: Netlist sorting complete. Time (s): cpu = 00:00:00.04 ; elapsed = 00:00:00.03 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1344 ; free virtual = 24577 
// Tcl Message: Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 1554ee169  Time (s): cpu = 00:00:00.07 ; elapsed = 00:00:00.07 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1343 ; free virtual = 24577 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Netlist sorting complete. Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.02 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1364 ; free virtual = 24597 
// Tcl Message:  Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: f51add65  Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1343 ; free virtual = 24580  Phase 1.3 Build Placer Netlist Model 
// Tcl Message: Phase 1.3 Build Placer Netlist Model | Checksum: 1bdb8ed02  Time (s): cpu = 00:00:08 ; elapsed = 00:00:06 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1321 ; free virtual = 24559  Phase 1.4 Constrain Clocks/Macros Phase 1.4 Constrain Clocks/Macros | Checksum: 1bdb8ed02  Time (s): cpu = 00:00:08 ; elapsed = 00:00:06 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1321 ; free virtual = 24559 Phase 1 Placer Initialization | Checksum: 1bdb8ed02  Time (s): cpu = 00:00:08 ; elapsed = 00:00:06 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1321 ; free virtual = 24559  Phase 2 Global Placement 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 2 Global Placement | Checksum: 191674255  Time (s): cpu = 00:00:21 ; elapsed = 00:00:12 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1301 ; free virtual = 24543  Phase 3 Detail Placement  Phase 3.1 Commit Multi Column Macros Phase 3.1 Commit Multi Column Macros | Checksum: 191674255  Time (s): cpu = 00:00:21 ; elapsed = 00:00:12 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1301 ; free virtual = 24543  Phase 3.2 Commit Most Macros & LUTRAMs 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 1c3af9d57  Time (s): cpu = 00:00:23 ; elapsed = 00:00:13 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1300 ; free virtual = 24539  Phase 3.3 Area Swap Optimization Phase 3.3 Area Swap Optimization | Checksum: 1988a7f7d  Time (s): cpu = 00:00:23 ; elapsed = 00:00:13 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1300 ; free virtual = 24539  Phase 3.4 Pipeline Register Optimization Phase 3.4 Pipeline Register Optimization | Checksum: 1988a7f7d  Time (s): cpu = 00:00:23 ; elapsed = 00:00:13 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1300 ; free virtual = 24539  Phase 3.5 Small Shape Detail Placement 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message:  Phase 3.5.1 Place Remaining Phase 3.5.1 Place Remaining | Checksum: 19ea73574  Time (s): cpu = 00:00:26 ; elapsed = 00:00:16 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1289 ; free virtual = 24528 Phase 3.5 Small Shape Detail Placement | Checksum: 19ea73574  Time (s): cpu = 00:00:26 ; elapsed = 00:00:16 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1291 ; free virtual = 24531  Phase 3.6 Re-assign LUT pins 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 3.6 Re-assign LUT pins | Checksum: 1b27b998c  Time (s): cpu = 00:00:27 ; elapsed = 00:00:16 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1294 ; free virtual = 24534  Phase 3.7 Pipeline Register Optimization Phase 3.7 Pipeline Register Optimization | Checksum: 1b27b998c  Time (s): cpu = 00:00:27 ; elapsed = 00:00:17 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1294 ; free virtual = 24534 Phase 3 Detail Placement | Checksum: 1b27b998c  Time (s): cpu = 00:00:27 ; elapsed = 00:00:17 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1294 ; free virtual = 24534  Phase 4 Post Placement Optimization and Clean-Up  Phase 4.1 Post Commit Optimization 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message:  Phase 4.1.1 Post Placement Optimization Post Placement Optimization Initialization | Checksum: 16644b81a  Phase 4.1.1.1 BUFG Insertion 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 4 CPUs INFO: [Place 46-31] BUFG insertion identified 0 candidate nets, 0 success, 0 skipped for placement/routing, 0 skipped for timing, 0 skipped for netlist change reason. 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 4.1.1.1 BUFG Insertion | Checksum: 16644b81a  Time (s): cpu = 00:00:30 ; elapsed = 00:00:18 . Memory (MB): peak = 7491.434 ; gain = 0.000 ; free physical = 1302 ; free virtual = 24541 
// TclEventType: PLACEDB_MODIFIY_PRE
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 2,314 MB. GUI used memory: 83 MB. Current time: 5/2/19 12:51:57 PM BST
// Engine heap size: 2,315 MB. GUI used memory: 84 MB. Current time: 5/2/19 12:51:57 PM BST
// TclEventType: DESIGN_CLOSE
// Tcl Message: INFO: [Place 30-746] Post Placement Timing Summary WNS=0.363. For the most accurate timing information please run report_timing. 
// TclEventType: DESIGN_CLOSE
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 2,315 MB. GUI used memory: 64 MB. Current time: 5/2/19 12:51:58 PM BST
// TclEventType: DESIGN_NEW
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// Device: addNotify
// DeviceView Instantiated
// Device view-level: 0.0
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 16 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered. place_design completed successfully 
// Tcl Message: place_design: Time (s): cpu = 00:00:40 ; elapsed = 00:00:23 . Memory (MB): peak = 7500.441 ; gain = 9.008 ; free physical = 1300 ; free virtual = 24539 
// RouteApi: Init Delay Mediator Swing Worker Finished
// Elapsed time: 24 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {route*}'
// Tcl Command: 'rdi::info_commands {route_design*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "route_design", true); // aF (ae, cj)
// Tcl Command: 'route_design'
// Tcl Command: 'route_design'
// Tcl Message: route_design 
// Tcl Message: Command: route_design Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: Running DRC as a precondition to command route_design 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 4 threads 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message:  
// Tcl Message:  Starting Routing Task 
// Tcl Message: INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 4 CPUs 
// Tcl Message: Checksum: PlaceDB: 45397025 ConstDB: 0 ShapeSum: 58866a02 RouteDB: 0 
// Tcl Message:  Phase 1 Build RT Design 
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: Phase 1 Build RT Design | Checksum: 180419911  Time (s): cpu = 00:00:18 ; elapsed = 00:00:14 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1153 ; free virtual = 24393 
// Tcl Message: Post Restoration Checksum: NetGraph: baa57193 NumContArr: 1151febc Constraints: b44a28c2 Timing: 0 
// Tcl Message:  Phase 2 Router Initialization  Phase 2.1 Create Timer Phase 2.1 Create Timer | Checksum: 180419911  Time (s): cpu = 00:00:18 ; elapsed = 00:00:15 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1152 ; free virtual = 24393  Phase 2.2 Fix Topology Constraints Phase 2.2 Fix Topology Constraints | Checksum: 180419911  Time (s): cpu = 00:00:19 ; elapsed = 00:00:15 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1131 ; free virtual = 24372  Phase 2.3 Pre Route Cleanup Phase 2.3 Pre Route Cleanup | Checksum: 180419911  Time (s): cpu = 00:00:19 ; elapsed = 00:00:15 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1131 ; free virtual = 24372 
// Tcl Message:  Number of Nodes with overlaps = 0 
// Tcl Message:  Phase 2.4 Update Timing 
// Tcl Message: Phase 2.4 Update Timing | Checksum: 1556df59c  Time (s): cpu = 00:00:23 ; elapsed = 00:00:17 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1115 ; free virtual = 24356 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.259  | TNS=0.000  | WHS=-0.363 | THS=-245.036|  
// Tcl Message: Phase 2 Router Initialization | Checksum: 222a2c4a5  Time (s): cpu = 00:00:24 ; elapsed = 00:00:18 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1115 ; free virtual = 24356  Phase 3 Initial Routing 
// Tcl Message: Phase 3 Initial Routing | Checksum: 20bbf4a3f  Time (s): cpu = 00:00:28 ; elapsed = 00:00:19 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1116 ; free virtual = 24357  Phase 4 Rip-up And Reroute  Phase 4.1 Global Iteration 0 
// Tcl Message:  Number of Nodes with overlaps = 1545 
// Tcl Message:  Number of Nodes with overlaps = 198  Number of Nodes with overlaps = 43 
// Tcl Message:  Number of Nodes with overlaps = 8 
// Tcl Message:  Number of Nodes with overlaps = 6  Number of Nodes with overlaps = 1 
// Tcl Message:  Number of Nodes with overlaps = 1 
// Tcl Message:  Number of Nodes with overlaps = 0 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.637  | TNS=0.000  | WHS=N/A    | THS=N/A    |  
// Tcl Message: Phase 4.1 Global Iteration 0 | Checksum: 2558fa083  Time (s): cpu = 00:00:43 ; elapsed = 00:00:24 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1088 ; free virtual = 24336  Phase 4.2 Global Iteration 1 
// Tcl Message:  Number of Nodes with overlaps = 4 
// Tcl Message:  Number of Nodes with overlaps = 0 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.637  | TNS=0.000  | WHS=N/A    | THS=N/A    |  
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 6.1.1 Update Timing | Checksum: 2c2a61af2  Time (s): cpu = 00:00:47 ; elapsed = 00:00:26 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1111 ; free virtual = 24352 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.651  | TNS=0.000  | WHS=0.024  | THS=0.000  |  
// Tcl Message: Phase 6.1 Hold Fix Iter | Checksum: 2b1e69563  Time (s): cpu = 00:00:47 ; elapsed = 00:00:26 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1111 ; free virtual = 24352 Phase 6 Post Hold Fix | Checksum: 2b1e69563  Time (s): cpu = 00:00:47 ; elapsed = 00:00:26 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1111 ; free virtual = 24352  Phase 7 Route finalize 
// Tcl Message:  Router Utilization Summary   Global Vertical Routing Utilization    = 2.58445 %   Global Horizontal Routing Utilization  = 3.58105 %   Routable Net Status*   *Does not include unroutable nets such as driverless and loadless.   Run report_route_status for detailed report.   Number of Failed Nets               = 0   Number of Unrouted Nets             = 0   Number of Partially Routed Nets     = 0   Number of Node Overlaps             = 0  
// Tcl Message: Phase 7 Route finalize | Checksum: 2c6c78cd3  Time (s): cpu = 00:00:47 ; elapsed = 00:00:27 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1111 ; free virtual = 24352  Phase 8 Verifying routed nets 
// Tcl Message:   Verification completed successfully 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 8 Verifying routed nets | Checksum: 2c6c78cd3  Time (s): cpu = 00:00:47 ; elapsed = 00:00:27 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1110 ; free virtual = 24351  Phase 9 Depositing Routes 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 9 Depositing Routes | Checksum: 2864fd4d2  Time (s): cpu = 00:00:48 ; elapsed = 00:00:28 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1099 ; free virtual = 24343  Phase 10 Post Router Timing 
// Tcl Message: INFO: [Route 35-57] Estimated Timing Summary | WNS=0.651  | TNS=0.000  | WHS=0.024  | THS=0.000  |  INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary. 
// Tcl Message: Phase 10 Post Router Timing | Checksum: 2864fd4d2  Time (s): cpu = 00:00:48 ; elapsed = 00:00:28 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1099 ; free virtual = 24343 
// Tcl Message: INFO: [Route 35-16] Router Completed Successfully 
// TclEventType: ROUTE_DESIGN
// Tcl Message:  Time (s): cpu = 00:00:50 ; elapsed = 00:00:29 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1116 ; free virtual = 24358 
// Tcl Message:  Routing Is Done. 
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 13 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered. route_design completed successfully 
// Tcl Message: route_design: Time (s): cpu = 00:00:54 ; elapsed = 00:00:33 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1115 ; free virtual = 24357 
// HMemoryUtils.trashcanNow. Engine heap size: 2,319 MB. GUI used memory: 120 MB. Current time: 5/2/19 12:52:38 PM BST
// Elapsed time: 33 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {write*}'
// Tcl Command: 'rdi::info_commands {write_check*}'
// Tcl Command: 'rdi::info_commands {write_check*}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {for}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {force}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Elapsed time: 43 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_checkpoint -force ./nicap_extend/checkpoints/top_mode1_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'write_checkpoint -force ./nicap_extend/checkpoints/top_mode1_routed.dcp'
// Tcl Command: 'write_checkpoint -force ./nicap_extend/checkpoints/top_mode1_routed.dcp'
// Tcl Message: write_checkpoint -force ./nicap_extend/checkpoints/top_mode1_routed.dcp 
// Tcl Message: Writing placer database... 
// Tcl Message: Writing XDEF routing. Writing XDEF routing logical nets. Writing XDEF routing special nets. 
// Tcl Message: Write XDEF Complete: Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.66 . Memory (MB): peak = 7500.441 ; gain = 0.000 ; free physical = 1069 ; free virtual = 24336 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Common 17-1381] The checkpoint '/home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/top_mode1_routed.dcp' has been generated. 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/top_mode1_routed.dcp 
dismissDialog("Tcl Command Line"); // bs (cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper)]", 3); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1)]", 6); // aW (O, cj)
// [GUI Memory]: 136 MB (+314kb) [00:03:26]
// [GUI Memory]: 147 MB (+4493kb) [00:03:31]
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, IP Integrator, Open Block Design]", 7, false); // u (O, cj)
// Run Command: PAResourceCommand.PACommandNames_OPEN_BLOCK_DESIGN
// bs (cj):  Open Block Design : addNotify
// TclEventType: LOAD_FEATURE
// Tcl Message: open_bd_design {/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/bd/design_1/design_1.bd} 
// TclEventType: RSB_CHANGE_CURRENT_DIAGRAM
// TclEventType: RSB_PROPERTY_CHANGE
// TclEventType: LOAD_FEATURE
// TclEventType: RSB_PROPERTY_CHANGE
// TclEventType: RSB_OPEN_DIAGRAM
// TclEventType: RSB_CONNECTION_CHANGE
// TclEventType: RSB_LOCK_CHANGE
// TclEventType: RSB_CHANGE_CURRENT_DIAGRAM
// TclEventType: RSB_LOCK_CHANGE
// TclEventType: RSB_CHANGE_CURRENT_DIAGRAM
// 'bA' command handler elapsed time: 3 seconds
dismissDialog("Open Block Design"); // bs (cj)
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
selectView(PAResourceOtoP.PAViews_SYSTEM, "System", 659, 273, 1787, 948, false, false, false, true, false); // fJ (k, cj) - Popup Trigger
selectMenu(PAResourceQtoS.SystemBuilderView_EXPAND_COLLAPSE, "Expand/Collapse"); // Z (ai, Popup.HeavyWeightWindow)
selectMenu(PAResourceQtoS.SystemBuilderView_ORIENTATION, "Orientation"); // Z (ai, Popup.HeavyWeightWindow)
selectMenuItem(PAResourceCommand.PACommandNames_EDIT_IN_IP_PACKAGER, "Edit in IP Packager"); // ac (ai, Popup.HeavyWeightWindow)
// Run Command: PAResourceCommand.PACommandNames_EDIT_IN_IP_PACKAGER
// k (cj): Edit in IP Packager: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (k)
// bs (cj):  Edit in IP Packager : addNotify
selectButton("PAResourceEtoH.EditIPProjectNameChooser_PROJECT_FOLDER_ALREADY_EXISTS_OK_OK", "OK"); // JButton (A, H)
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_ADD
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_NEW
// Tcl Message: ipx::edit_ip_in_project -upgrade true -name partial_led_v1_0_project -directory /home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.tmp/partial_led_v1_0_project /home/alex/GitHub/ip-cores/partial_led_1.0/component.xml 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2017.4/data/ip'. 
// TclEventType: FILE_SET_OPTIONS_CHANGE
// TclEventType: RSB_BITABEN_IPREPODATA_REFRESH
// TclEventType: PACKAGER_MESSAGE_RESET
// TclEventType: FILE_SET_CHANGE
// TclEventType: PACKAGER_CURRENT_CORE
// Run Command: PAResourceCommand.PACommandNames_IP_PACKAGER
// [Engine Memory]: 2,467 MB (+416kb) [00:03:45]
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/alex/GitHub/ip-cores/partial_led_1.0'. INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/alex/GitHub/ZyEthCAP/zycap_core'. INFO: [IP_Flow 19-795] Syncing license key meta-data 
// TclEventType: PACKAGER_MESSAGE_RESET
// TclEventType: PACKAGER_MESSAGE_UPDATE
// 'i' command handler elapsed time: 8 seconds
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
dismissDialog("Edit in IP Packager"); // bs (cj)
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TVALID_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TVALID_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TLAST_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TLAST_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TLAST_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TLAST_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TLAST_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TLAST_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TLAST_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TLAST_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// TclEventType: DG_ANALYSIS_MSG_RESET
// HMemoryUtils.trashcanNow. Engine heap size: 2,506 MB. GUI used memory: 142 MB. Current time: 5/2/19 12:53:52 PM BST
// TclEventType: DG_ANALYSIS_MSG_RESET
// [GUI Memory]: 155 MB (+262kb) [00:03:48]
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Project Summary", 0); // k (j, cj)
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// Tcl Message: update_compile_order -fileset sources_1 
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, partial_led_test_v1_0 (partial_led_v1_0.v)]", 1); // B (D, cj)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, partial_led_test_v1_0 (partial_led_v1_0.v), partial_led_test_v1_0_S00_AXI_inst : partial_led_test_v1_0_S00_AXI (partial_led_v1_0_S00_AXI.v)]", 2, false); // B (D, cj)
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, partial_led_test_v1_0 (partial_led_v1_0.v), partial_led_test_v1_0_S00_AXI_inst : partial_led_test_v1_0_S00_AXI (partial_led_v1_0_S00_AXI.v)]", 2, false, false, false, false, false, true); // B (D, cj) - Double Click
// [GUI Memory]: 165 MB (+1983kb) [00:03:54]
selectCodeEditor("partial_led_v1_0_S00_AXI.v", 609, 222); // cd (w, cj)
selectCodeEditor("partial_led_v1_0_S00_AXI.v", 611, 327); // cd (w, cj)
selectCodeEditor("partial_led_v1_0_S00_AXI.v", 610, 337); // cd (w, cj)
selectCodeEditor("partial_led_v1_0_S00_AXI.v", 607, 353); // cd (w, cj)
selectCodeEditor("partial_led_v1_0_S00_AXI.v", 211, 383); // cd (w, cj)
// TclEventType: PACKAGER_MESSAGE_UPDATE
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, partial_led_test_v1_0 (partial_led_v1_0.v)]", 1, true); // B (D, cj) - Node
selectTab((HResource) null, (HResource) null, "Tcl Console", 0); // aF (Q, cj)
// Tcl Command: 'rdi::info_commands {syn*}'
// Tcl Command: 'rdi::info_commands {synth*}'
// Tcl Command: 'rdi::info_commands {synth*}'
// Tcl Command: 'rdi::info_commands {synth_*}'
// Tcl Command: 'rdi::info_commands {synth_de*}'
// Tcl Command: 'rdi::info_commands {synth_de*}'
// Tcl Command: 'rdi::match_options {synth_design} {}'
// Tcl Command: 'rdi::match_options {synth_design} {top}'
// Elapsed time: 60 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "synth_design -top"); // aF (ae, cj)
// [GUI Memory]: 177 MB (+3854kb) [00:05:22]
// Tcl Command: 'rdi::match_options {synth_design} {}'
// Tcl Command: 'rdi::match_options {synth_design} {}'
// Tcl Command: 'rdi::match_options {synth_design} {par}'
// Tcl Command: 'rdi::match_options {synth_design} {part}'
// Elapsed time: 56 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "synth_design -top partial_led_test_v1_0 -mode out_of_context -part xc7z020clg484-1", true); // aF (ae, cj)
// Tcl Command: 'synth_design -top partial_led_test_v1_0 -mode out_of_context -part xc7z020clg484-1'
// Tcl Command: 'synth_design -top partial_led_test_v1_0 -mode out_of_context -part xc7z020clg484-1'
// TclEventType: MSGMGR_REFRESH_MSG
// Tcl Message: synth_design -top partial_led_test_v1_0 -mode out_of_context -part xc7z020clg484-1 
// Tcl Message: Command: synth_design -top partial_led_test_v1_0 -mode out_of_context -part xc7z020clg484-1 Starting synth_design Attempting to get a license for feature 'Synthesis' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Synthesis' and/or device 'xc7z020' 
// Tcl Message: INFO: Launching helper process for spawning children vivado processes INFO: Helper process launched with PID 18850  
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: --------------------------------------------------------------------------------- 
// Tcl Message: Starting Synthesize : Time (s): cpu = 00:00:07 ; elapsed = 00:00:07 . Memory (MB): peak = 7510.395 ; gain = 0.000 ; free physical = 775 ; free virtual = 24107 
// Tcl Message: --------------------------------------------------------------------------------- 
// Tcl Message: INFO: [Synth 8-638] synthesizing module 'partial_led_test_v1_0' [/home/alex/GitHub/ip-cores/partial_led_1.0/hdl/partial_led_v1_0.v:4] 
// Tcl Message: 	Parameter C_S00_AXI_DATA_WIDTH bound to: 32 - type: integer  	Parameter C_S00_AXI_ADDR_WIDTH bound to: 4 - type: integer  
// Tcl Message: INFO: [Synth 8-638] synthesizing module 'partial_led_test_v1_0_S00_AXI' [/home/alex/GitHub/ip-cores/partial_led_1.0/hdl/partial_led_v1_0_S00_AXI.v:4] 
// Tcl Message: 	Parameter C_S_AXI_DATA_WIDTH bound to: 32 - type: integer  	Parameter C_S_AXI_ADDR_WIDTH bound to: 4 - type: integer  	Parameter ADDR_LSB bound to: 2 - type: integer  	Parameter OPT_MEM_ADDR_BITS bound to: 1 - type: integer  
// Tcl Message: INFO: [Synth 8-226] default block is never used [/home/alex/GitHub/ip-cores/partial_led_1.0/hdl/partial_led_v1_0_S00_AXI.v:222] INFO: [Synth 8-226] default block is never used [/home/alex/GitHub/ip-cores/partial_led_1.0/hdl/partial_led_v1_0_S00_AXI.v:363] INFO: [Synth 8-256] done synthesizing module 'partial_led_test_v1_0_S00_AXI' (1#1) [/home/alex/GitHub/ip-cores/partial_led_1.0/hdl/partial_led_v1_0_S00_AXI.v:4] INFO: [Synth 8-256] done synthesizing module 'partial_led_test_v1_0' (2#1) [/home/alex/GitHub/ip-cores/partial_led_1.0/hdl/partial_led_v1_0.v:4] 
// Tcl Message: --------------------------------------------------------------------------------- 
// Tcl Message: Finished Synthesize : Time (s): cpu = 00:00:07 ; elapsed = 00:00:08 . Memory (MB): peak = 7533.637 ; gain = 23.242 ; free physical = 786 ; free virtual = 24119 
// Tcl Message: --------------------------------------------------------------------------------- 
// Tcl Message: --------------------------------------------------------------------------------- 
// Tcl Message: Finished Constraint Validation : Time (s): cpu = 00:00:07 ; elapsed = 00:00:08 . Memory (MB): peak = 7533.637 ; gain = 23.242 ; free physical = 787 ; free virtual = 24120 
// Tcl Message: --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- Start Loading Part and Timing Information --------------------------------------------------------------------------------- Loading part: xc7z020clg484-1 
// Tcl Message: INFO: [Device 21-403] Loading part xc7z020clg484-1 
// Tcl Message: --------------------------------------------------------------------------------- 
// Tcl Message: Finished Loading Part and Timing Information : Time (s): cpu = 00:00:07 ; elapsed = 00:00:08 . Memory (MB): peak = 7541.641 ; gain = 31.246 ; free physical = 787 ; free virtual = 24120 
// Tcl Message: --------------------------------------------------------------------------------- 
// Tcl Message: --------------------------------------------------------------------------------- 
// Tcl Message: Finished RTL Optimization Phase 2 : Time (s): cpu = 00:00:08 ; elapsed = 00:00:08 . Memory (MB): peak = 7557.656 ; gain = 47.262 ; free physical = 780 ; free virtual = 24113 
// Tcl Message: ---------------------------------------------------------------------------------  Report RTL Partitions:  +-+--------------+------------+----------+ | |RTL Partition |Replication |Instances | +-+--------------+------------+----------+ +-+--------------+------------+----------+ 
// Tcl Message: No constraint files found. 
// Tcl Message: No constraint files found. 
// Tcl Message: --------------------------------------------------------------------------------- Start Cross Boundary and Area Optimization --------------------------------------------------------------------------------- 
// Tcl Message: INFO: [Synth 8-3886] merging instance 'partial_led_test_v1_0_S00_AXI_inst/axi_rresp_reg[0]' (FDRE) to 'partial_led_test_v1_0_S00_AXI_inst/axi_rresp_reg[1]' INFO: [Synth 8-3333] propagating constant 0 across sequential element (\partial_led_test_v1_0_S00_AXI_inst/axi_rresp_reg[1] ) INFO: [Synth 8-3886] merging instance 'partial_led_test_v1_0_S00_AXI_inst/axi_bresp_reg[0]' (FDRE) to 'partial_led_test_v1_0_S00_AXI_inst/axi_bresp_reg[1]' INFO: [Synth 8-3333] propagating constant 0 across sequential element (\partial_led_test_v1_0_S00_AXI_inst/axi_bresp_reg[1] ) 
// Tcl Message: --------------------------------------------------------------------------------- 
// Tcl Message: Finished Cross Boundary and Area Optimization : Time (s): cpu = 00:00:08 ; elapsed = 00:00:08 . Memory (MB): peak = 7581.680 ; gain = 71.285 ; free physical = 771 ; free virtual = 24104 
// Tcl Message: ---------------------------------------------------------------------------------  Report RTL Partitions:  +-+--------------+------------+----------+ | |RTL Partition |Replication |Instances | +-+--------------+------------+----------+ +-+--------------+------------+----------+ 
// Tcl Message: No constraint files found. 
// Tcl Message: --------------------------------------------------------------------------------- Start Timing Optimization --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- 
// Tcl Message: Finished Timing Optimization : Time (s): cpu = 00:00:08 ; elapsed = 00:00:08 . Memory (MB): peak = 7581.680 ; gain = 71.285 ; free physical = 771 ; free virtual = 24104 
// Tcl Message: ---------------------------------------------------------------------------------  Report RTL Partitions:  +-+--------------+------------+----------+ | |RTL Partition |Replication |Instances | +-+--------------+------------+----------+ +-+--------------+------------+----------+ --------------------------------------------------------------------------------- Start Technology Mapping --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- 
// Tcl Message: Finished Technology Mapping : Time (s): cpu = 00:00:08 ; elapsed = 00:00:08 . Memory (MB): peak = 7581.680 ; gain = 71.285 ; free physical = 770 ; free virtual = 24103 
// Tcl Message: --------------------------------------------------------------------------------- 
// Tcl Message: Finished IO Insertion : Time (s): cpu = 00:00:09 ; elapsed = 00:00:09 . Memory (MB): peak = 7581.680 ; gain = 71.285 ; free physical = 769 ; free virtual = 24102 
// Tcl Message: Finished Renaming Generated Instances : Time (s): cpu = 00:00:09 ; elapsed = 00:00:09 . Memory (MB): peak = 7581.680 ; gain = 71.285 ; free physical = 769 ; free virtual = 24102 
// Tcl Message: ---------------------------------------------------------------------------------  Report RTL Partitions:  +-+--------------+------------+----------+ | |RTL Partition |Replication |Instances | +-+--------------+------------+----------+ +-+--------------+------------+----------+ --------------------------------------------------------------------------------- Start Rebuilding User Hierarchy --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- 
// Tcl Message: Finished Rebuilding User Hierarchy : Time (s): cpu = 00:00:09 ; elapsed = 00:00:09 . Memory (MB): peak = 7581.680 ; gain = 71.285 ; free physical = 769 ; free virtual = 24102 
// Tcl Message: --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- Start Renaming Generated Ports --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- 
// Tcl Message: Finished Renaming Generated Ports : Time (s): cpu = 00:00:09 ; elapsed = 00:00:09 . Memory (MB): peak = 7581.680 ; gain = 71.285 ; free physical = 769 ; free virtual = 24102 
// Tcl Message: --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- Start Handling Custom Attributes --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- 
// Tcl Message: Finished Handling Custom Attributes : Time (s): cpu = 00:00:09 ; elapsed = 00:00:09 . Memory (MB): peak = 7581.680 ; gain = 71.285 ; free physical = 769 ; free virtual = 24102 
// Tcl Message: --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- Start Renaming Generated Nets --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- 
// Tcl Message: Finished Renaming Generated Nets : Time (s): cpu = 00:00:09 ; elapsed = 00:00:09 . Memory (MB): peak = 7581.680 ; gain = 71.285 ; free physical = 769 ; free virtual = 24102 
// Tcl Message: --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- Start Writing Synthesis Report ---------------------------------------------------------------------------------  Report BlackBoxes:  +-+--------------+----------+ | |BlackBox name |Instances | +-+--------------+----------+ +-+--------------+----------+ 
// Tcl Message:  Report Cell Usage:  +------+-------+------+ |      |Cell   |Count | +------+-------+------+ |1     |CARRY4 |     6| |2     |LUT1   |    15| |3     |LUT2   |    18| |4     |LUT3   |    20| |5     |LUT4   |    38| |6     |LUT5   |    15| |7     |LUT6   |    45| |8     |FDRE   |   197| +------+-------+------+ 
// Tcl Message:  Report Instance Areas:  +------+-------------------------------------+------------------------------+------+ |      |Instance                             |Module                        |Cells | +------+-------------------------------------+------------------------------+------+ |1     |top                                  |                              |   354| |2     |  partial_led_test_v1_0_S00_AXI_inst |partial_led_test_v1_0_S00_AXI |   354| +------+-------------------------------------+------------------------------+------+ --------------------------------------------------------------------------------- 
// Tcl Message: Finished Writing Synthesis Report : Time (s): cpu = 00:00:09 ; elapsed = 00:00:09 . Memory (MB): peak = 7581.680 ; gain = 71.285 ; free physical = 769 ; free virtual = 24102 
// Tcl Message: --------------------------------------------------------------------------------- Synthesis finished with 0 errors, 0 critical warnings and 22 warnings. Synthesis Optimization Runtime : Time (s): cpu = 00:00:09 ; elapsed = 00:00:09 . Memory (MB): peak = 7581.680 ; gain = 71.285 ; free physical = 770 ; free virtual = 24103 Synthesis Optimization Complete : Time (s): cpu = 00:00:09 ; elapsed = 00:00:09 . Memory (MB): peak = 7581.688 ; gain = 71.285 ; free physical = 770 ; free virtual = 24103 
// [Engine Memory]: 2,595 MB (+5021kb) [00:06:26]
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 2,621 MB. GUI used memory: 124 MB. Current time: 5/2/19 12:56:31 PM BST
// TclEventType: DESIGN_NEW
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// Device: addNotify
// DeviceView Instantiated
// TclEventType: CURR_DESIGN_SET
// Tcl Message: INFO: [Project 1-571] Translating synthesized netlist INFO: [Netlist 29-17] Analyzing 6 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-570] Preparing netlist for logic optimization INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). INFO: [Project 1-111] Unisim Transformation Summary: No Unisim elements were transformed.  
// Device view-level: 0.0
// Tcl Message: INFO: [Common 17-83] Releasing license: Synthesis 
// Tcl Message: 19 Infos, 22 Warnings, 0 Critical Warnings and 0 Errors encountered. synth_design completed successfully 
// Tcl Message: synth_design: Time (s): cpu = 00:00:14 ; elapsed = 00:00:12 . Memory (MB): peak = 7692.480 ; gain = 182.086 ; free physical = 704 ; free virtual = 24038 
// Tcl Message: design_1 
// Elapsed time: 13 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {write*}'
// Tcl Command: 'rdi::info_commands {write_c*}'
// Tcl Command: 'rdi::info_commands {write_check*}'
// Tcl Command: 'rdi::info_commands {write_check*}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {for}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {forc}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {chec}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {chec}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {}'
// [Engine Memory]: 2,731 MB (+6564kb) [00:06:39]
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {up.dcp}'
// Elapsed time: 13 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_checkpoint -force ./nicap_extend/checkpoints/up.dcp"); // aF (ae, cj)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "partial_led_v1_0_S00_AXI.v", 3); // k (j, cj)
// HMemoryUtils.trashcanNow. Engine heap size: 2,776 MB. GUI used memory: 137 MB. Current time: 5/2/19 12:56:47 PM BST
// [Engine Memory]: 3,004 MB (+142873kb) [00:06:46]
// RouteApi::initDelayMediator elapsed time: 17.2s
// RouteApi: Init Delay Mediator Swing Worker Finished
applyEnter(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_checkpoint -force ./nicap_extend/checkpoints/up.dcp"); // aF (ae, cj)
// Tcl Command: 'write_checkpoint -force ./nicap_extend/checkpoints/up.dcp'
// Tcl Command: 'write_checkpoint -force ./nicap_extend/checkpoints/up.dcp'
// Tcl Message: write_checkpoint -force ./nicap_extend/checkpoints/up.dcp 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. INFO: [Common 17-1381] The checkpoint '/home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/up.dcp' has been generated. 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/up.dcp 
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Open Synthesized Design]", 15, true); // u (O, cj) - Node
// Run Command: PAResourceCommand.PACommandNames_GOTO_NETLIST_DESIGN
// bs (cj):  Open Synthesized Design : addNotify
// Tcl Message: current_project nicap_test 
// Tcl Message: open_run synth_1 -name synth_1_1 
// Tcl Message: Design is defaulting to impl run constrset: constrs_1 Design is defaulting to synth run part: xc7z020clg400-1 
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: POWER_CNS_STALE
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// [Engine Memory]: 3,271 MB (+122986kb) [00:06:57]
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: MARK_DEBUG_NET
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: MARK_DEBUG_NET
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: TIMING_RESULTS_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 3,384 MB. GUI used memory: 132 MB. Current time: 5/2/19 12:57:06 PM BST
// TclEventType: DESIGN_NEW
// [Engine Memory]: 3,440 MB (+5020kb) [00:07:02]
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// Device: addNotify
// DeviceView Instantiated
// TclEventType: CURR_DESIGN_SET
// Device view-level: 0.0
// RouteApi: Init Delay Mediator Swing Worker Finished
// Tcl Message: INFO: [Project 1-454] Reading design checkpoint '/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo.dcp' for cell 'eth_bridge/bit_buffer' INFO: [Netlist 29-17] Analyzing 505 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/constrs_1/new/top_io.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_fplan_debug_bu.xdc] 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_fplan_debug_bu.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_io_debug.xdc] 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_io_debug.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_io.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_io.xdc] 
// Tcl Message: INFO: [Project 1-538] Using original IP XDC constraints instead of the XDC constraints in dcp '/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo.dcp' 
// Tcl Message: INFO: [Vivado 12-3272] Current instance is the top level cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst' of design 'synth_1_1' [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl:16] 
// Tcl Message: Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst' Sourcing Tcl File [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst' 
// Tcl Message: INFO: [Vivado 12-3272] Current instance is the top level cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst' of design 'synth_1_1' [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl:16] 
// Tcl Message: Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst' Sourcing Tcl File [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_single.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr' 
// Tcl Message: INFO: [Vivado 12-3272] Current instance is the top level cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr' of design 'synth_1_1' [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_single.tcl:5] 
// Tcl Message: Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_single.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr' Sourcing Tcl File [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_single.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd' 
// Tcl Message: INFO: [Vivado 12-3272] Current instance is the top level cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd' of design 'synth_1_1' [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_single.tcl:5] 
// Tcl Message: INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). 
// Tcl Message: Generating merged BMM file for the design top 'sys_top'... 
// Tcl Message: INFO: [Project 1-111] Unisim Transformation Summary:   A total of 43 instances were transformed.   RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 43 instances  
// Tcl Message: open_run: Time (s): cpu = 00:00:11 ; elapsed = 00:00:10 . Memory (MB): peak = 8424.059 ; gain = 319.430 ; free physical = 199 ; free virtual = 23482 
// 'dO' command handler elapsed time: 10 seconds
// M (cj): Critical Messages: addNotify
// Elapsed time: 10 seconds
dismissDialog("Open Synthesized Design"); // bs (cj)
selectButton(PAResourceAtoD.CmdMsgDialog_OK, "OK"); // f (M)
dismissDialog("Critical Messages"); // M (cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper)]", 3); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1)]", 6); // aW (O, cj)
// PAPropertyPanels.initPanels (partial_led_0 (design_1_partial_led_0_0)) elapsed time: 0.2s
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1), partial_led_0 (design_1_partial_led_0_0)]", 18, false); // aW (O, cj)
// Tcl Command: 'rdi::info_commands {update*}'
// Tcl Command: 'rdi::info_commands {update_design*}'
// Tcl Command: 'rdi::match_options {update_design} {cell}'
// Elapsed time: 28 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "update_design -cell"); // aF (ae, cj)
selectMenuItem(RDIResourceCommand.RDICommands_COPY, "Copy"); // ac (ai, Popup.HeavyWeightWindow)
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {update_design} {design_1_wrapper/design_1_i/} {partial_led_0}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "update_design -cell design_1_wrapper/design_1_i/partial_led_0"); // aF (ae, cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {update_design} {design_1_wrapper/design_1_i/} {partial_led_0 }'
// Tcl Command: 'rdi::match_options {update_design} {}'
// Tcl Command: 'rdi::match_options {update_design} {black}'
// Tcl Command: 'rdi::match_options {update_design} {black}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {update_design} {design_1_wrapper/design_1_i/} {partial_led_0 -black_box }'
// Elapsed time: 23 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "update_design -cell design_1_wrapper/design_1_i/partial_led_0 -black_box", true); // aF (ae, cj)
// Tcl Command: 'update_design -cell design_1_wrapper/design_1_i/partial_led_0 -black_box'
// Tcl Command: 'update_design -cell design_1_wrapper/design_1_i/partial_led_0 -black_box'
// TclEventType: NETLIST_UPDATE
// Tcl Message: update_design -cell design_1_wrapper/design_1_i/partial_led_0 -black_box 
// Tcl Message: INFO: [Designutils 20-2277] Running 'update_design -black_box' on cell design_1_wrapper/design_1_i/partial_led_0. The cell has HD.RECONFIGURABLE property set to true and it will be turned into a black-box cell after this command. 
// HMemoryUtils.trashcanNow. Engine heap size: 3,407 MB. GUI used memory: 148 MB. Current time: 5/2/19 12:58:16 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 3,407 MB. GUI used memory: 147 MB. Current time: 5/2/19 12:58:16 PM BST
// [GUI Memory]: 187 MB (+2034kb) [00:08:12]
// HMemoryUtils.trashcanNow. Engine heap size: 3,407 MB. GUI used memory: 150 MB. Current time: 5/2/19 12:58:16 PM BST
// Tcl Command: 'rdi::info_commands {lock*}'
// Tcl Command: 'rdi::info_commands {lock_*}'
// Tcl Command: 'rdi::info_commands {lock_design*}'
// Tcl Command: 'rdi::match_options {lock_design} {}'
// Tcl Command: 'rdi::match_options {lock_design} {level}'
// Elapsed time: 13 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "lock_design -level routing", true); // aF (ae, cj)
// Tcl Command: 'lock_design -level routing'
// Tcl Command: 'lock_design -level routing'
// Tcl Message: lock_design -level routing 
// Tcl Message: Locking Netlist... Locking Placement... Locking Routing... 
// Tcl Command: 'rdi::info_commands {write*}'
// Tcl Command: 'rdi::info_commands {write_check*}'
// Tcl Command: 'rdi::info_commands {write_check*}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {for}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {force}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {chec}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {chec}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {s}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {sta}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {stati}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {static}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {static_}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {static_}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {static_routed.dcp}'
// Elapsed time: 24 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_checkpoint -force ./nicap_extend/checkpoints/static_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'write_checkpoint -force ./nicap_extend/checkpoints/static_routed.dcp'
// Tcl Command: 'write_checkpoint -force ./nicap_extend/checkpoints/static_routed.dcp'
// Tcl Message: write_checkpoint -force ./nicap_extend/checkpoints/static_routed.dcp 
// Tcl Message: Writing placer database... Writing XDEF routing. Writing XDEF routing logical nets. Writing XDEF routing special nets. 
// Tcl Message: Write XDEF Complete: Time (s): cpu = 00:00:00.10 ; elapsed = 00:00:00.04 . Memory (MB): peak = 8424.059 ; gain = 0.000 ; free physical = 227 ; free virtual = 23459 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Common 17-1381] The checkpoint '/home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/static_routed.dcp' has been generated. 
// Tcl Message: write_checkpoint: Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 8424.059 ; gain = 0.000 ; free physical = 228 ; free virtual = 23460 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/static_routed.dcp 
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {read*}'
// Tcl Command: 'rdi::info_commands {read_check*}'
// Tcl Command: 'rdi::info_commands {read_check*}'
// Tcl Command: 'rdi::match_options {read_checkpoint} {cell}'
// Elapsed time: 10 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "read_checkpoint -cell"); // aF (ae, cj)
selectMenuItem(RDIResourceCommand.RDICommands_PASTE, "Paste"); // ac (ai, Popup.HeavyWeightWindow)
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {design_1_wrapper/design_1_i/} {partial_led_0 }'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./nicap_extend/} {check}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./nicap_extend/checkpoints/} {up}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./nicap_extend/checkpoints/} {up}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./nicap_extend/checkpoints/} {up.dcp}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp", true); // aF (ae, cj)
// Tcl Command: 'read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp'
// Tcl Command: 'read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp'
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp 
// Tcl Message: Command: read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp 
// Tcl Message: ERROR: [Project 1-269] Checkpoint part 'xc7z020clg484-1' is different than the design part 'xc7z020clg400-1' 
// HMemoryUtils.trashcanNow. Engine heap size: 3,405 MB. GUI used memory: 156 MB. Current time: 5/2/19 12:59:19 PM BST
// [GUI Memory]: 197 MB (+183kb) [00:09:16]
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// Tcl Message: update_compile_order -fileset sources_1 
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 20 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "synth_design -top partial_led_test_v1_0 -mode out_of_context -part xc7z020clg400-1", true); // aF (ae, cj)
// Tcl Command: 'synth_design -top partial_led_test_v1_0 -mode out_of_context -part xc7z020clg400-1'
// Tcl Command: 'synth_design -top partial_led_test_v1_0 -mode out_of_context -part xc7z020clg400-1'
// Tcl Message: current_project partial_led_v1_0_project 
// TclEventType: ELABORATE_START
// TclEventType: MSGMGR_REFRESH_MSG
// Tcl Message: synth_design -top partial_led_test_v1_0 -mode out_of_context -part xc7z020clg400-1 
// Tcl Message: Command: synth_design -top partial_led_test_v1_0 -mode out_of_context -part xc7z020clg400-1 Starting synth_design Attempting to get a license for feature 'Synthesis' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Synthesis' and/or device 'xc7z020' 
// bs (cj):  Tcl Command Line : addNotify
// HMemoryUtils.trashcanNow. Engine heap size: 3,442 MB. GUI used memory: 149 MB. Current time: 5/2/19 12:59:47 PM BST
// TclEventType: ELABORATE_FINISH
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: CURR_DESIGN_SET
// TclEventType: DESIGN_CLOSE
// TclEventType: CURR_DESIGN_SET
// TclEventType: DESIGN_CLOSE
// [Engine Memory]: 3,626 MB (+15132kb) [00:09:48]
// Tcl Message: --------------------------------------------------------------------------------- 
// Tcl Message: Finished Constraint Validation : Time (s): cpu = 00:00:16 ; elapsed = 00:00:16 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 221 ; free virtual = 23380 
// Tcl Message: --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- Start Loading Part and Timing Information --------------------------------------------------------------------------------- Loading part: xc7z020clg400-1 --------------------------------------------------------------------------------- 
// Tcl Message: Finished Loading Part and Timing Information : Time (s): cpu = 00:00:16 ; elapsed = 00:00:16 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 221 ; free virtual = 23380 
// Tcl Message: --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- Start Applying 'set_property' XDC Constraints --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- 
// Tcl Message: Finished applying 'set_property' XDC Constraints : Time (s): cpu = 00:00:16 ; elapsed = 00:00:16 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 223 ; free virtual = 23382 
// Tcl Message: --------------------------------------------------------------------------------- 
// Tcl Message: --------------------------------------------------------------------------------- 
// Tcl Message: Finished RTL Optimization Phase 2 : Time (s): cpu = 00:00:16 ; elapsed = 00:00:16 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 260 ; free virtual = 23372 
// Tcl Message: INFO: [Synth 8-3886] merging instance 'partial_led_test_v1_0_S00_AXI_inst/axi_rresp_reg[0]' (FDRE) to 'partial_led_test_v1_0_S00_AXI_inst/axi_rresp_reg[1]' INFO: [Synth 8-3333] propagating constant 0 across sequential element (\partial_led_test_v1_0_S00_AXI_inst/axi_rresp_reg[1] ) INFO: [Synth 8-3886] merging instance 'partial_led_test_v1_0_S00_AXI_inst/axi_bresp_reg[0]' (FDRE) to 'partial_led_test_v1_0_S00_AXI_inst/axi_bresp_reg[1]' INFO: [Synth 8-3333] propagating constant 0 across sequential element (\partial_led_test_v1_0_S00_AXI_inst/axi_bresp_reg[1] ) 
// Tcl Message: --------------------------------------------------------------------------------- 
// Tcl Message: Finished Cross Boundary and Area Optimization : Time (s): cpu = 00:00:16 ; elapsed = 00:00:16 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 282 ; free virtual = 23369 
// Tcl Message: ---------------------------------------------------------------------------------  Report RTL Partitions:  +-+--------------+------------+----------+ | |RTL Partition |Replication |Instances | +-+--------------+------------+----------+ +-+--------------+------------+----------+ 
// Tcl Message: --------------------------------------------------------------------------------- Start Applying XDC Timing Constraints --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- 
// Tcl Message: Finished Applying XDC Timing Constraints : Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 232 ; free virtual = 23311 
// Tcl Message: --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- Start Timing Optimization --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- 
// Tcl Message: Finished Timing Optimization : Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 231 ; free virtual = 23310 
// Tcl Message: ---------------------------------------------------------------------------------  Report RTL Partitions:  +-+--------------+------------+----------+ | |RTL Partition |Replication |Instances | +-+--------------+------------+----------+ +-+--------------+------------+----------+ --------------------------------------------------------------------------------- Start Technology Mapping --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- 
// Tcl Message: Finished Technology Mapping : Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 225 ; free virtual = 23304 
// Tcl Message: --------------------------------------------------------------------------------- 
// Tcl Message: Finished IO Insertion : Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 224 ; free virtual = 23291 
// Tcl Message: Finished Renaming Generated Instances : Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 224 ; free virtual = 23291 
// Tcl Message: ---------------------------------------------------------------------------------  Report RTL Partitions:  +-+--------------+------------+----------+ | |RTL Partition |Replication |Instances | +-+--------------+------------+----------+ +-+--------------+------------+----------+ --------------------------------------------------------------------------------- Start Rebuilding User Hierarchy --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- 
// Tcl Message: Finished Rebuilding User Hierarchy : Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 224 ; free virtual = 23291 
// Tcl Message: --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- Start Renaming Generated Ports --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- 
// Tcl Message: Finished Renaming Generated Ports : Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 224 ; free virtual = 23291 
// Tcl Message: --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- Start Handling Custom Attributes --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- 
// Tcl Message: Finished Handling Custom Attributes : Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 224 ; free virtual = 23291 
// Tcl Message: --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- Start Renaming Generated Nets --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- 
// Tcl Message: Finished Renaming Generated Nets : Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 224 ; free virtual = 23291 
// Tcl Message: --------------------------------------------------------------------------------- --------------------------------------------------------------------------------- Start Writing Synthesis Report ---------------------------------------------------------------------------------  Report BlackBoxes:  +-+--------------+----------+ | |BlackBox name |Instances | +-+--------------+----------+ +-+--------------+----------+ 
// Tcl Message:  Report Cell Usage:  +------+-------+------+ |      |Cell   |Count | +------+-------+------+ |1     |CARRY4 |     6| |2     |LUT1   |    15| |3     |LUT2   |    18| |4     |LUT3   |    20| |5     |LUT4   |    38| |6     |LUT5   |    15| |7     |LUT6   |    45| |8     |FDRE   |   197| +------+-------+------+ 
// Tcl Message:  Report Instance Areas:  +------+-------------------------------------+------------------------------+------+ |      |Instance                             |Module                        |Cells | +------+-------------------------------------+------------------------------+------+ |1     |top                                  |                              |   354| |2     |  partial_led_test_v1_0_S00_AXI_inst |partial_led_test_v1_0_S00_AXI |   354| +------+-------------------------------------+------------------------------+------+ --------------------------------------------------------------------------------- 
// Tcl Message: Finished Writing Synthesis Report : Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 224 ; free virtual = 23291 
// Tcl Message: --------------------------------------------------------------------------------- Synthesis finished with 0 errors, 0 critical warnings and 16 warnings. Synthesis Optimization Runtime : Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 8612.359 ; gain = 30.230 ; free physical = 280 ; free virtual = 23347 Synthesis Optimization Complete : Time (s): cpu = 00:00:17 ; elapsed = 00:00:17 . Memory (MB): peak = 8612.359 ; gain = 188.301 ; free physical = 280 ; free virtual = 23347 
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 3,626 MB. GUI used memory: 148 MB. Current time: 5/2/19 12:59:58 PM BST
// TclEventType: DESIGN_NEW
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// Device: addNotify
// DeviceView Instantiated
// TclEventType: CURR_DESIGN_SET
// Tcl Message: INFO: [Project 1-571] Translating synthesized netlist INFO: [Netlist 29-17] Analyzing 6 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-570] Preparing netlist for logic optimization INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). INFO: [Project 1-111] Unisim Transformation Summary: No Unisim elements were transformed.  
// Device view-level: 0.0
// Tcl Message: INFO: [Common 17-83] Releasing license: Synthesis 
// Tcl Message: 20 Infos, 22 Warnings, 0 Critical Warnings and 0 Errors encountered. synth_design completed successfully 
// Tcl Message: synth_design: Time (s): cpu = 00:00:21 ; elapsed = 00:00:20 . Memory (MB): peak = 8615.363 ; gain = 191.305 ; free physical = 224 ; free virtual = 23291 
// Tcl Message: design_2 
// RouteApi: Init Delay Mediator Swing Worker Finished
// Elapsed time: 21 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Elapsed time: 13 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_checkpoint -force ./nicap_extend/checkpoints/up.dcp", true); // aF (ae, cj)
// Tcl Command: 'write_checkpoint -force ./nicap_extend/checkpoints/up.dcp'
// Tcl Command: 'write_checkpoint -force ./nicap_extend/checkpoints/up.dcp'
// Tcl Message: write_checkpoint -force ./nicap_extend/checkpoints/up.dcp 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. INFO: [Common 17-1381] The checkpoint '/home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/up.dcp' has been generated. 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/up.dcp 
// HMemoryUtils.trashcanNow. Engine heap size: 3,696 MB. GUI used memory: 176 MB. Current time: 5/2/19 1:00:15 PM BST
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp", true); // aF (ae, cj)
// Tcl Command: 'read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp'
// Tcl Command: 'read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp'
// Tcl Message: current_project nicap_test 
// TclEventType: FILE_SET_CHANGE
// TclEventType: NETLIST_UPDATE
// Tcl Message: read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp 
// Tcl Message: Command: read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp 
// Tcl Message: INFO: [Netlist 29-17] Analyzing 6 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds 
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: NETLIST_UPDATE
// Tcl Message: synth_1_1 
// HMemoryUtils.trashcanNow. Engine heap size: 3,716 MB. GUI used memory: 163 MB. Current time: 5/2/19 1:00:22 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 3,716 MB. GUI used memory: 158 MB. Current time: 5/2/19 1:00:22 PM BST
// Tcl Command: 'rdi::info_commands {opt*}'
// Tcl Command: 'rdi::info_commands {opt_design*}'
// Elapsed time: 53 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "opt_design", true); // aF (ae, cj)
// Tcl Command: 'opt_design'
// Tcl Command: 'opt_design'
// TclEventType: NETLIST_UPDATE
// Tcl Message: opt_design 
// Tcl Message: Command: opt_design Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: Running DRC as a precondition to command opt_design  Starting DRC Task 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 4 threads 
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: INFO: [Project 1-461] DRC finished with 0 Errors INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message:  Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.82 . Memory (MB): peak = 8718.219 ; gain = 24.012 ; free physical = 245 ; free virtual = 23184 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// Tcl Message:  Starting Logic Optimization Task 
// TclEventType: NETLIST_UPDATE
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message:  Phase 1 Retarget 
// Tcl Message: INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). INFO: [Opt 31-49] Retargeted 0 cell(s). 
// Tcl Message: Phase 1 Retarget | Checksum: 1b434eee6  Time (s): cpu = 00:00:00.76 ; elapsed = 00:00:00.50 . Memory (MB): peak = 8763.223 ; gain = 0.000 ; free physical = 245 ; free virtual = 23185 
// Tcl Message: INFO: [Opt 31-389] Phase Retarget created 0 cells and removed 0 cells 
// Tcl Message:  Phase 2 Constant propagation 
// Tcl Message: INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). 
// Tcl Message: Phase 2 Constant propagation | Checksum: 1b434eee6  Time (s): cpu = 00:00:00.82 ; elapsed = 00:00:00.56 . Memory (MB): peak = 8763.223 ; gain = 0.000 ; free physical = 245 ; free virtual = 23185 
// Tcl Message: INFO: [Opt 31-389] Phase Constant propagation created 0 cells and removed 0 cells 
// Tcl Message:  Phase 3 Sweep Phase 3 Sweep | Checksum: 1d55d2b4f  Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.94 . Memory (MB): peak = 8763.223 ; gain = 0.000 ; free physical = 244 ; free virtual = 23183 
// Tcl Message: INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 0 cells 
// Tcl Message:  Phase 4 BUFG optimization 
// HMemoryUtils.trashcanNow. Engine heap size: 3,756 MB. GUI used memory: 158 MB. Current time: 5/2/19 1:01:18 PM BST
// Tcl Message: Phase 4 BUFG optimization | Checksum: 1d55d2b4f  Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 8763.223 ; gain = 0.000 ; free physical = 244 ; free virtual = 23183 
// Tcl Message: INFO: [Opt 31-389] Phase BUFG optimization created 0 cells and removed 0 cells 
// Tcl Message:  Phase 5 Shift Register Optimization Phase 5 Shift Register Optimization | Checksum: 1d55d2b4f  Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 8763.223 ; gain = 0.000 ; free physical = 244 ; free virtual = 23184 
// Tcl Message: INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells 
// Tcl Message:  Starting Connectivity Check Task  Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.03 . Memory (MB): peak = 8763.223 ; gain = 0.000 ; free physical = 244 ; free virtual = 23183 Ending Logic Optimization Task | Checksum: 20e8c3035  Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 8763.223 ; gain = 0.000 ; free physical = 244 ; free virtual = 23183  Starting Power Optimization Task 
// Tcl Message: INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns. 
// Tcl Message: INFO: [Pwropt 34-232] Skipping BRAM gating because all BRAMs are in high frequency (i.e. period < 3.12 ns) clock domains. INFO: [Timing 38-35] Done setting XDC timing constraints. 
// TclEventType: NETLIST_UPDATE
// Tcl Message: INFO: [Physopt 32-619] Estimated Timing Summary | WNS=0.252 | TNS=0.000 | INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 55 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated. 
// Tcl Message: Ending Power Optimization Task | Checksum: 17f27844e  Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 8783.332 ; gain = 20.109 ; free physical = 242 ; free virtual = 23184 
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 19 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered. opt_design completed successfully 
// Tcl Message: opt_design: Time (s): cpu = 00:00:09 ; elapsed = 00:00:05 . Memory (MB): peak = 8783.332 ; gain = 89.125 ; free physical = 242 ; free virtual = 23184 
// HMemoryUtils.trashcanNow. Engine heap size: 3,805 MB. GUI used memory: 158 MB. Current time: 5/2/19 1:01:20 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 3,805 MB. GUI used memory: 158 MB. Current time: 5/2/19 1:01:20 PM BST
// PAPropertyPanels.initPanels (partial_led_0 (partial_led_test_v1_0)) elapsed time: 0.3s
// [Engine Memory]: 3,808 MB (+650kb) [00:11:16]
// HMemoryUtils.trashcanNow. Engine heap size: 3,808 MB. GUI used memory: 181 MB. Current time: 5/2/19 1:01:21 PM BST
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {place*}'
// Tcl Command: 'rdi::info_commands {place_*}'
// Tcl Command: 'rdi::info_commands {place_design*}'
// Elapsed time: 19 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "place_design", true); // aF (ae, cj)
// Tcl Command: 'place_design'
// Tcl Command: 'place_design'
// Tcl Message: place_design 
// Tcl Message: Command: place_design Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' INFO: [DRC 23-27] Running DRC with 4 threads INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message: Running DRC as a precondition to command place_design 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 4 threads 
// bs (cj):  Tcl Command Line : addNotify
// TclEventType: TIMING_RESULTS_STALE
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message:  Starting Placer Task 
// Tcl Message: INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 4 CPUs 
// Tcl Message:  Phase 1 Placer Initialization  Phase 1.1 Placer Initialization Netlist Sorting 
// Tcl Message: Netlist sorting complete. Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.02 . Memory (MB): peak = 8786.121 ; gain = 0.000 ; free physical = 265 ; free virtual = 23205 
// Tcl Message: Phase 1.1 Placer Initialization Netlist Sorting | Checksum: c9292ded  Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.05 . Memory (MB): peak = 8786.121 ; gain = 0.000 ; free physical = 265 ; free virtual = 23205 
// Tcl Message: INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). 
// Tcl Message: Netlist sorting complete. Time (s): cpu = 00:00:00.02 ; elapsed = 00:00:00.02 . Memory (MB): peak = 8786.121 ; gain = 0.000 ; free physical = 283 ; free virtual = 23223 
// Tcl Message:  Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: f0eab20a  Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 8786.121 ; gain = 0.000 ; free physical = 262 ; free virtual = 23203  Phase 1.3 Build Placer Netlist Model 
// [GUI Memory]: 209 MB (+2282kb) [00:11:44]
// Tcl Message: Phase 1.3 Build Placer Netlist Model | Checksum: 14602a138  Time (s): cpu = 00:00:08 ; elapsed = 00:00:06 . Memory (MB): peak = 8786.121 ; gain = 0.000 ; free physical = 234 ; free virtual = 23177  Phase 1.4 Constrain Clocks/Macros Phase 1.4 Constrain Clocks/Macros | Checksum: 14602a138  Time (s): cpu = 00:00:08 ; elapsed = 00:00:06 . Memory (MB): peak = 8786.121 ; gain = 0.000 ; free physical = 234 ; free virtual = 23177 Phase 1 Placer Initialization | Checksum: 14602a138  Time (s): cpu = 00:00:08 ; elapsed = 00:00:06 . Memory (MB): peak = 8786.121 ; gain = 0.000 ; free physical = 234 ; free virtual = 23177  Phase 2 Global Placement 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 2 Global Placement | Checksum: 626df9c6  Time (s): cpu = 00:00:21 ; elapsed = 00:00:13 . Memory (MB): peak = 8810.133 ; gain = 24.012 ; free physical = 221 ; free virtual = 23162  Phase 3 Detail Placement  Phase 3.1 Commit Multi Column Macros Phase 3.1 Commit Multi Column Macros | Checksum: 626df9c6  Time (s): cpu = 00:00:21 ; elapsed = 00:00:13 . Memory (MB): peak = 8810.133 ; gain = 24.012 ; free physical = 221 ; free virtual = 23162  Phase 3.2 Commit Most Macros & LUTRAMs 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message:  Phase 3.7.1 Place Remaining Phase 3.7.1 Place Remaining | Checksum: 14bc79e7d  Time (s): cpu = 00:00:27 ; elapsed = 00:00:17 . Memory (MB): peak = 8810.133 ; gain = 24.012 ; free physical = 217 ; free virtual = 23157 Phase 3.7 Small Shape Detail Placement | Checksum: 14bc79e7d  Time (s): cpu = 00:00:27 ; elapsed = 00:00:17 . Memory (MB): peak = 8810.133 ; gain = 24.012 ; free physical = 220 ; free virtual = 23160  Phase 3.8 Re-assign LUT pins 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message:  Phase 4.1.1 Post Placement Optimization Post Placement Optimization Initialization | Checksum: 1a301e202  Phase 4.1.1.1 BUFG Insertion 
// Tcl Message: INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 4 CPUs INFO: [Place 46-31] BUFG insertion identified 0 candidate nets, 0 success, 0 skipped for placement/routing, 0 skipped for timing, 0 skipped for netlist change reason. 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 4.1.1.1 BUFG Insertion | Checksum: 1a301e202  Time (s): cpu = 00:00:32 ; elapsed = 00:00:20 . Memory (MB): peak = 8810.133 ; gain = 24.012 ; free physical = 228 ; free virtual = 23169 
// TclEventType: PLACEDB_MODIFIY_PRE
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 3,824 MB. GUI used memory: 148 MB. Current time: 5/2/19 1:02:05 PM BST
// Engine heap size: 3,824 MB. GUI used memory: 148 MB. Current time: 5/2/19 1:02:05 PM BST
// TclEventType: DESIGN_CLOSE
// Tcl Message: INFO: [Place 30-746] Post Placement Timing Summary WNS=-0.120. For the most accurate timing information please run report_timing. 
// TclEventType: DESIGN_CLOSE
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 3,824 MB. GUI used memory: 158 MB. Current time: 5/2/19 1:02:05 PM BST
// TclEventType: DESIGN_NEW
// Device: addNotify
// DeviceView Instantiated
// Device view-level: 0.0
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// Device view-level: 0.0
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 15 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered. place_design completed successfully 
// Tcl Message: place_design: Time (s): cpu = 00:00:40 ; elapsed = 00:00:26 . Memory (MB): peak = 8856.941 ; gain = 70.820 ; free physical = 241 ; free virtual = 23181 
// HMemoryUtils.trashcanNow. Engine heap size: 3,833 MB. GUI used memory: 200 MB. Current time: 5/2/19 1:02:07 PM BST
// RouteApi: Init Delay Mediator Swing Worker Finished
// Elapsed time: 26 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {route*}'
// Tcl Command: 'rdi::info_commands {route_design*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "route_design", true); // aF (ae, cj)
// Tcl Command: 'route_design'
// Tcl Command: 'route_design'
// Tcl Message: route_design 
// Tcl Message: Command: route_design Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: Running DRC as a precondition to command route_design 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 4 threads 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message:  
// Tcl Message:  Starting Routing Task 
// Tcl Message: INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 4 CPUs 
// Tcl Message: Checksum: PlaceDB: 249eb6c3 ConstDB: 0 ShapeSum: 85c15e39 RouteDB: 0 
// Tcl Message:  Phase 1 Build RT Design 
// HMemoryUtils.trashcanNow. Engine heap size: 3,911 MB. GUI used memory: 164 MB. Current time: 5/2/19 1:02:23 PM BST
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: Phase 1 Build RT Design | Checksum: 1bdccb1bf  Time (s): cpu = 00:00:20 ; elapsed = 00:00:15 . Memory (MB): peak = 8889.352 ; gain = 32.410 ; free physical = 192 ; free virtual = 23085 
// Tcl Message: Post Restoration Checksum: NetGraph: b37211d0 NumContArr: 8a5e2ea5 Constraints: 7ffc714a Timing: 0 
// Tcl Message:  Phase 2 Router Initialization  Phase 2.1 Create Timer Phase 2.1 Create Timer | Checksum: 1bdccb1bf  Time (s): cpu = 00:00:20 ; elapsed = 00:00:15 . Memory (MB): peak = 8889.352 ; gain = 32.410 ; free physical = 192 ; free virtual = 23085  Phase 2.2 Fix Topology Constraints Phase 2.2 Fix Topology Constraints | Checksum: 1bdccb1bf  Time (s): cpu = 00:00:20 ; elapsed = 00:00:15 . Memory (MB): peak = 8889.352 ; gain = 32.410 ; free physical = 172 ; free virtual = 23064  Phase 2.3 Pre Route Cleanup Phase 2.3 Pre Route Cleanup | Checksum: 1bdccb1bf  Time (s): cpu = 00:00:20 ; elapsed = 00:00:15 . Memory (MB): peak = 8889.352 ; gain = 32.410 ; free physical = 172 ; free virtual = 23064 
// Tcl Message:  Phase 2.4 Update Timing 
// Tcl Message: Phase 2.4 Update Timing | Checksum: 26b044631  Time (s): cpu = 00:00:24 ; elapsed = 00:00:17 . Memory (MB): peak = 8914.117 ; gain = 57.176 ; free physical = 181 ; free virtual = 23048 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.109 | TNS=-0.109 | WHS=-0.356 | THS=-275.233|  
// Tcl Message: Phase 2 Router Initialization | Checksum: 1da2bee81  Time (s): cpu = 00:00:26 ; elapsed = 00:00:18 . Memory (MB): peak = 8914.117 ; gain = 57.176 ; free physical = 171 ; free virtual = 23041  Phase 3 Initial Routing 
// Tcl Message: Phase 3 Initial Routing | Checksum: 2578025e8  Time (s): cpu = 00:00:31 ; elapsed = 00:00:19 . Memory (MB): peak = 8914.117 ; gain = 57.176 ; free physical = 172 ; free virtual = 23040  Phase 4 Rip-up And Reroute  Phase 4.1 Global Iteration 0 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.089 | TNS=-0.089 | WHS=N/A    | THS=N/A    |  
// Tcl Message: Phase 4.1 Global Iteration 0 | Checksum: 22187f1fc  Time (s): cpu = 00:00:54 ; elapsed = 00:00:32 . Memory (MB): peak = 8927.105 ; gain = 70.164 ; free physical = 218 ; free virtual = 23038  Phase 4.2 Global Iteration 1 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.089 | TNS=-0.089 | WHS=N/A    | THS=N/A    |  
// Tcl Message: Phase 4.2 Global Iteration 1 | Checksum: 20ff487ed  Time (s): cpu = 00:00:55 ; elapsed = 00:00:33 . Memory (MB): peak = 8927.105 ; gain = 70.164 ; free physical = 214 ; free virtual = 23037  Phase 4.3 Global Iteration 2 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.089 | TNS=-0.089 | WHS=N/A    | THS=N/A    |  
// Tcl Message: Phase 4.3 Global Iteration 2 | Checksum: 1a7cb02da  Time (s): cpu = 00:00:58 ; elapsed = 00:00:34 . Memory (MB): peak = 8927.105 ; gain = 70.164 ; free physical = 219 ; free virtual = 23040 Phase 4 Rip-up And Reroute | Checksum: 1a7cb02da  Time (s): cpu = 00:00:58 ; elapsed = 00:00:34 . Memory (MB): peak = 8927.105 ; gain = 70.164 ; free physical = 219 ; free virtual = 23040  Phase 5 Delay and Skew Optimization  Phase 5.1 Delay CleanUp  Phase 5.1.1 Update Timing 
// Tcl Message: Phase 5.1.1 Update Timing | Checksum: 1aa992b82  Time (s): cpu = 00:00:59 ; elapsed = 00:00:35 . Memory (MB): peak = 8927.105 ; gain = 70.164 ; free physical = 218 ; free virtual = 23039 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.089 | TNS=-0.089 | WHS=N/A    | THS=N/A    |  
// Tcl Message: Phase 5.1 Delay CleanUp | Checksum: 157157b56  Time (s): cpu = 00:00:59 ; elapsed = 00:00:35 . Memory (MB): peak = 8927.105 ; gain = 70.164 ; free physical = 216 ; free virtual = 23037  Phase 5.2 Clock Skew Optimization Phase 5.2 Clock Skew Optimization | Checksum: 157157b56  Time (s): cpu = 00:00:59 ; elapsed = 00:00:35 . Memory (MB): peak = 8927.105 ; gain = 70.164 ; free physical = 216 ; free virtual = 23037 Phase 5 Delay and Skew Optimization | Checksum: 157157b56  Time (s): cpu = 00:00:59 ; elapsed = 00:00:35 . Memory (MB): peak = 8927.105 ; gain = 70.164 ; free physical = 216 ; free virtual = 23037  Phase 6 Post Hold Fix  Phase 6.1 Hold Fix Iter  Phase 6.1.1 Update Timing 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 6.1.1 Update Timing | Checksum: 1f770e74a  Time (s): cpu = 00:01:01 ; elapsed = 00:00:36 . Memory (MB): peak = 8927.105 ; gain = 70.164 ; free physical = 180 ; free virtual = 23038 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.089 | TNS=-0.089 | WHS=0.015  | THS=0.000  |  
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 9 Depositing Routes | Checksum: 1dd5781f6  Time (s): cpu = 00:01:02 ; elapsed = 00:00:38 . Memory (MB): peak = 8927.105 ; gain = 70.164 ; free physical = 178 ; free virtual = 23036  Phase 10 Post Router Timing 
// Tcl Message: INFO: [Route 35-57] Estimated Timing Summary | WNS=-0.089 | TNS=-0.089 | WHS=0.015  | THS=0.000  |  
// Tcl Message: Phase 10 Post Router Timing | Checksum: 1dd5781f6  Time (s): cpu = 00:01:02 ; elapsed = 00:00:38 . Memory (MB): peak = 8927.105 ; gain = 70.164 ; free physical = 178 ; free virtual = 23036 
// Tcl Message: INFO: [Route 35-16] Router Completed Successfully 
// TclEventType: ROUTE_DESIGN
// Tcl Message:  Time (s): cpu = 00:01:04 ; elapsed = 00:00:39 . Memory (MB): peak = 8967.125 ; gain = 110.184 ; free physical = 247 ; free virtual = 23041 
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 14 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered. route_design completed successfully 
// Tcl Message: route_design: Time (s): cpu = 00:01:08 ; elapsed = 00:00:42 . Memory (MB): peak = 8967.125 ; gain = 110.184 ; free physical = 249 ; free virtual = 23043 
// HMemoryUtils.trashcanNow. Engine heap size: 3,967 MB. GUI used memory: 181 MB. Current time: 5/2/19 1:02:55 PM BST
// Elapsed time: 42 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {write*}'
// Tcl Command: 'rdi::info_commands {write_check*}'
// Tcl Command: 'rdi::info_commands {write_check*}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {for}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {force}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./} {chec}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./} {c}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {check}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {check}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {top}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {top_mode2_routed.dcp}'
// Elapsed time: 412 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_checkpoint -force ./nicap_extend/checkpoints/top_mode2_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'write_checkpoint -force ./nicap_extend/checkpoints/top_mode2_routed.dcp'
// Tcl Command: 'write_checkpoint -force ./nicap_extend/checkpoints/top_mode2_routed.dcp'
// Tcl Message: write_checkpoint -force ./nicap_extend/checkpoints/top_mode2_routed.dcp 
// Tcl Message: Writing placer database... 
// Tcl Message: Writing XDEF routing. Writing XDEF routing logical nets. Writing XDEF routing special nets. 
// Tcl Message: Write XDEF Complete: Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.66 . Memory (MB): peak = 8967.125 ; gain = 0.000 ; free physical = 164 ; free virtual = 22773 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Common 17-1381] The checkpoint '/home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/top_mode2_routed.dcp' has been generated. 
// Tcl Message: write_checkpoint: Time (s): cpu = 00:00:07 ; elapsed = 00:00:06 . Memory (MB): peak = 8967.125 ; gain = 0.000 ; free physical = 226 ; free virtual = 22769 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/top_mode2_routed.dcp 
// HMemoryUtils.trashcanNow. Engine heap size: 3,968 MB. GUI used memory: 191 MB. Current time: 5/2/19 1:09:55 PM BST
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {pr*}'
// Tcl Command: 'rdi::info_commands {pr_ver*}'
// Tcl Command: 'rdi::info_commands {pr_ver*}'
// Tcl Command: 'rdi::match_options {pr_verify} {}'
// Tcl Command: 'rdi::match_options {pr_verify} {full}'
// Tcl Command: 'rdi::match_options {pr_verify} {full}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/} {check}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {t}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {top}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {topmio}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {topm}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {top}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {top_mo}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {top_mode1_routed.dcp}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {top_mode1_routed.dcp }'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./} {nic}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./} {nic}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/} {chec}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {top}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {top_mode2_routed.dcp}'
// Elapsed time: 24 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "pr_verify -full_check ./nicap_extend/checkpoints/top_mode1_routed.dcp ./nicap_extend/checkpoints/top_mode2_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'pr_verify -full_check ./nicap_extend/checkpoints/top_mode1_routed.dcp ./nicap_extend/checkpoints/top_mode2_routed.dcp'
// Tcl Command: 'pr_verify -full_check ./nicap_extend/checkpoints/top_mode1_routed.dcp ./nicap_extend/checkpoints/top_mode2_routed.dcp'
// Tcl Message: pr_verify -full_check ./nicap_extend/checkpoints/top_mode1_routed.dcp ./nicap_extend/checkpoints/top_mode2_routed.dcp 
// Tcl Message: Command: pr_verify -full_check ./nicap_extend/checkpoints/top_mode1_routed.dcp ./nicap_extend/checkpoints/top_mode2_routed.dcp 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Netlist 29-17] Analyzing 454 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// [Engine Memory]: 4,012 MB (+13749kb) [00:20:20]
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// HMemoryUtils.trashcanNow. Engine heap size: 4,019 MB. GUI used memory: 158 MB. Current time: 5/2/19 1:10:27 PM BST
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp25/sys_top.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp25/sys_top_late.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp25/sys_top_late.xdc] Reading XDEF placement. Reading placer database... Reading XDEF routing. 
// Tcl Message: Read XDEF File: Time (s): cpu = 00:00:00.70 ; elapsed = 00:00:00.68 . Memory (MB): peak = 9003.113 ; gain = 9.000 ; free physical = 190 ; free virtual = 22684 
// Tcl Message: Restored from archive | CPU: 0.710000 secs | Memory: 14.692368 MB | 
// Tcl Message: Finished XDEF File Restore: Time (s): cpu = 00:00:00.70 ; elapsed = 00:00:00.68 . Memory (MB): peak = 9003.113 ; gain = 9.000 ; free physical = 190 ; free virtual = 22684 
// Tcl Message: Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo/bit_buffer_fifo_clocks.xdc] for cell 'eth_bridge/bit_buffer/inst' Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo/bit_buffer_fifo_clocks.xdc] for cell 'eth_bridge/bit_buffer/inst' Sourcing Tcl File [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst' 
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221 
// Tcl Message: INFO: [Netlist 29-17] Analyzing 505 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// [Engine Memory]: 4,221 MB (+8770kb) [00:20:32]
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp28/sys_top.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp28/sys_top_late.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp28/sys_top_late.xdc] Reading XDEF placement. Reading placer database... 
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// Tcl Message: Reading XDEF routing. 
// Tcl Message: Read XDEF File: Time (s): cpu = 00:00:00.77 ; elapsed = 00:00:00.71 . Memory (MB): peak = 9211.789 ; gain = 14.672 ; free physical = 169 ; free virtual = 22488 
// Tcl Message: Restored from archive | CPU: 0.790000 secs | Memory: 17.396332 MB | 
// Tcl Message: Finished XDEF File Restore: Time (s): cpu = 00:00:00.77 ; elapsed = 00:00:00.71 . Memory (MB): peak = 9211.789 ; gain = 14.672 ; free physical = 169 ; free virtual = 22488 
// Tcl Message: Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo/bit_buffer_fifo_clocks.xdc] for cell 'eth_bridge/bit_buffer/inst' Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo/bit_buffer_fifo_clocks.xdc] for cell 'eth_bridge/bit_buffer/inst' Sourcing Tcl File [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst' 
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: TIMING_RESULTS_STALE
// TclEventType: DESIGN_CLOSE
// Tcl Message: INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221 
// Tcl Message: INFO: [Common 17-14] Message 'Constraints 18-891' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings. INFO: [Constraints 18-1020] PR Verify Summary: 
// Tcl Message: INFO: [Vivado 12-3515] PR_VERIFY: check points ./nicap_extend/checkpoints/top_mode1_routed.dcp and ./nicap_extend/checkpoints/top_mode2_routed.dcp are not compatible 
// TclEventType: DESIGN_NEW_FAILED
// TclEventType: DESIGN_CLOSE
// TclEventType: DESIGN_NEW_FAILED
// Tcl Message: pr_verify: Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 9348.805 ; gain = 381.680 ; free physical = 472 ; free virtual = 22708 
// Tcl Message: ERROR: [Common 17-39] 'pr_verify' failed due to earlier errors. 
// HMemoryUtils.trashcanNow. Engine heap size: 4,337 MB. GUI used memory: 193 MB. Current time: 5/2/19 1:10:41 PM BST
// Elapsed time: 20 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {open*}'
// Tcl Command: 'rdi::info_commands {open_chec*}'
// Tcl Command: 'rdi::info_commands {open_chec*}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./} {nic}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {st}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {check}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {st}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {static_routed.dcp}'
// Elapsed time: 129 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "open_checkpoint ./nicap_extend/checkpoints/static_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'open_checkpoint ./nicap_extend/checkpoints/static_routed.dcp'
// Tcl Command: 'open_checkpoint ./nicap_extend/checkpoints/static_routed.dcp'
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_ADD
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_NEW
// Tcl Message: open_checkpoint ./nicap_extend/checkpoints/static_routed.dcp 
// Tcl Message: Command: open_checkpoint ./nicap_extend/checkpoints/static_routed.dcp  Starting open_checkpoint Task  Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 9348.805 ; gain = 0.000 ; free physical = 509 ; free virtual = 22752 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2017.4/data/ip'. 
// bs (cj):  Tcl Command Line : addNotify
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_CNS_STALE
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 4,343 MB. GUI used memory: 174 MB. Current time: 5/2/19 1:13:01 PM BST
// TclEventType: DESIGN_NEW
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// Device: addNotify
// DeviceView Instantiated
// TclEventType: CURR_DESIGN_SET
// TclEventType: PROJ_DESIGN_MODE_SET
// Device view-level: 0.0
// TclEventType: PROJ_DESIGN_MODE_SET
// TclEventType: DESIGN_MODE_CHANGE
// Tcl Message: INFO: [Netlist 29-17] Analyzing 499 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// Tcl Message: Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp31/sys_top_board.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp31/sys_top_board.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp31/sys_top_early.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp31/sys_top_early.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp31/sys_top.xdc] 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp31/sys_top.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp31/sys_top_late.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp31/sys_top_late.xdc] Reading XDEF placement. Reading placer database... Reading XDEF routing. 
// Tcl Message: Read XDEF File: Time (s): cpu = 00:00:00.12 ; elapsed = 00:00:00.10 . Memory (MB): peak = 9348.805 ; gain = 0.000 ; free physical = 377 ; free virtual = 22632 
// Tcl Message: Restored from archive | CPU: 0.120000 secs | Memory: 0.041435 MB | 
// Tcl Message: Finished XDEF File Restore: Time (s): cpu = 00:00:00.12 ; elapsed = 00:00:00.10 . Memory (MB): peak = 9348.805 ; gain = 0.000 ; free physical = 377 ; free virtual = 22632 
// Tcl Message: INFO: [Project 1-486] Could not resolve non-primitive black box cell 'design_1_partial_led_0_0_bb' instantiated as 'design_1_wrapper/design_1_i/partial_led_0' [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/bd/design_1/synth/design_1.v:1010] INFO: [Project 1-111] Unisim Transformation Summary:   A total of 43 instances were transformed.   RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 43 instances  INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221 
// Tcl Message: open_checkpoint: Time (s): cpu = 00:00:12 ; elapsed = 00:00:11 . Memory (MB): peak = 9364.812 ; gain = 16.008 ; free physical = 374 ; free virtual = 22618 
// Tcl Message: checkpoint_static_routed 
// RouteApi: Init Delay Mediator Swing Worker Finished
// Elapsed time: 12 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Elapsed time: 32 seconds
closeMainWindow("static_routed.dcp - [/home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/static_routed.dcp] - Vivado 2017.4"); // cj
// Run Command: PAResourceCommand.PACommandNames_CLOSE_CHECKPOINT
// x (cj): Close Checkpoint: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (x)
// bs (cj):  Close Checkpoint : addNotify
dismissDialog("Close Checkpoint"); // x (cj)
// TclEventType: DESIGN_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 4,352 MB. GUI used memory: 170 MB. Current time: 5/2/19 1:13:37 PM BST
// Engine heap size: 4,352 MB. GUI used memory: 170 MB. Current time: 5/2/19 1:13:37 PM BST
// TclEventType: CURR_DESIGN_SET
// Tcl Message: close_design 
// TclEventType: DESIGN_CLOSE
// TclEventType: PROJECT_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 4,344 MB. GUI used memory: 162 MB. Current time: 5/2/19 1:13:38 PM BST
dismissDialog("Close Checkpoint"); // bs (cj)
// Tcl Command: 'rdi::info_commands {open*}'
// Tcl Command: 'rdi::info_commands {open_check*}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {check}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {top}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {top_mode1_routed.dcp}'
// Elapsed time: 18 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "open_checkpoint ./nicap_extend/checkpoints/top_mode1_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'open_checkpoint ./nicap_extend/checkpoints/top_mode1_routed.dcp'
// Tcl Command: 'open_checkpoint ./nicap_extend/checkpoints/top_mode1_routed.dcp'
// Tcl Message: current_project nicap_test 
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_ADD
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_NEW
// Tcl Message: open_checkpoint ./nicap_extend/checkpoints/top_mode1_routed.dcp 
// Tcl Message: Command: open_checkpoint ./nicap_extend/checkpoints/top_mode1_routed.dcp  Starting open_checkpoint Task  Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 9364.812 ; gain = 0.000 ; free physical = 476 ; free virtual = 22739 
// TclEventType: PROJECT_NEW
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2017.4/data/ip'. 
// bs (cj):  Tcl Command Line : addNotify
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_CNS_STALE
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 4,341 MB. GUI used memory: 169 MB. Current time: 5/2/19 1:14:07 PM BST
// TclEventType: DESIGN_NEW
// Device: addNotify
// DeviceView Instantiated
// TclEventType: CURR_DESIGN_SET
// TclEventType: PROJ_DESIGN_MODE_SET
// Tcl Message: INFO: [Netlist 29-17] Analyzing 454 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// Tcl Message: Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp33/sys_top_board.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp33/sys_top_board.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp33/sys_top_early.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp33/sys_top_early.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp33/sys_top.xdc] 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp33/sys_top.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp33/sys_top_late.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp33/sys_top_late.xdc] Reading XDEF placement. Reading placer database... Reading XDEF routing. 
// Tcl Message: Read XDEF File: Time (s): cpu = 00:00:00.66 ; elapsed = 00:00:00.65 . Memory (MB): peak = 9364.812 ; gain = 0.000 ; free physical = 345 ; free virtual = 22636 
// Tcl Message: Restored from archive | CPU: 0.670000 secs | Memory: 14.684547 MB | 
// Tcl Message: Finished XDEF File Restore: Time (s): cpu = 00:00:00.66 ; elapsed = 00:00:00.65 . Memory (MB): peak = 9364.812 ; gain = 0.000 ; free physical = 345 ; free virtual = 22636 
// Tcl Message: INFO: [Project 1-111] Unisim Transformation Summary:   A total of 29 instances were transformed.   RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 24 instances   SRLC32E => SRL16E: 5 instances  
// TclEventType: PROJ_DESIGN_MODE_SET
// Device view-level: 0.0
// Device view-level: 0.0
// TclEventType: PROJ_DESIGN_MODE_SET
// TclEventType: DESIGN_MODE_CHANGE
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// RouteApi::loadEngineXgd elapsed time: 1.2s
// Device view-level: 0.0
// Tcl Message: INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221 
// Tcl Message: open_checkpoint: Time (s): cpu = 00:00:12 ; elapsed = 00:00:11 . Memory (MB): peak = 9379.824 ; gain = 15.012 ; free physical = 329 ; free virtual = 22592 
// Tcl Message: checkpoint_top_mode1_routed 
// HMemoryUtils.trashcanNow. Engine heap size: 4,366 MB. GUI used memory: 209 MB. Current time: 5/2/19 1:14:08 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 4,358 MB. GUI used memory: 182 MB. Current time: 5/2/19 1:14:09 PM BST
// RouteApi: Init Delay Mediator Swing Worker Finished
// Elapsed time: 12 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Device view-level: 0.0
// Device view-level: 0.4
// Tcl Command: 'rdi::info_commands {update*}'
// Tcl Command: 'rdi::info_commands {update_*}'
// Tcl Command: 'rdi::info_commands {update_desi*}'
// Tcl Command: 'rdi::match_options {update_design} {cell}'
// Elapsed time: 11 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "update_design -cell"); // aF (ae, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper)]", 3); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1)]", 6); // aW (O, cj)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1), partial_led_0 (design_1_partial_led_0_0)]", 18, false); // aW (O, cj)
selectMenuItem(RDIResourceCommand.RDICommands_COPY, "Copy"); // ac (ai, cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {update_design} {design_1_wrapper/design_1_i/} {partial_led_0}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {update_design} {design_1_wrapper/design_1_i/} {partial_led_0 }'
// Tcl Command: 'rdi::match_options {update_design} {}'
// Tcl Command: 'rdi::match_options {update_design} {bl}'
// Tcl Command: 'rdi::match_options {update_design} {bl}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {update_design} {design_1_wrapper/design_1_i/} {partial_led_0 -black_box }'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "update_design -cell design_1_wrapper/design_1_i/partial_led_0 -black_box", true); // aF (ae, cj)
// Tcl Command: 'update_design -cell design_1_wrapper/design_1_i/partial_led_0 -black_box'
// Tcl Command: 'update_design -cell design_1_wrapper/design_1_i/partial_led_0 -black_box'
// TclEventType: NETLIST_UPDATE
// TclEventType: PLACEDB_MODIFIY_PRE
// HMemoryUtils.trashcanNow. Engine heap size: 4,351 MB. GUI used memory: 213 MB. Current time: 5/2/19 1:14:33 PM BST
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: update_design -cell design_1_wrapper/design_1_i/partial_led_0 -black_box 
// Tcl Message: INFO: [Designutils 20-2277] Running 'update_design -black_box' on cell design_1_wrapper/design_1_i/partial_led_0. The cell has HD.RECONFIGURABLE property set to true and it will be turned into a black-box cell after this command. 
// TclEventType: PLACEDB_MODIFIY_PRE
// TclEventType: NETLIST_UPDATE
// [GUI Memory]: 222 MB (+2547kb) [00:24:31]
// HMemoryUtils.trashcanNow. Engine heap size: 4,351 MB. GUI used memory: 208 MB. Current time: 5/2/19 1:14:35 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 4,351 MB. GUI used memory: 184 MB. Current time: 5/2/19 1:14:35 PM BST
// bs (cj):  Tcl Command Line : addNotify
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {lock*}'
// Tcl Command: 'rdi::info_commands {lock_*}'
// Tcl Command: 'rdi::info_commands {lock_design*}'
// Tcl Command: 'rdi::match_options {lock_design} {}'
// Tcl Command: 'rdi::match_options {lock_design} {level}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "lock_design -level routing", true); // aF (ae, cj)
// Tcl Command: 'lock_design -level routing'
// Tcl Command: 'lock_design -level routing'
// Tcl Message: lock_design -level routing 
// Tcl Message: Locking Netlist... Locking Placement... Locking Routing... 
// HMemoryUtils.trashcanNow. Engine heap size: 4,354 MB. GUI used memory: 187 MB. Current time: 5/2/19 1:14:46 PM BST
// Tcl Command: 'rdi::info_commands {write*}'
// Tcl Command: 'rdi::info_commands {write_check*}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {for}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {force}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {check}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {st}'
// Elapsed time: 15 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_checkpoint -force ./nicap_extend/checkpoints/static_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'write_checkpoint -force ./nicap_extend/checkpoints/static_routed.dcp'
// Tcl Command: 'write_checkpoint -force ./nicap_extend/checkpoints/static_routed.dcp'
// Tcl Message: write_checkpoint -force ./nicap_extend/checkpoints/static_routed.dcp 
// Tcl Message: Writing placer database... 
// Tcl Message: Writing XDEF routing. Writing XDEF routing logical nets. Writing XDEF routing special nets. 
// Tcl Message: Write XDEF Complete: Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.68 . Memory (MB): peak = 9379.824 ; gain = 0.000 ; free physical = 249 ; free virtual = 22542 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Common 17-1381] The checkpoint '/home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/static_routed.dcp' has been generated. 
// Tcl Message: write_checkpoint: Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 9379.824 ; gain = 0.000 ; free physical = 267 ; free virtual = 22539 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/static_routed.dcp 
// HMemoryUtils.trashcanNow. Engine heap size: 4,354 MB. GUI used memory: 227 MB. Current time: 5/2/19 1:15:05 PM BST
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {c*}'
// Tcl Command: 'rdi::info_commands {co*}'
// Tcl Command: 'rdi::info_commands {c*}'
// Tcl Command: 'rdi::info_commands {close*}'
// Tcl Command: 'rdi::info_commands {close_design*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "close_design", true); // aF (ae, cj)
// Tcl Command: 'close_design'
// Tcl Command: 'close_design'
// TclEventType: DESIGN_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 4,354 MB. GUI used memory: 174 MB. Current time: 5/2/19 1:15:14 PM BST
// Engine heap size: 4,354 MB. GUI used memory: 175 MB. Current time: 5/2/19 1:15:14 PM BST
// TclEventType: CURR_DESIGN_SET
// Tcl Message: close_design 
// TclEventType: DESIGN_CLOSE
// TclEventType: PROJECT_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 4,346 MB. GUI used memory: 167 MB. Current time: 5/2/19 1:15:15 PM BST
// Tcl Command: 'rdi::info_commands {open*}'
// Tcl Command: 'rdi::info_commands {open_check*}'
// Tcl Command: 'rdi::info_commands {open_check*}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {check}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {sta}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {sta}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {static_routed.dcp}'
// Elapsed time: 12 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "open_checkpoint ./nicap_extend/checkpoints/static_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'open_checkpoint ./nicap_extend/checkpoints/static_routed.dcp'
// Tcl Command: 'open_checkpoint ./nicap_extend/checkpoints/static_routed.dcp'
// Tcl Message: current_project nicap_test 
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_ADD
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_NEW
// Tcl Message: open_checkpoint ./nicap_extend/checkpoints/static_routed.dcp 
// Tcl Message: Command: open_checkpoint ./nicap_extend/checkpoints/static_routed.dcp  Starting open_checkpoint Task  Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 9379.824 ; gain = 0.000 ; free physical = 392 ; free virtual = 22663 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2017.4/data/ip'. 
// bs (cj):  Tcl Command Line : addNotify
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_CNS_STALE
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 4,344 MB. GUI used memory: 173 MB. Current time: 5/2/19 1:15:38 PM BST
// TclEventType: DESIGN_NEW
// Device: addNotify
// DeviceView Instantiated
// TclEventType: CURR_DESIGN_SET
// Tcl Message: INFO: [Netlist 29-17] Analyzing 448 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// Tcl Message: Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp36/sys_top_board.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp36/sys_top_board.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp36/sys_top_early.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp36/sys_top_early.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp36/sys_top.xdc] 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp36/sys_top.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp36/sys_top_late.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp36/sys_top_late.xdc] Reading XDEF placement. Reading placer database... Reading XDEF routing. 
// Tcl Message: Read XDEF File: Time (s): cpu = 00:00:00.66 ; elapsed = 00:00:00.65 . Memory (MB): peak = 9379.824 ; gain = 0.000 ; free physical = 278 ; free virtual = 22578 
// Tcl Message: Restored from archive | CPU: 0.670000 secs | Memory: 14.397568 MB | 
// Tcl Message: Finished XDEF File Restore: Time (s): cpu = 00:00:00.66 ; elapsed = 00:00:00.65 . Memory (MB): peak = 9379.824 ; gain = 0.000 ; free physical = 278 ; free virtual = 22578 
// TclEventType: PROJ_DESIGN_MODE_SET
// Tcl Message: INFO: [Project 1-486] Could not resolve non-primitive black box cell 'design_1_partial_led_0_0_bb' instantiated as 'design_1_wrapper/design_1_i/partial_led_0' [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/bd/design_1/synth/design_1.v:1010] INFO: [Project 1-111] Unisim Transformation Summary:   A total of 24 instances were transformed.   RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 24 instances  
// TclEventType: PROJ_DESIGN_MODE_SET
// Device view-level: 0.0
// Device view-level: 0.0
// TclEventType: PROJ_DESIGN_MODE_SET
// TclEventType: DESIGN_MODE_CHANGE
// Tcl Message: INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221 
// Tcl Message: open_checkpoint: Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 9379.824 ; gain = 0.000 ; free physical = 257 ; free virtual = 22528 
// Tcl Message: checkpoint_static_routed 
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// RouteApi::loadEngineXgd elapsed time: 1.3s
// Device view-level: 0.0
// HMemoryUtils.trashcanNow. Engine heap size: 4,368 MB. GUI used memory: 212 MB. Current time: 5/2/19 1:15:39 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 4,360 MB. GUI used memory: 185 MB. Current time: 5/2/19 1:15:40 PM BST
// RouteApi: Init Delay Mediator Swing Worker Finished
// Elapsed time: 13 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Device view-level: 0.0
// Device view-level: 0.4
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper)]", 3); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1)]", 6); // aW (O, cj)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1), partial_led_0 (design_1_partial_led_0_0_bb)]", 18, false); // aW (O, cj)
// Tcl Command: 'rdi::info_commands {read*}'
// Tcl Command: 'rdi::info_commands {read_check*}'
// Tcl Command: 'rdi::info_commands {read_check*}'
// Tcl Command: 'rdi::match_options {read_checkpoint} {}'
// Tcl Command: 'rdi::match_options {read_checkpoint} {cell}'
// Elapsed time: 11 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "read_checkpoint -cell"); // aF (ae, cj)
selectMenuItem(RDIResourceCommand.RDICommands_PASTE, "Paste"); // ac (ai, cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {design_1_wrapper/design_1_i/} {partial_led_0 }'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./} {nic}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./nicap_extend/} {check}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {read_checkpoint} {./nicap_extend/checkpoints/} {up.dcp}'
// Elapsed time: 14 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp", true); // aF (ae, cj)
// Tcl Command: 'read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp'
// Tcl Command: 'read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp'
// TclEventType: FILE_SET_CHANGE
// TclEventType: NETLIST_UPDATE
// Tcl Message: read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp 
// Tcl Message: Command: read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp 
// Tcl Message: INFO: [Netlist 29-17] Analyzing 6 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds 
// TclEventType: PLACEDB_MODIFIY_PRE
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: NETLIST_UPDATE
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: checkpoint_static_routed 
// HMemoryUtils.trashcanNow. Engine heap size: 4,353 MB. GUI used memory: 201 MB. Current time: 5/2/19 1:16:17 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 4,353 MB. GUI used memory: 188 MB. Current time: 5/2/19 1:16:17 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 4,353 MB. GUI used memory: 201 MB. Current time: 5/2/19 1:16:17 PM BST
dismissDialog("Tcl Command Line"); // bs (cj)
// Elapsed time: 123 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_0 ./nicap_extend/checkpoints/up.dcp"); // aF (ae, cj)
// Tcl Command: 'rdi::info_commands {opt*}'
// Tcl Command: 'rdi::info_commands {opt_*}'
// Tcl Command: 'rdi::info_commands {opt_designb*}'
// Tcl Command: 'rdi::info_commands {opt_design*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "opt_design", true); // aF (ae, cj)
// Tcl Command: 'opt_design'
// Tcl Command: 'opt_design'
// TclEventType: NETLIST_UPDATE
// Tcl Message: opt_design 
// Tcl Message: Command: opt_design Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: Running DRC as a precondition to command opt_design  Starting DRC Task 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 4 threads 
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: INFO: [Project 1-461] DRC finished with 0 Errors INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message:  Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.82 . Memory (MB): peak = 9379.824 ; gain = 0.000 ; free physical = 181 ; free virtual = 22459 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// bs (cj):  Tcl Command Line : addNotify
// TclEventType: NETLIST_UPDATE
// Tcl Message:  Starting Logic Optimization Task  Phase 1 Retarget 
// Tcl Message: INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). INFO: [Opt 31-49] Retargeted 0 cell(s). 
// Tcl Message: Phase 1 Retarget | Checksum: 1a2576f3e  Time (s): cpu = 00:00:00.93 ; elapsed = 00:00:00.73 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 190 ; free virtual = 22468 
// Tcl Message: INFO: [Opt 31-389] Phase Retarget created 0 cells and removed 0 cells 
// Tcl Message:  Phase 2 Constant propagation 
// Tcl Message: INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). 
// Tcl Message: Phase 2 Constant propagation | Checksum: 1a2576f3e  Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.99 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 190 ; free virtual = 22468 
// Tcl Message: INFO: [Opt 31-389] Phase Constant propagation created 0 cells and removed 0 cells 
// Tcl Message:  Phase 3 Sweep 
// Tcl Message: Phase 3 Sweep | Checksum: 12dabf2fe  Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 190 ; free virtual = 22467 
// Tcl Message: INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 0 cells 
// Tcl Message:  Phase 4 BUFG optimization 
// Tcl Message: Phase 4 BUFG optimization | Checksum: 12dabf2fe  Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 188 ; free virtual = 22465 
// Tcl Message: INFO: [Opt 31-389] Phase BUFG optimization created 0 cells and removed 0 cells 
// Tcl Message:  Phase 5 Shift Register Optimization Phase 5 Shift Register Optimization | Checksum: 12dabf2fe  Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 191 ; free virtual = 22469 
// Tcl Message: INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message:  Starting Connectivity Check Task  Time (s): cpu = 00:00:00.04 ; elapsed = 00:00:00.04 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 189 ; free virtual = 22467 Ending Logic Optimization Task | Checksum: c7b92b2a  Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 189 ; free virtual = 22467  Starting Power Optimization Task 
// Tcl Message: INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns. 
// Tcl Message: INFO: [Pwropt 34-232] Skipping BRAM gating because all BRAMs are in high frequency (i.e. period < 3.12 ns) clock domains. INFO: [Timing 38-35] Done setting XDC timing constraints. 
// TclEventType: NETLIST_UPDATE
// Tcl Message: INFO: [Physopt 32-619] Estimated Timing Summary | WNS=0.621 | TNS=0.000 | INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 54 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated. 
// Tcl Message: Ending Power Optimization Task | Checksum: 1d78b98ea  Time (s): cpu = 00:00:04 ; elapsed = 00:00:02 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 214 ; free virtual = 22454 
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 19 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered. opt_design completed successfully 
// Tcl Message: opt_design: Time (s): cpu = 00:00:12 ; elapsed = 00:00:08 . Memory (MB): peak = 9387.824 ; gain = 8.000 ; free physical = 214 ; free virtual = 22454 
// HMemoryUtils.trashcanNow. Engine heap size: 4,388 MB. GUI used memory: 187 MB. Current time: 5/2/19 1:18:35 PM BST
// PAPropertyPanels.initPanels (partial_led_0 (partial_led_test_v1_0)) elapsed time: 0.3s
// HMemoryUtils.trashcanNow. Engine heap size: 4,388 MB. GUI used memory: 188 MB. Current time: 5/2/19 1:18:36 PM BST
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {place*}'
// Tcl Command: 'rdi::info_commands {place_design*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "place_design", true); // aF (ae, cj)
// Tcl Command: 'place_design'
// Tcl Command: 'place_design'
// Tcl Message: place_design 
// Tcl Message: Command: place_design Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' INFO: [DRC 23-27] Running DRC with 4 threads INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message: Running DRC as a precondition to command place_design 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 4 threads 
// bs (cj):  Tcl Command Line : addNotify
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message:  Starting Placer Task 
// Tcl Message: INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 4 CPUs 
// Tcl Message:  Phase 1 Placer Initialization  Phase 1.1 Placer Initialization Netlist Sorting 
// Tcl Message: Netlist sorting complete. Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.02 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 267 ; free virtual = 22505 
// Tcl Message: Phase 1.1 Placer Initialization Netlist Sorting | Checksum: a84f75dc  Time (s): cpu = 00:00:00.11 ; elapsed = 00:00:00.13 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 267 ; free virtual = 22505 
// Tcl Message: INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). 
// Tcl Message: Netlist sorting complete. Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.02 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 280 ; free virtual = 22519 
// Tcl Message:  Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// Tcl Message: Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: e9eb6027  Time (s): cpu = 00:00:04 ; elapsed = 00:00:05 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 281 ; free virtual = 22521  Phase 1.3 Build Placer Netlist Model 
// Tcl Message: Phase 1.3 Build Placer Netlist Model | Checksum: 139e8dc53  Time (s): cpu = 00:00:08 ; elapsed = 00:00:07 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 268 ; free virtual = 22510  Phase 1.4 Constrain Clocks/Macros Phase 1.4 Constrain Clocks/Macros | Checksum: 139e8dc53  Time (s): cpu = 00:00:09 ; elapsed = 00:00:07 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 268 ; free virtual = 22510 Phase 1 Placer Initialization | Checksum: 139e8dc53  Time (s): cpu = 00:00:09 ; elapsed = 00:00:07 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 264 ; free virtual = 22506  Phase 2 Global Placement 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// Tcl Message:  Phase 4.1.1 Post Placement Optimization Post Placement Optimization Initialization | Checksum: f4968ec0  Phase 4.1.1.1 BUFG Insertion 
// Tcl Message: INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 4 CPUs INFO: [Place 46-31] BUFG insertion identified 0 candidate nets, 0 success, 0 skipped for placement/routing, 0 skipped for timing, 0 skipped for netlist change reason. 
// Tcl Message: Phase 4.1.1.1 BUFG Insertion | Checksum: f4968ec0  Time (s): cpu = 00:00:20 ; elapsed = 00:00:13 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 269 ; free virtual = 22509 
// Tcl Message: INFO: [Place 30-746] Post Placement Timing Summary WNS=0.621. For the most accurate timing information please run report_timing. 
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 4,389 MB. GUI used memory: 177 MB. Current time: 5/2/19 1:18:56 PM BST
// Engine heap size: 4,389 MB. GUI used memory: 178 MB. Current time: 5/2/19 1:18:56 PM BST
// TclEventType: DESIGN_CLOSE
// Tcl Message: Ending Placer Task | Checksum: 1a8545671  Time (s): cpu = 00:00:21 ; elapsed = 00:00:14 . Memory (MB): peak = 9387.824 ; gain = 0.000 ; free physical = 300 ; free virtual = 22540 
// TclEventType: DESIGN_CLOSE
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 4,389 MB. GUI used memory: 192 MB. Current time: 5/2/19 1:18:57 PM BST
// TclEventType: DESIGN_NEW
// [Engine Memory]: 4,445 MB (+13809kb) [00:28:53]
// Device: addNotify
// DeviceView Instantiated
// Device view-level: 0.0
// Device view-level: 0.0
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 15 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered. place_design completed successfully 
// Tcl Message: place_design: Time (s): cpu = 00:00:26 ; elapsed = 00:00:18 . Memory (MB): peak = 9414.840 ; gain = 27.016 ; free physical = 312 ; free virtual = 22552 
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// RouteApi::loadEngineXgd elapsed time: 1s
// Device view-level: 0.0
// HMemoryUtils.trashcanNow. Engine heap size: 4,397 MB. GUI used memory: 224 MB. Current time: 5/2/19 1:18:58 PM BST
// RouteApi: Init Delay Mediator Swing Worker Finished
// Elapsed time: 18 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {route*}'
// Tcl Command: 'rdi::info_commands {route_*}'
// Tcl Command: 'rdi::info_commands {route_design*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "route_design", true); // aF (ae, cj)
// Tcl Command: 'route_design'
// Tcl Command: 'route_design'
// Tcl Message: route_design 
// Tcl Message: Command: route_design Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: Running DRC as a precondition to command route_design 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 4 threads 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message:  
// Tcl Message:  Starting Routing Task 
// Tcl Message: INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 4 CPUs 
// Tcl Message: Checksum: PlaceDB: 95b1d8a4 ConstDB: 0 ShapeSum: d9415306 RouteDB: 39612ac7 
// Tcl Message:  Phase 1 Build RT Design 
// Tcl Message: Phase 1 Build RT Design | Checksum: 1c931a7f7  Time (s): cpu = 00:00:18 ; elapsed = 00:00:14 . Memory (MB): peak = 9414.840 ; gain = 0.000 ; free physical = 175 ; free virtual = 22417 
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: Post Restoration Checksum: NetGraph: e44ca408 NumContArr: cbaca551 Constraints: 42b7014a Timing: 0 
// Tcl Message:  Phase 2 Router Initialization  Phase 2.1 Create Timer Phase 2.1 Create Timer | Checksum: 1f2b04aa3  Time (s): cpu = 00:00:19 ; elapsed = 00:00:15 . Memory (MB): peak = 9414.840 ; gain = 0.000 ; free physical = 174 ; free virtual = 22415  Phase 2.2 Fix Topology Constraints Phase 2.2 Fix Topology Constraints | Checksum: 1f2b04aa3  Time (s): cpu = 00:00:19 ; elapsed = 00:00:15 . Memory (MB): peak = 9414.840 ; gain = 0.000 ; free physical = 154 ; free virtual = 22395  Phase 2.3 Pre Route Cleanup Phase 2.3 Pre Route Cleanup | Checksum: 1f2b04aa3  Time (s): cpu = 00:00:19 ; elapsed = 00:00:15 . Memory (MB): peak = 9414.840 ; gain = 0.000 ; free physical = 154 ; free virtual = 22395 
// Tcl Message:  Phase 2.4 Update Timing 
// HMemoryUtils.trashcanNow. Engine heap size: 4,436 MB. GUI used memory: 189 MB. Current time: 5/2/19 1:19:28 PM BST
// Tcl Message: Phase 2.4 Update Timing | Checksum: 204135d6f  Time (s): cpu = 00:00:24 ; elapsed = 00:00:17 . Memory (MB): peak = 9414.840 ; gain = 0.000 ; free physical = 173 ; free virtual = 22374 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.605  | TNS=0.000  | WHS=-0.218 | THS=-89.893|  
// Tcl Message: Phase 2 Router Initialization | Checksum: 1878789da  Time (s): cpu = 00:00:26 ; elapsed = 00:00:18 . Memory (MB): peak = 9414.840 ; gain = 0.000 ; free physical = 173 ; free virtual = 22374  Phase 3 Initial Routing Phase 3 Initial Routing | Checksum: 13d597c4d  Time (s): cpu = 00:00:26 ; elapsed = 00:00:18 . Memory (MB): peak = 9414.840 ; gain = 0.000 ; free physical = 173 ; free virtual = 22374  Phase 4 Rip-up And Reroute  Phase 4.1 Global Iteration 0 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.605  | TNS=0.000  | WHS=N/A    | THS=N/A    |  
// Tcl Message: Phase 4.1 Global Iteration 0 | Checksum: 1ce36b9b3  Time (s): cpu = 00:00:29 ; elapsed = 00:00:19 . Memory (MB): peak = 9414.840 ; gain = 0.000 ; free physical = 169 ; free virtual = 22371  Phase 4.2 Global Iteration 1 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.605  | TNS=0.000  | WHS=N/A    | THS=N/A    |  
// Tcl Message: Phase 6.1.1 Update Timing | Checksum: 1aa2f53a3  Time (s): cpu = 00:00:32 ; elapsed = 00:00:21 . Memory (MB): peak = 9414.840 ; gain = 0.000 ; free physical = 205 ; free virtual = 22387 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.619  | TNS=0.000  | WHS=0.024  | THS=0.000  |  
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 9 Depositing Routes | Checksum: 16e733248  Time (s): cpu = 00:00:34 ; elapsed = 00:00:23 . Memory (MB): peak = 9414.840 ; gain = 0.000 ; free physical = 204 ; free virtual = 22386  Phase 10 Post Router Timing 
// Tcl Message: INFO: [Route 35-57] Estimated Timing Summary | WNS=0.619  | TNS=0.000  | WHS=0.024  | THS=0.000  |  INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary. 
// Tcl Message: Phase 10 Post Router Timing | Checksum: 16e733248  Time (s): cpu = 00:00:34 ; elapsed = 00:00:23 . Memory (MB): peak = 9414.840 ; gain = 0.000 ; free physical = 204 ; free virtual = 22386 
// Tcl Message: INFO: [Route 35-16] Router Completed Successfully 
// TclEventType: ROUTE_DESIGN
// Tcl Message:  Time (s): cpu = 00:00:35 ; elapsed = 00:00:24 . Memory (MB): peak = 9437.195 ; gain = 22.355 ; free physical = 228 ; free virtual = 22414 
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 13 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered. route_design completed successfully 
// Tcl Message: route_design: Time (s): cpu = 00:00:39 ; elapsed = 00:00:27 . Memory (MB): peak = 9437.195 ; gain = 22.355 ; free physical = 228 ; free virtual = 22414 
// Elapsed time: 27 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {write*}'
// Tcl Command: 'rdi::info_commands {write_*}'
// Tcl Command: 'rdi::info_commands {write_check*}'
// Tcl Command: 'rdi::info_commands {write_check*}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {for}'
// Tcl Command: 'rdi::match_options {write_checkpoint} {force}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/} {chec}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_checkpoint} {./nicap_extend/checkpoints/} {}'
// Elapsed time: 33 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_checkpoint -force ./nicap_extend/checkpoints/top_mode2_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'write_checkpoint -force ./nicap_extend/checkpoints/top_mode2_routed.dcp'
// Tcl Command: 'write_checkpoint -force ./nicap_extend/checkpoints/top_mode2_routed.dcp'
// Tcl Message: write_checkpoint -force ./nicap_extend/checkpoints/top_mode2_routed.dcp 
// Tcl Message: Writing placer database... 
// Tcl Message: Writing XDEF routing. Writing XDEF routing logical nets. Writing XDEF routing special nets. 
// Tcl Message: Write XDEF Complete: Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.62 . Memory (MB): peak = 9437.195 ; gain = 0.000 ; free physical = 178 ; free virtual = 22387 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Common 17-1381] The checkpoint '/home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/top_mode2_routed.dcp' has been generated. 
// Tcl Message: write_checkpoint: Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 9437.195 ; gain = 0.000 ; free physical = 221 ; free virtual = 22405 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/top_mode2_routed.dcp 
// HMemoryUtils.trashcanNow. Engine heap size: 4,446 MB. GUI used memory: 204 MB. Current time: 5/2/19 1:20:15 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 4,446 MB. GUI used memory: 188 MB. Current time: 5/2/19 1:20:16 PM BST
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {close*}'
// Tcl Command: 'rdi::info_commands {close_design*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "close_design", true); // aF (ae, cj)
// Tcl Command: 'close_design'
// Tcl Command: 'close_design'
// TclEventType: DESIGN_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 4,446 MB. GUI used memory: 176 MB. Current time: 5/2/19 1:20:20 PM BST
// Engine heap size: 4,446 MB. GUI used memory: 177 MB. Current time: 5/2/19 1:20:20 PM BST
// TclEventType: CURR_DESIGN_SET
// Tcl Message: close_design 
// TclEventType: DESIGN_CLOSE
// TclEventType: PROJECT_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 4,406 MB. GUI used memory: 174 MB. Current time: 5/2/19 1:20:21 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 4,398 MB. GUI used memory: 206 MB. Current time: 5/2/19 1:20:21 PM BST
// Tcl Command: 'rdi::info_commands {pr*}'
// Tcl Command: 'rdi::info_commands {pr_*}'
// Tcl Command: 'rdi::info_commands {pr_ver*}'
// Tcl Command: 'rdi::info_commands {pr_ver*}'
// Tcl Command: 'rdi::match_options {pr_verify} {}'
// Tcl Command: 'rdi::match_options {pr_verify} {ful}'
// Tcl Command: 'rdi::match_options {pr_verify} {ful}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/} {check}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {top_mode1_routed.dcp }'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/} {chec}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {pr_verify} {./nicap_extend/checkpoints/} {top}'
// Elapsed time: 20 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "pr_verify -full_check ./nicap_extend/checkpoints/top_mode1_routed.dcp ./nicap_extend/checkpoints/top_mode2_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'pr_verify -full_check ./nicap_extend/checkpoints/top_mode1_routed.dcp ./nicap_extend/checkpoints/top_mode2_routed.dcp'
// Tcl Command: 'pr_verify -full_check ./nicap_extend/checkpoints/top_mode1_routed.dcp ./nicap_extend/checkpoints/top_mode2_routed.dcp'
// Tcl Message: current_project nicap_test 
// Tcl Message: pr_verify -full_check ./nicap_extend/checkpoints/top_mode1_routed.dcp ./nicap_extend/checkpoints/top_mode2_routed.dcp 
// Tcl Message: Command: pr_verify -full_check ./nicap_extend/checkpoints/top_mode1_routed.dcp ./nicap_extend/checkpoints/top_mode2_routed.dcp 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Netlist 29-17] Analyzing 454 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp42/sys_top.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp42/sys_top_late.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp42/sys_top_late.xdc] Reading XDEF placement. Reading placer database... Reading XDEF routing. 
// Tcl Message: Read XDEF File: Time (s): cpu = 00:00:00.69 ; elapsed = 00:00:00.67 . Memory (MB): peak = 9437.195 ; gain = 0.000 ; free physical = 321 ; free virtual = 22563 
// Tcl Message: Restored from archive | CPU: 0.700000 secs | Memory: 14.664581 MB | 
// Tcl Message: Finished XDEF File Restore: Time (s): cpu = 00:00:00.69 ; elapsed = 00:00:00.67 . Memory (MB): peak = 9437.195 ; gain = 0.000 ; free physical = 321 ; free virtual = 22563 
// Tcl Message: Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo/bit_buffer_fifo_clocks.xdc] for cell 'eth_bridge/bit_buffer/inst' Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo/bit_buffer_fifo_clocks.xdc] for cell 'eth_bridge/bit_buffer/inst' Sourcing Tcl File [/tools/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst' 
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221 
// Tcl Message: INFO: [Netlist 29-17] Analyzing 454 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp45/sys_top.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp45/sys_top_late.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp45/sys_top_late.xdc] Reading XDEF placement. Reading placer database... Reading XDEF routing. 
// Tcl Message: Read XDEF File: Time (s): cpu = 00:00:00.67 ; elapsed = 00:00:00.66 . Memory (MB): peak = 9437.195 ; gain = 0.000 ; free physical = 185 ; free virtual = 22428 
// Tcl Message: Restored from archive | CPU: 0.670000 secs | Memory: 14.772400 MB | 
// Tcl Message: Finished XDEF File Restore: Time (s): cpu = 00:00:00.67 ; elapsed = 00:00:00.66 . Memory (MB): peak = 9437.195 ; gain = 0.000 ; free physical = 184 ; free virtual = 22428 
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: Generating merged BMM file for the design top 'sys_top'... 
// Tcl Message: INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221 
// TclEventType: DESIGN_CLOSE
// Tcl Message: INFO: [Constraints 18-1020] PR Verify Summary: 
// Tcl Message: INFO: [Vivado 12-3253] PR_VERIFY: check points ./nicap_extend/checkpoints/top_mode1_routed.dcp and ./nicap_extend/checkpoints/top_mode2_routed.dcp are compatible 
// TclEventType: DESIGN_NEW_FAILED
// TclEventType: DESIGN_CLOSE
// TclEventType: DESIGN_NEW_FAILED
// Tcl Message: pr_verify: Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 9487.531 ; gain = 50.336 ; free physical = 392 ; free virtual = 22578 
// HMemoryUtils.trashcanNow. Engine heap size: 4,482 MB. GUI used memory: 195 MB. Current time: 5/2/19 1:21:02 PM BST
// Elapsed time: 21 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// [GUI Memory]: 235 MB (+1631kb) [00:47:13]
// HMemoryUtils.trashcanNow. Engine heap size: 4,482 MB. GUI used memory: 175 MB. Current time: 5/2/19 1:51:03 PM BST
// Tcl Command: 'rdi::info_commands {open*}'
// Tcl Command: 'rdi::info_commands {open_check*}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./} {nic}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {chec}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {chec}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {t}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {top_mode1_routed.dcp}'
// Elapsed time: 1960 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "open_checkpoint ./nicap_extend/checkpoints/top_mode1_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'open_checkpoint ./nicap_extend/checkpoints/top_mode1_routed.dcp'
// Tcl Command: 'open_checkpoint ./nicap_extend/checkpoints/top_mode1_routed.dcp'
// Tcl Message: open_checkpoint ./nicap_extend/checkpoints/top_mode1_routed.dcp 
// TclEventType: FILE_SET_NEW
// Tcl Message: Command: open_checkpoint ./nicap_extend/checkpoints/top_mode1_routed.dcp  Starting open_checkpoint Task  Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 9487.531 ; gain = 0.000 ; free physical = 198 ; free virtual = 22479 
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_ADD
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_NEW
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2017.4/data/ip'. 
// bs (cj):  Tcl Command Line : addNotify
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_CNS_STALE
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 4,487 MB. GUI used memory: 174 MB. Current time: 5/2/19 1:53:53 PM BST
// TclEventType: DESIGN_NEW
// Device: addNotify
// DeviceView Instantiated
// TclEventType: CURR_DESIGN_SET
// TclEventType: PROJ_DESIGN_MODE_SET
// Device view-level: 0.0
// TclEventType: PROJ_DESIGN_MODE_SET
// Device view-level: 0.0
// TclEventType: PROJ_DESIGN_MODE_SET
// TclEventType: DESIGN_MODE_CHANGE
// Tcl Message: INFO: [Netlist 29-17] Analyzing 454 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// Tcl Message: Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp48/sys_top_board.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp48/sys_top_board.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp48/sys_top_early.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp48/sys_top_early.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp48/sys_top.xdc] 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp48/sys_top.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp48/sys_top_late.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp48/sys_top_late.xdc] Reading XDEF placement. Reading placer database... Reading XDEF routing. 
// Tcl Message: Read XDEF File: Time (s): cpu = 00:00:00.67 ; elapsed = 00:00:00.67 . Memory (MB): peak = 9487.531 ; gain = 0.000 ; free physical = 161 ; free virtual = 22450 
// Tcl Message: Restored from archive | CPU: 0.670000 secs | Memory: 14.682137 MB | 
// Tcl Message: Finished XDEF File Restore: Time (s): cpu = 00:00:00.67 ; elapsed = 00:00:00.67 . Memory (MB): peak = 9487.531 ; gain = 0.000 ; free physical = 161 ; free virtual = 22450 
// Tcl Message: INFO: [Project 1-111] Unisim Transformation Summary:   A total of 29 instances were transformed.   RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 24 instances   SRLC32E => SRL16E: 5 instances  INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221 
// Tcl Message: open_checkpoint: Time (s): cpu = 00:00:12 ; elapsed = 00:00:11 . Memory (MB): peak = 9519.551 ; gain = 32.020 ; free physical = 200 ; free virtual = 22420 
// Tcl Message: checkpoint_top_mode1_routed 
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// RouteApi::loadEngineXgd elapsed time: 1.3s
// Device view-level: 0.0
// HMemoryUtils.trashcanNow. Engine heap size: 4,504 MB. GUI used memory: 185 MB. Current time: 5/2/19 1:53:55 PM BST
// RouteApi: Init Delay Mediator Swing Worker Finished
// Elapsed time: 12 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// HMemoryUtils.trashcanNow. Engine heap size: 4,504 MB. GUI used memory: 213 MB. Current time: 5/2/19 1:53:55 PM BST
// Device view-level: 0.0
// Device view-level: 0.4
// Tcl Command: 'rdi::info_commands {write*}'
// Tcl Command: 'rdi::info_commands {write_c*}'
// Tcl Command: 'rdi::info_commands {write_*}'
// Tcl Command: 'rdi::info_commands {write_bi*}'
// Tcl Command: 'rdi::match_options {write_bitstream} {}'
// Tcl Command: 'rdi::match_options {write_bitstream} {for}'
// Tcl Command: 'rdi::match_options {write_bitstream} {force}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/} {bit}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/} {bit}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/bitstreams/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/bitstreams/} {}'
// [GUI Memory]: 248 MB (+1529kb) [01:09:15]
// Elapsed time: 457 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_bitstream -force ./nicap_extend/bitstreams/"); // aF (ae, cj)
// [GUI Memory]: 262 MB (+2022kb) [01:13:40]
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/bitstreams/} {mode}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/bitstreams/} {mode1.bit}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/bitstreams/} {mode1.bit }'
// Elapsed time: 504 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_bitstream -force ./nicap_extend/bitstreams/mode1.bit", true); // aF (ae, cj)
// Tcl Command: 'write_bitstream -force ./nicap_extend/bitstreams/mode1.bit'
// Tcl Command: 'write_bitstream -force ./nicap_extend/bitstreams/mode1.bit'
// Tcl Message: write_bitstream -force ./nicap_extend/bitstreams/mode1.bit 
// Tcl Message: Command: write_bitstream -force ./nicap_extend/bitstreams/mode1.bit Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: Running DRC as a precondition to command write_bitstream 
// Tcl Message: INFO: [IP_Flow 19-1839] IP Catalog is up to date. 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [DRC 23-27] Running DRC with 4 threads 
// Tcl Message: INFO: [Vivado 12-3199] DRC finished with 0 Errors, 1 Warnings INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message: Partition "pblock_partial_led_0" Reconfigurable Module "design_1_wrapper/design_1_i/partial_led_0" 
// Tcl Message: INFO: [Project 1-821] Please set project.enableDesignId to be 'true'. 
// Tcl Message: INFO: [Designutils 20-2272] Running write_bitstream with 4 threads. 
// Tcl Message: Loading data files... 
// HMemoryUtils.trashcanNow. Engine heap size: 4,602 MB. GUI used memory: 187 MB. Current time: 5/2/19 2:10:09 PM BST
// Tcl Message: Loading site data... Loading route data... Processing options... Creating bitmap... 
// Tcl Message: Creating bitstream... 
// Tcl Message: Writing bitstream ./nicap_extend/bitstreams/mode1.bit... Process Partition "pblock_partial_led_0" 
// Tcl Message: INFO: [Designutils 20-2272] Running write_bitstream with 4 threads. 
// Tcl Message: Loading data files... 
// Tcl Message: Loading site data... Loading route data... Processing options... 
// Tcl Message: Partition "pblock_partial_led_0" has RESET_AFTER_RECONFIG = TRUE. Creating bitmap... 
// Tcl Message: Creating bitstream... Partial bitstream contains 2142688 bits. Writing bitstream ./nicap_extend/bitstreams/mode1_pblock_partial_led_0_partial.bit... 
// Tcl Message: INFO: [Vivado 12-1842] Bitgen Completed Successfully. 
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 10 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered. write_bitstream completed successfully 
// Tcl Message: write_bitstream: Time (s): cpu = 00:00:29 ; elapsed = 00:00:25 . Memory (MB): peak = 9569.711 ; gain = 50.160 ; free physical = 1224 ; free virtual = 22182 
// Tcl Message: ./nicap_extend/bitstreams/mode1.bit 
// Elapsed time: 26 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {close*}'
// Tcl Command: 'rdi::info_commands {close_design*}'
// Elapsed time: 41 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "close_design", true); // aF (ae, cj)
// Tcl Command: 'close_design'
// Tcl Command: 'close_design'
// TclEventType: DESIGN_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 4,594 MB. GUI used memory: 174 MB. Current time: 5/2/19 2:11:06 PM BST
// Engine heap size: 4,594 MB. GUI used memory: 175 MB. Current time: 5/2/19 2:11:06 PM BST
// TclEventType: CURR_DESIGN_SET
// Tcl Message: close_design 
// TclEventType: DESIGN_CLOSE
// TclEventType: PROJECT_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 4,586 MB. GUI used memory: 172 MB. Current time: 5/2/19 2:11:06 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 4,586 MB. GUI used memory: 193 MB. Current time: 5/2/19 2:11:07 PM BST
// Tcl Command: 'rdi::info_commands {open*}'
// Tcl Command: 'rdi::info_commands {open_check*}'
// Tcl Command: 'rdi::info_commands {open_check*}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {}'
// Elapsed time: 19 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "open_checkpoint ./nicap_extend/"); // aF (ae, cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {bit}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {bit}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/bitstreams/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/bitstreams/} {}'
// Elapsed time: 111 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "open_checkpoint ./nicap_extend/bitstreams/"); // aF (ae, cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/bitstreams/} {top}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/bitstreams/} {t}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/bitstreams/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/bitstreams/} {mo}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {bit}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {cgec}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {c}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {ch}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/} {ch}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {open_checkpoint} {./nicap_extend/checkpoints/} {top}'
// Elapsed time: 68 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "open_checkpoint ./nicap_extend/checkpoints/top_mode2_routed.dcp"); // aF (ae, cj)
selectCodeEditor(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, 661, 76); // dw (ad, cj)
selectCodeEditor(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, 644, 72, false, false, false, true, false); // dw (ad, cj) - Popup Trigger
selectCodeEditor(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, 1249, 77); // dw (ad, cj)
// Elapsed time: 13 seconds
applyEnter(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "open_checkpoint ./nicap_extend/checkpoints/top_mode2_routed.dcp"); // aF (ae, cj)
// Tcl Command: 'open_checkpoint ./nicap_extend/checkpoints/top_mode2_routed.dcp'
// Tcl Command: 'open_checkpoint ./nicap_extend/checkpoints/top_mode2_routed.dcp'
// Tcl Message: current_project nicap_test 
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_ADD
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_NEW
// Tcl Message: open_checkpoint ./nicap_extend/checkpoints/top_mode2_routed.dcp 
// Tcl Message: Command: open_checkpoint ./nicap_extend/checkpoints/top_mode2_routed.dcp  Starting open_checkpoint Task  Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 9569.711 ; gain = 0.000 ; free physical = 1360 ; free virtual = 22363 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2017.4/data/ip'. 
// bs (cj):  Tcl Command Line : addNotify
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_CNS_STALE
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 4,584 MB. GUI used memory: 176 MB. Current time: 5/2/19 2:14:54 PM BST
// TclEventType: DESIGN_NEW
// Device: addNotify
// DeviceView Instantiated
// TclEventType: CURR_DESIGN_SET
// TclEventType: PROJ_DESIGN_MODE_SET
// Device view-level: 0.0
// TclEventType: PROJ_DESIGN_MODE_SET
// Device view-level: 0.0
// TclEventType: PROJ_DESIGN_MODE_SET
// TclEventType: DESIGN_MODE_CHANGE
// Tcl Message: INFO: [Netlist 29-17] Analyzing 454 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// Tcl Message: Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp50/sys_top_board.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp50/sys_top_board.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp50/sys_top_early.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp50/sys_top_early.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp50/sys_top.xdc] 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp50/sys_top.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp50/sys_top_late.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/.Xil/Vivado-16569-alex-pc/dcp50/sys_top_late.xdc] Reading XDEF placement. Reading placer database... Reading XDEF routing. 
// Tcl Message: Read XDEF File: Time (s): cpu = 00:00:00.63 ; elapsed = 00:00:00.63 . Memory (MB): peak = 9569.711 ; gain = 0.000 ; free physical = 1282 ; free virtual = 22314 
// Tcl Message: Restored from archive | CPU: 0.640000 secs | Memory: 14.731148 MB | 
// Tcl Message: Finished XDEF File Restore: Time (s): cpu = 00:00:00.63 ; elapsed = 00:00:00.63 . Memory (MB): peak = 9569.711 ; gain = 0.000 ; free physical = 1282 ; free virtual = 22314 
// Tcl Message: INFO: [Project 1-111] Unisim Transformation Summary:   A total of 24 instances were transformed.   RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 24 instances  INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221 
// Tcl Message: open_checkpoint: Time (s): cpu = 00:00:12 ; elapsed = 00:00:11 . Memory (MB): peak = 9614.738 ; gain = 45.027 ; free physical = 1283 ; free virtual = 22285 
// Tcl Message: checkpoint_top_mode2_routed 
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// RouteApi::loadEngineXgd elapsed time: 1.2s
// Device view-level: 0.0
// HMemoryUtils.trashcanNow. Engine heap size: 4,608 MB. GUI used memory: 204 MB. Current time: 5/2/19 2:14:55 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 4,600 MB. GUI used memory: 188 MB. Current time: 5/2/19 2:14:56 PM BST
// RouteApi: Init Delay Mediator Swing Worker Finished
// Elapsed time: 12 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Device view-level: 0.0
// Device view-level: 0.4
// Tcl Command: 'rdi::info_commands {write*}'
// Tcl Command: 'rdi::info_commands {write_*}'
// Tcl Command: 'rdi::info_commands {write_bi*}'
// Tcl Command: 'rdi::info_commands {write_bi*}'
// Tcl Command: 'rdi::match_options {write_bitstream} {for}'
// Tcl Command: 'rdi::match_options {write_bitstream} {force}'
// [Engine Memory]: 4,728 MB (+64004kb) [01:28:36]
// Elapsed time: 225 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_bitstream -force"); // aF (ae, cj)
// HMemoryUtils.trashcanNow. Engine heap size: 4,728 MB. GUI used memory: 188 MB. Current time: 5/2/19 2:18:43 PM BST
// Elapsed time: 240 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_bitstream -force"); // aF (ae, cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./} {nic}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./} {nic}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/} {bit}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/} {bit}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/bitstreams/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/bitstreams/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_bitstream} {./nicap_extend/bitstreams/} {mo}'
// Elapsed time: 15 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_bitstream -force ./nicap_extend/bitstreams/mode2.bit", true); // aF (ae, cj)
// Tcl Command: 'write_bitstream -force ./nicap_extend/bitstreams/mode2.bit'
// Tcl Command: 'write_bitstream -force ./nicap_extend/bitstreams/mode2.bit'
// Tcl Message: write_bitstream -force ./nicap_extend/bitstreams/mode2.bit 
// Tcl Message: Command: write_bitstream -force ./nicap_extend/bitstreams/mode2.bit Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: Running DRC as a precondition to command write_bitstream 
// Tcl Message: INFO: [IP_Flow 19-1839] IP Catalog is up to date. INFO: [DRC 23-27] Running DRC with 4 threads 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Vivado 12-3199] DRC finished with 0 Errors, 1 Warnings INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message: Partition "pblock_partial_led_0" Reconfigurable Module "design_1_wrapper/design_1_i/partial_led_0" 
// Tcl Message: INFO: [Project 1-821] Please set project.enableDesignId to be 'true'. 
// Tcl Message: INFO: [Designutils 20-2272] Running write_bitstream with 4 threads. 
// Tcl Message: Loading data files... 
// Tcl Message: Loading site data... Loading route data... Processing options... Creating bitmap... 
// HMemoryUtils.trashcanNow. Engine heap size: 4,772 MB. GUI used memory: 188 MB. Current time: 5/2/19 2:23:08 PM BST
// Tcl Message: Creating bitstream... 
// Tcl Message: Writing bitstream ./nicap_extend/bitstreams/mode2.bit... Process Partition "pblock_partial_led_0" 
// Tcl Message: INFO: [Designutils 20-2272] Running write_bitstream with 4 threads. 
// Tcl Message: Loading data files... 
// Tcl Message: Loading site data... Loading route data... Processing options... 
// Tcl Message: Partition "pblock_partial_led_0" has RESET_AFTER_RECONFIG = TRUE. Creating bitmap... 
// Tcl Message: Creating bitstream... Partial bitstream contains 2142688 bits. Writing bitstream ./nicap_extend/bitstreams/mode2_pblock_partial_led_0_partial.bit... 
// Tcl Message: INFO: [Vivado 12-1842] Bitgen Completed Successfully. INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 10 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered. write_bitstream completed successfully 
// Tcl Message: write_bitstream: Time (s): cpu = 00:00:27 ; elapsed = 00:00:21 . Memory (MB): peak = 9614.738 ; gain = 0.000 ; free physical = 1241 ; free virtual = 22239 
// Tcl Message: ./nicap_extend/bitstreams/mode2.bit 
// HMemoryUtils.trashcanNow. Engine heap size: 4,764 MB. GUI used memory: 203 MB. Current time: 5/2/19 2:23:18 PM BST
// Elapsed time: 21 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {close*}'
// Tcl Command: 'rdi::info_commands {close_design*}'
// Elapsed time: 18 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "close_design", true); // aF (ae, cj)
// Tcl Command: 'close_design'
// Tcl Command: 'close_design'
// TclEventType: DESIGN_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 4,764 MB. GUI used memory: 178 MB. Current time: 5/2/19 2:23:38 PM BST
// Engine heap size: 4,764 MB. GUI used memory: 178 MB. Current time: 5/2/19 2:23:38 PM BST
// TclEventType: CURR_DESIGN_SET
// Tcl Message: close_design 
// TclEventType: DESIGN_CLOSE
// TclEventType: PROJECT_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 4,756 MB. GUI used memory: 191 MB. Current time: 5/2/19 2:23:38 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 4,756 MB. GUI used memory: 202 MB. Current time: 5/2/19 2:23:38 PM BST
// Tcl Command: 'rdi::info_commands {boot*}'
// Tcl Command: 'rdi::info_commands {bootgen*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "bootgen", true); // aF (ae, cj)
// Tcl Command: 'bootgen'
// Tcl Command: 'bootgen'
// Tcl Message: current_project nicap_test 
// Tcl Message: bootgen 
// Device view-level: 0.0
// Tcl Command: 'rdi::info_commands {cd*}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {cd} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {cd} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {cd} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {cd} {./nicap_extend/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {cd} {./nicap_extend/} {bi}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {cd} {./nicap_extend/bitstreams/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {cd} {./nicap_extend/bitstreams/} {}'
// Elapsed time: 122 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "cd ./nicap_extend/bitstreams/", true); // aF (ae, cj)
// Tcl Command: 'cd ./nicap_extend/bitstreams/'
// Tcl Command: 'cd ./nicap_extend/bitstreams/'
// Tcl Message: cd ./nicap_extend/bitstreams/ 
// HMemoryUtils.trashcanNow. Engine heap size: 4,756 MB. GUI used memory: 206 MB. Current time: 5/2/19 2:25:48 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 4,756 MB. GUI used memory: 197 MB. Current time: 5/2/19 2:25:48 PM BST
// Tcl Command: 'rdi::info_commands {b*}'
// Tcl Command: 'rdi::info_commands {boot*}'
// Tcl Command: 'rdi::info_commands {bootgen*}'
// Tcl Command: 'rdi::match_options {bootgen} {}'
// Tcl Command: 'rdi::match_options {bootgen} {ima}'
// Tcl Command: 'rdi::match_options {bootgen} {imager}'
// Tcl Command: 'rdi::match_options {bootgen} {image}'
// Tcl Command: 'rdi::match_options {bootgen} {}'
// Tcl Command: 'rdi::match_options {bootgen} {ar}'
// Tcl Command: 'rdi::match_options {bootgen} {arch}'
// Tcl Command: 'rdi::match_options {bootgen} {}'
// Tcl Command: 'rdi::match_options {bootgen} {w}'
// Tcl Command: 'rdi::match_options {bootgen} {}'
// Tcl Command: 'rdi::match_options {bootgen} {sploit}'
// Tcl Command: 'rdi::match_options {bootgen} {spl}'
// Tcl Command: 'rdi::match_options {bootgen} {}'
// Tcl Command: 'rdi::match_options {bootgen} {proce}'
// Tcl Command: 'rdi::match_options {bootgen} {process}'
// Tcl Command: 'rdi::match_options {bootgen} {process_}'
// Tcl Command: 'rdi::match_options {bootgen} {process_bnitstrea}'
// Tcl Command: 'rdi::match_options {bootgen} {process_bn}'
// Tcl Command: 'rdi::match_options {bootgen} {process_b}'
// Tcl Command: 'rdi::match_options {bootgen} {process_bit}'
// Tcl Command: 'rdi::match_options {bootgen} {process_bitstream}'
// Elapsed time: 86 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "bootgen -image partial.bif -arch zynq -w -split bin -process_bitstream bin", true); // aF (ae, cj)
// Tcl Command: 'bootgen -image partial.bif -arch zynq -w -split bin -process_bitstream bin'
// Tcl Command: 'bootgen -image partial.bif -arch zynq -w -split bin -process_bitstream bin'
// Tcl Message: bootgen -image partial.bif -arch zynq -w -split bin -process_bitstream bin 
// Tcl Message: [ERROR]  : Process Bitstream & Split mode are mutually exclusive, cannot enable both modes 
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "bootgen -image partial.bif -arch zynq -w -split bin", true); // aF (ae, cj)
// Tcl Command: 'bootgen -image partial.bif -arch zynq -w -split bin'
// Tcl Command: 'bootgen -image partial.bif -arch zynq -w -split bin'
// Tcl Message: bootgen -image partial.bif -arch zynq -w -split bin 
// HMemoryUtils.trashcanNow. Engine heap size: 4,757 MB. GUI used memory: 194 MB. Current time: 5/2/19 2:27:22 PM BST
// Tcl Command: 'rdi::info_commands {e*}'
// Elapsed time: 14 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "exec bootgen -image partial.bif -arch zynq -w -split bin", true); // aF (ae, cj)
// Tcl Command: 'exec bootgen -image partial.bif -arch zynq -w -split bin'
// Tcl Command: 'exec bootgen -image partial.bif -arch zynq -w -split bin'
// Tcl Message: exec bootgen -image partial.bif -arch zynq -w -split bin 
// Elapsed time: 14 seconds
selectCodeEditor(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, 564, 387); // dw (ad, cj)
// Tcl Command: 'rdi::match_options {exec} {s}'
// Tcl Command: 'rdi::match_options {exec} {}'
// Tcl Command: 'rdi::match_options {exec} {process}'
// Tcl Command: 'rdi::match_options {exec} {process_}'
// Tcl Command: 'rdi::match_options {exec} {process_bitstream}'
// Elapsed time: 26 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "exec bootgen -image partial.bif -w -process_bitstream bin", true); // aF (ae, cj)
// Tcl Command: 'exec bootgen -image partial.bif -w -process_bitstream bin'
// Tcl Command: 'exec bootgen -image partial.bif -w -process_bitstream bin'
// Tcl Message: exec bootgen -image partial.bif -w -process_bitstream bin 
// Elapsed time: 24 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "exec bootgen -image partial.bif -w -process_bitstream bin", true); // aF (ae, cj)
// Tcl Command: 'exec bootgen -image partial.bif -w -process_bitstream bin'
// Tcl Command: 'exec bootgen -image partial.bif -w -process_bitstream bin'
// Tcl Message: exec bootgen -image partial.bif -w -process_bitstream bin 
// HMemoryUtils.trashcanNow. Engine heap size: 4,757 MB. GUI used memory: 234 MB. Current time: 5/2/19 2:28:41 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 4,757 MB. GUI used memory: 194 MB. Current time: 5/2/19 2:28:41 PM BST
// Tcl Command: 'rdi::info_commands {write*}'
// Tcl Command: 'rdi::info_commands {write_*}'
// Tcl Command: 'rdi::info_commands {write_h*}'
// Tcl Command: 'rdi::info_commands {write_hw*}'
// Tcl Command: 'rdi::info_commands {write_hwd*}'
// Tcl Command: 'rdi::info_commands {write_hwdef*}'
// Tcl Command: 'rdi::match_options {write_hwdef} {}'
// Tcl Command: 'rdi::match_options {write_hwdef} {pa}'
// Tcl Command: 'rdi::match_options {write_hwdef} {}'
// Tcl Command: 'rdi::match_options {write_hwdef} {file}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_hwdef} {./} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_hwdef} {./} {ni}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_hwdef} {../} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_hwdef} {../} {soft}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_hwdef} {../} {soft}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_hwdef} {../software/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_hwdef} {../software/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_hwdef} {../software/} {wrapper}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_hwdef} {../software/} {wrapper.}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {write_hwdef} {../software/} {wrapper.hdf}'
// Elapsed time: 53 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_hwdef -file ../software/wrapper.hdf", true); // aF (ae, cj)
// Tcl Command: 'write_hwdef -file ../software/wrapper.hdf'
// Tcl Command: 'write_hwdef -file ../software/wrapper.hdf'
// Tcl Message: write_hwdef -file ../software/wrapper.hdf 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/software/wrapper.hdf 
// Tcl Command: 'rdi::info_commands {a*}'
// Tcl Command: 'rdi::info_commands {launch*}'
// Tcl Command: 'rdi::info_commands {launch_sd*}'
// Tcl Command: 'rdi::match_options {launch_sdk} {wor}'
// Tcl Command: 'rdi::match_options {launch_sdk} {work}'
// Tcl Command: 'rdi::match_options {launch_sdk} {workspace}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {s}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {so}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {so}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {so}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../software/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../software/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {software}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {software }'
// Tcl Command: 'rdi::match_options {launch_sdk} {}'
// Tcl Command: 'rdi::match_options {launch_sdk} {h}'
// Tcl Command: 'rdi::match_options {launch_sdk} {h}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {software -hwspec }'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {s}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {s}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {s}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {so}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {so}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {so}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {sodf}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {so}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../} {soft}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../software/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../software/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../software/} {}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'bd::match_path {launch_sdk} {../software/} {wrapper.hdf}'
// Elapsed time: 46 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "launch_sdk -workspace ../software -hwspec ../software/wrapper.hdf", true); // aF (ae, cj)
// Tcl Command: 'launch_sdk -workspace ../software -hwspec ../software/wrapper.hdf'
// Tcl Command: 'launch_sdk -workspace ../software -hwspec ../software/wrapper.hdf'
// Tcl Message: launch_sdk -workspace ../software -hwspec ../software/wrapper.hdf 
// Tcl Message: INFO: [Vivado 12-393] Launching SDK... INFO: [Vivado 12-417] Running xsdk -workspace ../software -hwspec ../software/wrapper.hdf INFO: [Vivado 12-3157] SDK launch initiated. Please check console for any further messages. 
// HMemoryUtils.trashcanNow. Engine heap size: 4,757 MB. GUI used memory: 171 MB. Current time: 5/2/19 2:30:22 PM BST
// Elapsed time: 967 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, IP Integrator, Open Block Design]", 7, false); // u (O, cj)
// Run Command: PAResourceCommand.PACommandNames_OPEN_BLOCK_DESIGN
// bs (cj):  Open Block Design : addNotify
// TclEventType: RSB_OPEN_DIAGRAM
// Tcl Message: open_bd_design {/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/bd/design_1/design_1.bd} 
dismissDialog("Open Block Design"); // bs (cj)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Address Editor", 1); // k (j, cj)
selectTreeTable(PAResourceAtoD.AddressTreeTablePanel_ADDRESS_TREE_TABLE, "partial_led_0 ; S00_AXI ; S00_AXI_reg ; 0x43C0_0000 ; 64K ; 0x43C0_FFFF", 6, "0x43C0_0000", 3, false); // g (O, cj)
// HMemoryUtils.trashcanNow. Engine heap size: 4,758 MB. GUI used memory: 168 MB. Current time: 5/2/19 3:00:23 PM BST
