/*

Xilinx Vivado v2017.4 (64-bit) [Major: 2017, Minor: 4]
SW Build: 2086221 on Fri Dec 15 20:54:30 MST 2017
IP Build: 2085800 on Fri Dec 15 22:25:07 MST 2017

Process ID: 23358
License: Customer

Current time: 	Thu Apr 25 12:29:38 BST 2019
Time zone: 	Greenwich Mean Time (Europe/London)

OS: Ubuntu
OS Version: 4.15.0-46-generic
OS Architecture: amd64
Available processors (cores): 8

Display: :0
Screen size: 3840x1080
Screen resolution (DPI): 96
Available screens: 2
Available disk space: 17 GB
Default font: family=Dialog,name=Dialog,style=plain,size=12

Java version: 	1.8.0_112 64-bit
Java home: 	/opt/Xilinx/Vivado/2017.4/tps/lnx64/jre
JVM executable location: 	/opt/Xilinx/Vivado/2017.4/tps/lnx64/jre/bin/java

User name: 	alex
User home directory: /home/alex
User working directory: /home/alex/GitHub/ZyEthCAP/nicap_extend
User country: 	GB
User language: 	en
User locale: 	en_GB

RDI_BASEROOT: /opt/Xilinx/Vivado
HDI_APPROOT: /opt/Xilinx/Vivado/2017.4
RDI_DATADIR: /opt/Xilinx/Vivado/2017.4/data
RDI_BINDIR: /opt/Xilinx/Vivado/2017.4/bin

Vivado preferences file location: /home/alex/.Xilinx/Vivado/2017.4/vivado.xml
Vivado preferences directory: /home/alex/.Xilinx/Vivado/2017.4/
Vivado layouts directory: /home/alex/.Xilinx/Vivado/2017.4/layouts
PlanAhead jar file location: 	/opt/Xilinx/Vivado/2017.4/lib/classes/planAhead.jar
Vivado log file location: 	/home/alex/GitHub/ZyEthCAP/nicap_extend/vivado.log
Vivado journal file location: 	/home/alex/GitHub/ZyEthCAP/nicap_extend/vivado.jou
Engine tmp dir: 	./.Xil/Vivado-23358-alex-warc

GUI allocated memory:	184 MB
GUI max memory:		3,052 MB
Engine allocated memory: 869 MB

Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.

*/

// TclEventType: START_GUI
// Tcl Message: Sourcing tcl script '/home/alex/.Xilinx/Vivado/Vivado_init.tcl' 
// Tcl Message: start_gui 
// TclEventType: PROJECT_OPEN_DIALOG
// bs (cj):  Open Project : addNotify
// Opening Vivado Project: nicap_test.xpr. Version: Vivado v2017.4 
// TclEventType: DEBUG_PROBE_SET_CHANGE
// Tcl Message: open_project nicap_test.xpr 
// TclEventType: MSGMGR_MOVEMSG
// TclEventType: FILESET_TARGET_UCF_CHANGE
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_COMPLETED
// TclEventType: FILESET_TARGET_UCF_CHANGE
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_CURRENT
// TclEventType: FILE_SET_CHANGE
// [GUI Memory]: 57 MB (+56871kb) [00:00:06]
// [Engine Memory]: 867 MB (+758118kb) [00:00:06]
// TclEventType: FILE_SET_CHANGE
// TclEventType: PROJECT_NEW
// [Engine Memory]: 954 MB (+45548kb) [00:00:08]
// [GUI Memory]: 78 MB (+18961kb) [00:00:09]
// [GUI Memory]: 83 MB (+1162kb) [00:00:10]
// [GUI Memory]: 90 MB (+3601kb) [00:00:10]
// [Engine Memory]: 1,008 MB (+6580kb) [00:00:11]
// Tcl Message: open_project nicap_test.xpr 
// Tcl Message: Scanning sources... Finished scanning sources 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/alex/GitHub/ZyEthCAP/zycap_core'. INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/opt/Xilinx/Vivado/2017.4/data/ip'. 
// HMemoryUtils.trashcanNow. Engine heap size: 1,033 MB. GUI used memory: 48 MB. Current time: 4/25/19 12:29:43 PM BST
// Project name: nicap_test; location: /home/alex/GitHub/ZyEthCAP/nicap_extend; part: xc7z020clg400-1
// Tcl Message: open_project: Time (s): cpu = 00:00:15 ; elapsed = 00:00:07 . Memory (MB): peak = 6154.793 ; gain = 169.359 ; free physical = 5519 ; free virtual = 10638 
dismissDialog("Open Project"); // bs (cj)
// TclEventType: DG_ANALYSIS_MSG_RESET
// [Engine Memory]: 1,059 MB (+291kb) [00:00:14]
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Open Synthesized Design]", 15, true); // u (O, cj) - Node
// Run Command: PAResourceCommand.PACommandNames_GOTO_NETLIST_DESIGN
// bs (cj):  Open Synthesized Design : addNotify
// Tcl Message: open_run synth_1 -name synth_1 
// Tcl Message: Design is defaulting to impl run constrset: constrs_1 Design is defaulting to synth run part: xc7z020clg400-1 
// [Engine Memory]: 1,182 MB (+73310kb) [00:00:22]
// HMemoryUtils.trashcanNow. Engine heap size: 1,212 MB. GUI used memory: 50 MB. Current time: 4/25/19 12:30:05 PM BST
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// [Engine Memory]: 1,405 MB (+171761kb) [00:00:40]
// TclEventType: POWER_CNS_STALE
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: MARK_DEBUG_NET
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: MARK_DEBUG_NET
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// HMemoryUtils.trashcanNow. Engine heap size: 1,493 MB. GUI used memory: 49 MB. Current time: 4/25/19 12:30:25 PM BST
// [Engine Memory]: 1,517 MB (+43600kb) [00:00:56]
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: TIMING_RESULTS_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_ANALYSIS_MSG_RESET
// [Engine Memory]: 1,953 MB (+377782kb) [00:01:06]
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 1,953 MB. GUI used memory: 50 MB. Current time: 4/25/19 12:30:38 PM BST
// TclEventType: DESIGN_NEW
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// Xgd.load filename: /opt/Xilinx/Vivado/2017.4/data/parts/xilinx/zynq/devint/zynq/xc7z020/xc7z020.xgd; ZipEntry: xc7z020_detail.xgd elapsed time: 0.6s
// Device: addNotify
// [GUI Memory]: 96 MB (+1019kb) [00:01:09]
// DeviceView Instantiated
// TclEventType: CURR_DESIGN_SET
// Tcl Message: INFO: [Project 1-454] Reading design checkpoint '/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo.dcp' for cell 'eth_bridge/bit_buffer' INFO: [Netlist 29-17] Analyzing 499 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Device 21-403] Loading part xc7z020clg400-1 INFO: [Project 1-570] Preparing netlist for logic optimization 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/constrs_1/new/top_io.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_fplan_debug_bu.xdc] 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_fplan_debug_bu.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_io_debug.xdc] 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_io_debug.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_io.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_io.xdc] 
// Tcl Message: INFO: [Project 1-538] Using original IP XDC constraints instead of the XDC constraints in dcp '/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo.dcp' 
// Tcl Message: INFO: [Vivado 12-3272] Current instance is the top level cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst' of design 'synth_1' [/opt/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl:16] 
// Tcl Message: Finished Sourcing Tcl File [/opt/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst' Sourcing Tcl File [/opt/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst' 
// Tcl Message: INFO: [Vivado 12-3272] Current instance is the top level cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst' of design 'synth_1' [/opt/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl:16] 
// Tcl Message: Finished Sourcing Tcl File [/opt/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_cdc_inst' Sourcing Tcl File [/opt/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_single.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr' 
// Tcl Message: INFO: [Vivado 12-3272] Current instance is the top level cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr' of design 'synth_1' [/opt/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_single.tcl:5] 
// Tcl Message: Finished Sourcing Tcl File [/opt/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_single.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_rrst_wr' Sourcing Tcl File [/opt/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_single.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd' 
// Tcl Message: INFO: [Vivado 12-3272] Current instance is the top level cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gsckt_wrst.gic_rst.xpm_cdc_single_inst_wrst_rd' of design 'synth_1' [/opt/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_single.tcl:5] 
// Tcl Message: INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). 
// Tcl Message: Generating merged BMM file for the design top 'sys_top'... 
// Tcl Message: INFO: [Project 1-486] Could not resolve non-primitive black box cell 'partial_led_test_v1_0_S00_AXI' instantiated as 'design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst' [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/imports/hdl/partial_led_test_v1_0.v:47] INFO: [Project 1-111] Unisim Transformation Summary:   A total of 43 instances were transformed.   RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 43 instances  
// Device view-level: 0.0
// ExpRunCommands.openSynthResults elapsed time: 54.7s
// RouteApi: Init Delay Mediator Swing Worker Finished
// Tcl Message: open_run: Time (s): cpu = 00:00:41 ; elapsed = 00:00:53 . Memory (MB): peak = 7162.703 ; gain = 967.961 ; free physical = 4698 ; free virtual = 9848 
// 'dO' command handler elapsed time: 55 seconds
// M (cj): Critical Messages: addNotify
// [GUI Memory]: 107 MB (+7258kb) [00:01:11]
// Elapsed time: 55 seconds
dismissDialog("Open Synthesized Design"); // bs (cj)
// Tcl Message: update_compile_order -fileset sources_1 
// Elapsed time: 48 seconds
selectButton(PAResourceAtoD.CmdMsgDialog_OK, "OK"); // f (M)
dismissDialog("Critical Messages"); // M (cj)
// [GUI Memory]: 117 MB (+4834kb) [00:02:00]
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper)]", 3); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1)]", 6); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1), partial_led_test_v1_0_0 (design_1_partial_led_test_v1_0_0_0)]", 18); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1), partial_led_test_v1_0_0 (design_1_partial_led_test_v1_0_0_0), inst (partial_led_test_v1_0)]", 20); // aW (O, cj)
// [GUI Memory]: 124 MB (+410kb) [00:04:11]
// Tcl Command: 'rdi::info_commands bd::match_path'
// Elapsed time: 162 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_checkpoint -force ./checkpoints/top_synth.dcp", true); // aF (ae, cj)
// Tcl Command: 'write_checkpoint -force ./checkpoints/top_synth.dcp'
// Tcl Command: 'write_checkpoint -force ./checkpoints/top_synth.dcp'
// Tcl Message: write_checkpoint -force ./checkpoints/top_synth.dcp 
// Tcl Message: Writing placer database... Writing XDEF routing. Writing XDEF routing logical nets. Writing XDEF routing special nets. 
// Tcl Message: Write XDEF Complete: Time (s): cpu = 00:00:00.25 ; elapsed = 00:00:00.05 . Memory (MB): peak = 7164.699 ; gain = 0.000 ; free physical = 3277 ; free virtual = 8466 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Common 17-1381] The checkpoint '/home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/top_synth.dcp' has been generated. 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/top_synth.dcp 
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "open_checkpoint ./checkpoints/top_synth.dcp", true); // aF (ae, cj)
// Tcl Command: 'open_checkpoint ./checkpoints/top_synth.dcp'
// Tcl Command: 'open_checkpoint ./checkpoints/top_synth.dcp'
// TclEventType: PACKAGER_OBJECT_ADD
// TclEventType: BDCELL_LOCK_CHANGE
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_ADD
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_NEW
// Tcl Message: open_checkpoint ./checkpoints/top_synth.dcp 
// Tcl Message: Command: open_checkpoint ./checkpoints/top_synth.dcp  Starting open_checkpoint Task  Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 7164.699 ; gain = 0.000 ; free physical = 3268 ; free virtual = 8489 
// TclEventType: PROJECT_NEW
// [GUI Memory]: 136 MB (+6092kb) [00:05:00]
// bs (cj):  Tcl Command Line : addNotify
// HMemoryUtils.trashcanNow. Engine heap size: 2,117 MB. GUI used memory: 98 MB. Current time: 4/25/19 12:34:36 PM BST
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_CNS_STALE
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// [Engine Memory]: 2,145 MB (+99018kb) [00:05:06]
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 2,145 MB. GUI used memory: 98 MB. Current time: 4/25/19 12:34:39 PM BST
// TclEventType: DESIGN_NEW
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// Device: addNotify
// DeviceView Instantiated
// TclEventType: CURR_DESIGN_SET
// TclEventType: PROJ_DESIGN_MODE_SET
// Tcl Message: INFO: [Netlist 29-17] Analyzing 499 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// Tcl Message: Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp4/sys_top_board.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp4/sys_top_board.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp4/sys_top_early.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp4/sys_top_early.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp4/sys_top.xdc] 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp4/sys_top.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp4/sys_top_late.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp4/sys_top_late.xdc] Reading XDEF placement. Reading placer database... Reading XDEF routing. 
// Tcl Message: Read XDEF File: Time (s): cpu = 00:00:00.11 ; elapsed = 00:00:00.10 . Memory (MB): peak = 7280.270 ; gain = 0.000 ; free physical = 3074 ; free virtual = 8285 
// Tcl Message: Restored from archive | CPU: 0.110000 secs | Memory: -0.982414 MB | 
// Tcl Message: Finished XDEF File Restore: Time (s): cpu = 00:00:00.11 ; elapsed = 00:00:00.10 . Memory (MB): peak = 7280.270 ; gain = 0.000 ; free physical = 3074 ; free virtual = 8285 
// Tcl Message: INFO: [Project 1-486] Could not resolve non-primitive black box cell 'partial_led_test_v1_0_S00_AXI' instantiated as 'design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst' [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/imports/hdl/partial_led_test_v1_0.v:47] INFO: [Project 1-111] Unisim Transformation Summary:   A total of 43 instances were transformed.   RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 43 instances  
// TclEventType: PROJ_DESIGN_MODE_SET
// Device view-level: 0.0
// TclEventType: PROJ_DESIGN_MODE_SET
// TclEventType: DESIGN_MODE_CHANGE
// Tcl Message: INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221 
// Tcl Message: open_checkpoint: Time (s): cpu = 00:00:18 ; elapsed = 00:00:11 . Memory (MB): peak = 7398.410 ; gain = 233.711 ; free physical = 3012 ; free virtual = 8222 
// Tcl Message: checkpoint_top_synth 
// HMemoryUtils.trashcanNow. Engine heap size: 2,240 MB. GUI used memory: 108 MB. Current time: 4/25/19 12:34:42 PM BST
// RouteApi: Init Delay Mediator Swing Worker Finished
// Elapsed time: 11 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// HMemoryUtils.trashcanNow. Engine heap size: 2,241 MB. GUI used memory: 107 MB. Current time: 4/25/19 12:34:42 PM BST
// Tcl Command: 'rdi::info_commands {set*}'
// Tcl Command: 'rdi::info_commands {set_proper*}'
// Tcl Command: 'rdi::info_commands {set_proper*}'
// Tcl Command: 'rdi::info_commands {get*}'
// Tcl Command: 'rdi::info_commands {get_cell*}'
// Elapsed time: 18 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "set_property HD.RECONFIGURABLE true [get_cells ]"); // aF (ae, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper)]", 3); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1)]", 6); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1), partial_led_test_v1_0_0 (design_1_partial_led_test_v1_0_0_0)]", 18); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1), partial_led_test_v1_0_0 (design_1_partial_led_test_v1_0_0_0), inst (partial_led_test_v1_0)]", 20); // aW (O, cj)
// PAPropertyPanels.initPanels (partial_led_test_v1_0_S00_AXI_inst (partial_led_test_v1_0_S00_AXI)) elapsed time: 0.2s
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1), partial_led_test_v1_0_0 (design_1_partial_led_test_v1_0_0_0), inst (partial_led_test_v1_0), partial_led_test_v1_0_S00_AXI_inst (partial_led_test_v1_0_S00_AXI)]", 22, false); // aW (O, cj)
setText(PAResourceItoN.InstancePropPanels_NAME, "design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst"); // X (N, cj)
selectMenuItem(RDIResourceCommand.RDICommands_COPY, "Copy"); // ac (ai, cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "set_property HD.RECONFIGURABLE true [get_cells design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst]", true); // aF (ae, cj)
// Tcl Command: 'set_property HD.RECONFIGURABLE true [get_cells design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst]'
// Tcl Command: 'set_property HD.RECONFIGURABLE true [get_cells design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst]'
// Tcl Message: set_property HD.RECONFIGURABLE true [get_cells design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst] 
// Tcl Command: 'rdi::info_commands bd::match_path'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "read_xdc ./constraints/top_io.xdc", true); // aF (ae, cj)
// Tcl Command: 'read_xdc ./constraints/top_io.xdc'
// Tcl Command: 'read_xdc ./constraints/top_io.xdc'
// TclEventType: FILE_SET_CHANGE
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// [GUI Memory]: 143 MB (+906kb) [00:05:47]
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// Tcl Message: read_xdc ./constraints/top_io.xdc 
// Tcl Message: Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_io.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_io.xdc] 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_io.xdc 
// Tcl Command: 'rdi::info_commands {read*}'
// Tcl Command: 'rdi::info_commands {read_chec*}'
// Tcl Command: 'rdi::info_commands {read_chec*}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::match_options {read_checkpoint} {cell}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Elapsed time: 19 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "read_checkpoint ./checkpoints/up.dcp -cell"); // aF (ae, cj)
selectCodeEditor(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, 329, 66); // dw (ad, cj)
typeControlKey(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, "RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR", 'c'); // dw (ad, cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "read_checkpoint ./checkpoints/up.dcp -cell design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst", true); // aF (ae, cj)
// Tcl Command: 'read_checkpoint ./checkpoints/up.dcp -cell design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst'
// Tcl Command: 'read_checkpoint ./checkpoints/up.dcp -cell design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst'
// TclEventType: FILE_SET_CHANGE
// TclEventType: NETLIST_UPDATE
// Tcl Message: read_checkpoint ./checkpoints/up.dcp -cell design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst 
// Tcl Message: Command: read_checkpoint ./checkpoints/up.dcp -cell design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst 
// Tcl Message: INFO: [Netlist 29-17] Analyzing 6 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds 
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: NETLIST_UPDATE
// Tcl Message: checkpoint_top_synth 
// HMemoryUtils.trashcanNow. Engine heap size: 2,239 MB. GUI used memory: 109 MB. Current time: 4/25/19 12:35:44 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 2,238 MB. GUI used memory: 108 MB. Current time: 4/25/19 12:35:44 PM BST
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1), partial_led_test_v1_0_0 (design_1_partial_led_test_v1_0_0_0), inst (partial_led_test_v1_0), partial_led_test_v1_0_S00_AXI_inst (partial_led_test_v1_0_S00_AXI)]", 22, false, false, false, false, true, false); // aW (O, cj) - Popup Trigger
selectMenu(PAResourceItoN.InstanceMenu_FLOORPLANNING, "Floorplanning"); // Z (ai, cj)
selectMenuItem(PAResourceCommand.PACommandNames_DRAW_PBLOCK_MODE, "Draw Pblock"); // ac (cj)
// Run Command: PAResourceCommand.PACommandNames_DRAW_PBLOCK_MODE
// Device view-level: 0.3
selectGraphicalView(PAResourceOtoP.PAViews_DEVICE, 274292, 277064); // D (M, cj)
// r (cj): New Pblock: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (r)
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_ADD_INST
// HMemoryUtils.trashcanNow. Engine heap size: 2,241 MB. GUI used memory: 118 MB. Current time: 4/25/19 12:35:55 PM BST
// Tcl Message: startgroup 
// Tcl Message: create_pblock pblock_1 
// Tcl Message: resize_pblock pblock_1 -add SLICE_X54Y52:SLICE_X67Y73 
// Tcl Message: add_cells_to_pblock pblock_1 [get_cells [list design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst]] -clear_locs 
// Tcl Message: endgroup 
dismissDialog("New Pblock"); // r (cj)
selectTab(RDIResource.PropertiesView_TABBED_PANE, (HResource) null, "Properties", 1); // i (c, cj)
selectTreeTable(PAResourceTtoZ.TclObjectTreeTable_TREETABLE, "RESET_AFTER_RECONFIG ; false", 12, "false", 1, false); // l (C, cj)
// Tcl Message: set_property RESET_AFTER_RECONFIG 1 [get_pblocks pblock_1] 
selectTreeTable(PAResourceTtoZ.TclObjectTreeTable_TREETABLE, "SNAPPING_MODE ; ", 13, (String) null, 1, false); // l (C, cj)
// TclEventType: PHY_BLOCK_MODIFY
// Tcl Message: set_property SNAPPING_MODE ON [get_pblocks pblock_1] 
selectMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // U (q, cj)
dismissMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // U (q, cj)
selectMenu(PAResourceItoN.MainMenuMgr_WINDOW, "Window"); // U (q, cj)
dismissMenu(PAResourceItoN.MainMenuMgr_WINDOW, "Window"); // U (q, cj)
selectMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // U (q, cj)
selectMenu(PAResourceItoN.MainMenuMgr_FLOORPLANNING, "Floorplanning"); // Z (cj)
selectMenu(PAResourceItoN.MainMenuMgr_IO_PLANNING, "I/O Planning"); // Z (cj)
selectMenu(PAResourceItoN.MainMenuMgr_TIMING, "Timing"); // Z (cj)
selectMenu(PAResourceItoN.MainMenuMgr_REPORT, "Report"); // Z (cj)
selectMenuItem(PAResourceCommand.PACommandNames_REPORT_DRC, "Report DRC..."); // ac (cj)
dismissMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // U (q, cj)
// Run Command: PAResourceCommand.PACommandNames_REPORT_DRC
// i (cj): Report DRC: addNotify
selectTree(PAResourceQtoS.RuleDecksPanel_RULE_DECK_TREE, "[All Rule Decks, Vivado Rule Decks, default]", 1, false); // o (O, i)
selectTree(PAResourceQtoS.SelectVioSpecPanel_CHECK_BOX_TREE, "[All Rules, Partial Reconfiguration]", 8, true); // u (O, i) - Node
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (i)
// bs (cj):  Run DRC : addNotify
// Tcl Message: INFO: [IP_Flow 19-1839] IP Catalog is up to date. INFO: [IP_Flow 19-1839] IP Catalog is up to date. INFO: [IP_Flow 19-1839] IP Catalog is up to date. 
// Tcl Message: create_drc_ruledeck ruledeck_1 
// Tcl Message: add_drc_checks -ruledeck ruledeck_1 [get_drc_checks {HDPRA-62 HDPRA-60 HDPRA-58 HDPRA-57 HDPRA-56 HDPRA-55 HDPRA-54 HDPRA-53 HDPRA-52 HDPRA-51 HDPRA-21 HDPR-43 HDPR-20 HDPR-41 HDPR-40 HDPR-30 HDPR-87 HDPR-86 HDPR-85 HDPR-84 HDPR-83 HDPR-74 HDPR-73 HDPR-72 HDPR-71 HDPR-70 HDPR-69 HDPR-68 HDPR-67 HDPR-66 HDPR-65 HDPR-64 HDPR-63 HDPR-62 HDPR-61 HDPR-60 HDPR-59 HDPR-58 HDPR-57 HDPR-54 HDPR-51 HDPR-50 HDPR-49 HDPR-48 HDPR-47 HDPR-46 HDPR-45 HDPR-44 HDPR-42 HDPR-38 HDPR-37 HDPR-36 HDPR-35 HDPR-34 HDPR-33 HDPR-32 HDPR-29 HDPR-28 HDPR-27 HDPR-26 HDPR-25 HDPR-23 HDPR-22 HDPR-18 HDPR-17 HDPR-16 HDPR-15 HDPR-14 HDPR-13 HDPR-12 HDPR-11 HDPR-10 HDPR-9 HDPR-8 HDPR-7 HDPR-6 HDPR-5 HDPR-4 HDPR-3 HDPR-2 HDPR-1}] 
// TclEventType: DRC_ADDED
// Tcl Message: report_drc -name drc_1 -ruledecks {ruledeck_1} 
// Tcl Message: Command: report_drc -name drc_1 -ruledecks ruledeck_1 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 8 threads 
// Tcl Message: report_drc completed successfully 
// Tcl Message: delete_drc_ruledeck ruledeck_1 
// 'ci' command handler elapsed time: 5 seconds
selectButton("PAResourceQtoS.RunDRCTask_NO_VIOLATIONS_FOUND_OK", "OK"); // JButton (A, G)
// Tcl Command: 'rdi::info_commands bd::match_path'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_xdc -force ./constraints/top_fplan.xdc", true); // aF (ae, cj)
// Tcl Command: 'write_xdc -force ./constraints/top_fplan.xdc'
// Tcl Command: 'write_xdc -force ./constraints/top_fplan.xdc'
// Tcl Message: write_xdc -force ./constraints/top_fplan.xdc 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/constraints/top_fplan.xdc 
// [GUI Memory]: 151 MB (+938kb) [00:06:48]
// Tcl Command: 'rdi::info_commands bd::match_path'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_checkpoint -force ./checkpoints/top_link_mode1.dcp", true); // aF (ae, cj)
// Tcl Command: 'write_checkpoint -force ./checkpoints/top_link_mode1.dcp'
// Tcl Command: 'write_checkpoint -force ./checkpoints/top_link_mode1.dcp'
// Tcl Message: write_checkpoint -force ./checkpoints/top_link_mode1.dcp 
// Tcl Message: Writing placer database... Writing XDEF routing. Writing XDEF routing logical nets. Writing XDEF routing special nets. 
// Tcl Message: Write XDEF Complete: Time (s): cpu = 00:00:00.23 ; elapsed = 00:00:00.05 . Memory (MB): peak = 7410.410 ; gain = 0.000 ; free physical = 3032 ; free virtual = 8239 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Common 17-1381] The checkpoint '/home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/top_link_mode1.dcp' has been generated. 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/top_link_mode1.dcp 
// HMemoryUtils.trashcanNow. Engine heap size: 2,246 MB. GUI used memory: 154 MB. Current time: 4/25/19 12:36:31 PM BST
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {op*}'
// Tcl Command: 'rdi::info_commands {opt*}'
// Tcl Command: 'rdi::info_commands {opt_design*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "opt_design", true); // aF (ae, cj)
// Tcl Command: 'opt_design'
// Tcl Command: 'opt_design'
// TclEventType: NETLIST_UPDATE
// [Engine Memory]: 2,286 MB (+35805kb) [00:07:04]
// Tcl Message: opt_design 
// Tcl Message: Command: opt_design Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: Attempting to get a license: PartialReconfiguration 
// Tcl Message: INFO: [Common 17-1540] The version limit for your license is '2019.02' and has expired for new software. A version limit expiration means that, although you may be able to continue to use the current version of tools or IP with this license, you will not be eligible for any updates or new releases. 
// Tcl Message: Feature available: PartialReconfiguration Running DRC as a precondition to command opt_design  Starting DRC Task 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 8 threads 
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: INFO: [Project 1-461] DRC finished with 0 Errors INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message:  Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.85 . Memory (MB): peak = 7410.410 ; gain = 0.000 ; free physical = 3035 ; free virtual = 8244 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// TclEventType: NETLIST_UPDATE
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message:  Starting Logic Optimization Task  Phase 1 Retarget 
// Tcl Message: INFO: [Opt 31-138] Pushed 10 inverter(s) to 95 load pin(s). INFO: [Opt 31-49] Retargeted 0 cell(s). 
// Tcl Message: Phase 1 Retarget | Checksum: f162fc86  Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.85 . Memory (MB): peak = 7512.438 ; gain = 0.000 ; free physical = 3016 ; free virtual = 8238 
// Tcl Message: INFO: [Opt 31-389] Phase Retarget created 47 cells and removed 114 cells 
// Tcl Message:  Phase 2 Constant propagation 
// Tcl Message: INFO: [Opt 31-138] Pushed 4 inverter(s) to 12 load pin(s). 
// Tcl Message: Phase 2 Constant propagation | Checksum: 164fed837  Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 7512.438 ; gain = 0.000 ; free physical = 3017 ; free virtual = 8240 
// Tcl Message: INFO: [Opt 31-389] Phase Constant propagation created 93 cells and removed 336 cells 
// Tcl Message:  Phase 3 Sweep 
// Tcl Message: INFO: [Opt 31-141] Inserted 4 OBUFs to IO ports without IO buffers. 
// Tcl Message: Phase 3 Sweep | Checksum: 15012dea2  Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 7512.438 ; gain = 0.000 ; free physical = 3029 ; free virtual = 8240 
// Tcl Message: INFO: [Opt 31-389] Phase Sweep created 4 cells and removed 996 cells 
// Tcl Message:  Phase 4 BUFG optimization Phase 4 BUFG optimization | Checksum: 15012dea2  Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 7512.438 ; gain = 0.000 ; free physical = 3030 ; free virtual = 8240 
// Tcl Message: INFO: [Opt 31-389] Phase BUFG optimization created 0 cells and removed 0 cells 
// Tcl Message:  Phase 5 Shift Register Optimization Phase 5 Shift Register Optimization | Checksum: 15012dea2  Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 7512.438 ; gain = 0.000 ; free physical = 3029 ; free virtual = 8240 
// Tcl Message: INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message:  Starting Connectivity Check Task  Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.03 . Memory (MB): peak = 7512.438 ; gain = 0.000 ; free physical = 3026 ; free virtual = 8240 Ending Logic Optimization Task | Checksum: 13e4f23bd  Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 7512.438 ; gain = 0.000 ; free physical = 3026 ; free virtual = 8240  Starting Power Optimization Task 
// Tcl Message: INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns. 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// Tcl Message: INFO: [Physopt 32-619] Estimated Timing Summary | WNS=0.825 | TNS=0.000 | 
// Tcl Message: Running Vector-less Activity Propagation... 
// Tcl Message: INFO: [Pwropt 34-9] Applying IDT optimizations ... INFO: [Pwropt 34-10] Applying ODC optimizations ... 
// Tcl Message:  Finished Running Vector-less Activity Propagation 
// [Engine Memory]: 2,720 MB (+335213kb) [00:07:14]
// TclEventType: POWER_CNS_STALE
// TclEventType: NETLIST_UPDATE
// Tcl Message:   Starting PowerOpt Patch Enables Task 
// Tcl Message: INFO: [Pwropt 34-162] WRITE_MODE attribute of 42 BRAM(s) out of a total of 54 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated. INFO: [Timing 38-35] Done setting XDC timing constraints. INFO: [Pwropt 34-201] Structural ODC has moved 11 WE to EN ports 
// Tcl Message: Number of BRAM Ports augmented: 39 newly gated: 15 Total Ports: 108 Ending PowerOpt Patch Enables Task | Checksum: 153b8fee2  Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.60 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2974 ; free virtual = 8186 Ending Power Optimization Task | Checksum: 153b8fee2  Time (s): cpu = 00:00:12 ; elapsed = 00:00:06 . Memory (MB): peak = 7956.273 ; gain = 443.836 ; free physical = 2989 ; free virtual = 8200 
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 24 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered. opt_design completed successfully 
// Tcl Message: opt_design: Time (s): cpu = 00:00:19 ; elapsed = 00:00:11 . Memory (MB): peak = 7956.273 ; gain = 545.863 ; free physical = 2988 ; free virtual = 8200 
// HMemoryUtils.trashcanNow. Engine heap size: 2,720 MB. GUI used memory: 113 MB. Current time: 4/25/19 12:36:47 PM BST
// Elapsed time: 12 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {placed*}'
// Tcl Command: 'rdi::info_commands {place*}'
// Tcl Command: 'rdi::info_commands {place_*}'
// Tcl Command: 'rdi::info_commands {place_design*}'
// Elapsed time: 81 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "place_design", true); // aF (ae, cj)
// Tcl Command: 'place_design'
// Tcl Command: 'place_design'
// Tcl Message: place_design 
// Tcl Message: Command: place_design Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' INFO: [DRC 23-27] Running DRC with 8 threads INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message: Running DRC as a precondition to command place_design 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 8 threads 
// HMemoryUtils.trashcanNow. Engine heap size: 2,753 MB. GUI used memory: 113 MB. Current time: 4/25/19 12:38:10 PM BST
// bs (cj):  Tcl Command Line : addNotify
// TclEventType: TIMING_RESULTS_STALE
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message:  Starting Placer Task 
// Tcl Message: INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 8 CPUs 
// Tcl Message:  Phase 1 Placer Initialization  Phase 1.1 Placer Initialization Netlist Sorting 
// Tcl Message: Netlist sorting complete. Time (s): cpu = 00:00:00.04 ; elapsed = 00:00:00.04 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2922 ; free virtual = 8142 
// Tcl Message: Phase 1.1 Placer Initialization Netlist Sorting | Checksum: f4f37e63  Time (s): cpu = 00:00:00.05 ; elapsed = 00:00:00.07 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2922 ; free virtual = 8142 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). 
// Tcl Message: Netlist sorting complete. Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.02 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2940 ; free virtual = 8148 
// Tcl Message:  Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 101e3566a  Time (s): cpu = 00:00:06 ; elapsed = 00:00:04 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2940 ; free virtual = 8148  Phase 1.3 Build Placer Netlist Model 
// Tcl Message: Phase 1.3 Build Placer Netlist Model | Checksum: 1299bab6a  Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2920 ; free virtual = 8126  Phase 1.4 Constrain Clocks/Macros Phase 1.4 Constrain Clocks/Macros | Checksum: 1299bab6a  Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2920 ; free virtual = 8126 Phase 1 Placer Initialization | Checksum: 1299bab6a  Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2919 ; free virtual = 8126  Phase 2 Global Placement 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 2 Global Placement | Checksum: 1bbc52f4b  Time (s): cpu = 00:00:30 ; elapsed = 00:00:12 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2888 ; free virtual = 8094  Phase 3 Detail Placement  Phase 3.1 Commit Multi Column Macros Phase 3.1 Commit Multi Column Macros | Checksum: 1bbc52f4b  Time (s): cpu = 00:00:30 ; elapsed = 00:00:12 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2888 ; free virtual = 8095 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message:  Phase 3.2 Commit Most Macros & LUTRAMs 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message:  Phase 3.7.1 Place Remaining Phase 3.7.1 Place Remaining | Checksum: a4349f36  Time (s): cpu = 00:00:38 ; elapsed = 00:00:17 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2882 ; free virtual = 8091 Phase 3.7 Small Shape Detail Placement | Checksum: a4349f36  Time (s): cpu = 00:00:38 ; elapsed = 00:00:17 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2885 ; free virtual = 8094  Phase 3.8 Re-assign LUT pins 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message:  Phase 4.1.1 Post Placement Optimization Post Placement Optimization Initialization | Checksum: 1f3dc2e4a  Phase 4.1.1.1 BUFG Insertion 
// Tcl Message: INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 8 CPUs INFO: [Place 46-31] BUFG insertion identified 0 candidate nets, 0 success, 0 skipped for placement/routing, 0 skipped for timing, 0 skipped for netlist change reason. 
// Tcl Message: Phase 4.1.1.1 BUFG Insertion | Checksum: 1f3dc2e4a  Time (s): cpu = 00:00:45 ; elapsed = 00:00:20 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2892 ; free virtual = 8100 
// TclEventType: PLACEDB_MODIFIY_PRE
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 2,723 MB. GUI used memory: 106 MB. Current time: 4/25/19 12:38:33 PM BST
// Engine heap size: 2,723 MB. GUI used memory: 107 MB. Current time: 4/25/19 12:38:33 PM BST
// TclEventType: DESIGN_CLOSE
// Tcl Message: INFO: [Place 30-746] Post Placement Timing Summary WNS=0.345. For the most accurate timing information please run report_timing. 
// TclEventType: DESIGN_CLOSE
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 2,723 MB. GUI used memory: 116 MB. Current time: 4/25/19 12:38:33 PM BST
// TclEventType: DESIGN_NEW
// Device: addNotify
// DeviceView Instantiated
// Device view-level: 0.1
// Device view-level: 0.0
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 16 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered. place_design completed successfully 
// Tcl Message: place_design: Time (s): cpu = 00:00:54 ; elapsed = 00:00:25 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2889 ; free virtual = 8105 
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// RouteApi::loadEngineXgd elapsed time: 1.2s
// Device view-level: 0.1
// HMemoryUtils.trashcanNow. Engine heap size: 2,732 MB. GUI used memory: 121 MB. Current time: 4/25/19 12:38:35 PM BST
// RouteApi: Init Delay Mediator Swing Worker Finished
// Elapsed time: 25 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {route*}'
// Tcl Command: 'rdi::info_commands {route_design*}'
// Elapsed time: 28 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "route_design", true); // aF (ae, cj)
// Tcl Command: 'route_design'
// Tcl Command: 'route_design'
// Tcl Message: route_design 
// Tcl Message: Command: route_design Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: Running DRC as a precondition to command route_design 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 8 threads 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message:  
// Tcl Message:  Starting Routing Task 
// Tcl Message: INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 8 CPUs 
// Tcl Message: Checksum: PlaceDB: 5f6a8d59 ConstDB: 0 ShapeSum: 37bb53f8 RouteDB: 0 
// Tcl Message:  Phase 1 Build RT Design 
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: Phase 1 Build RT Design | Checksum: 12259d96d  Time (s): cpu = 00:00:19 ; elapsed = 00:00:15 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2766 ; free virtual = 7973 
// Tcl Message: Post Restoration Checksum: NetGraph: dba6dcc NumContArr: 901f4e5f Constraints: 84801d42 Timing: 0 
// Tcl Message:  Phase 2 Router Initialization  Phase 2.1 Create Timer Phase 2.1 Create Timer | Checksum: 12259d96d  Time (s): cpu = 00:00:19 ; elapsed = 00:00:15 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2761 ; free virtual = 7968  Phase 2.2 Fix Topology Constraints Phase 2.2 Fix Topology Constraints | Checksum: 12259d96d  Time (s): cpu = 00:00:20 ; elapsed = 00:00:15 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2721 ; free virtual = 7929  Phase 2.3 Pre Route Cleanup Phase 2.3 Pre Route Cleanup | Checksum: 12259d96d  Time (s): cpu = 00:00:20 ; elapsed = 00:00:15 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2721 ; free virtual = 7929 
// Tcl Message:  Number of Nodes with overlaps = 0 
// Tcl Message:  Phase 2.4 Update Timing 
// Tcl Message: Phase 2.4 Update Timing | Checksum: 20173a3e5  Time (s): cpu = 00:00:25 ; elapsed = 00:00:17 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2709 ; free virtual = 7916 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.241  | TNS=0.000  | WHS=-0.357 | THS=-242.895|  
// Tcl Message: Phase 2 Router Initialization | Checksum: 214c9516c  Time (s): cpu = 00:00:28 ; elapsed = 00:00:18 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2706 ; free virtual = 7913  Phase 3 Initial Routing 
// Tcl Message: Phase 3 Initial Routing | Checksum: 21eb532c9  Time (s): cpu = 00:00:36 ; elapsed = 00:00:19 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2705 ; free virtual = 7915  Phase 4 Rip-up And Reroute  Phase 4.1 Global Iteration 0 
// Tcl Message:  Number of Nodes with overlaps = 1470  Number of Nodes with overlaps = 193 
// Tcl Message:  Number of Nodes with overlaps = 50 
// Tcl Message:  Number of Nodes with overlaps = 12  Number of Nodes with overlaps = 6 
// Tcl Message:  Number of Nodes with overlaps = 3 
// Tcl Message:  Number of Nodes with overlaps = 3  Number of Nodes with overlaps = 2  Number of Nodes with overlaps = 0 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.639  | TNS=0.000  | WHS=N/A    | THS=N/A    |  
// Tcl Message: Phase 4.1 Global Iteration 0 | Checksum: 1d8c470f6  Time (s): cpu = 00:01:10 ; elapsed = 00:00:26 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2702 ; free virtual = 7909  Phase 4.2 Global Iteration 1 
// Tcl Message:  Number of Nodes with overlaps = 7  Number of Nodes with overlaps = 3  Number of Nodes with overlaps = 4 
// Tcl Message:  Number of Nodes with overlaps = 4  Number of Nodes with overlaps = 0 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.639  | TNS=0.000  | WHS=N/A    | THS=N/A    |  
// Tcl Message: Phase 4.2 Global Iteration 1 | Checksum: ad14bee4  Time (s): cpu = 00:01:16 ; elapsed = 00:00:28 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2701 ; free virtual = 7908  Phase 4.3 Global Iteration 2 
// Tcl Message:  Number of Nodes with overlaps = 9  Number of Nodes with overlaps = 8 
// Tcl Message:  Number of Nodes with overlaps = 7  Number of Nodes with overlaps = 7  Number of Nodes with overlaps = 5  Number of Nodes with overlaps = 1  Number of Nodes with overlaps = 1  Number of Nodes with overlaps = 0 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.639  | TNS=0.000  | WHS=N/A    | THS=N/A    |  
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 6.1.1 Update Timing | Checksum: 18a50259e  Time (s): cpu = 00:01:28 ; elapsed = 00:00:31 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2697 ; free virtual = 7906 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.754  | TNS=0.000  | WHS=0.012  | THS=0.000  |  
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 6.1 Hold Fix Iter | Checksum: 1800d7490  Time (s): cpu = 00:01:28 ; elapsed = 00:00:31 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2697 ; free virtual = 7906 Phase 6 Post Hold Fix | Checksum: 1800d7490  Time (s): cpu = 00:01:28 ; elapsed = 00:00:31 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2697 ; free virtual = 7906  Phase 7 Route finalize 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message:  Router Utilization Summary   Global Vertical Routing Utilization    = 2.78114 %   Global Horizontal Routing Utilization  = 3.53617 %   Routable Net Status*   *Does not include unroutable nets such as driverless and loadless.   Run report_route_status for detailed report.   Number of Failed Nets               = 0   Number of Unrouted Nets             = 0   Number of Partially Routed Nets     = 0   Number of Node Overlaps             = 0  
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 7 Route finalize | Checksum: 214c824e0  Time (s): cpu = 00:01:28 ; elapsed = 00:00:31 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2697 ; free virtual = 7906  Phase 8 Verifying routed nets 
// Tcl Message:   Verification completed successfully 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 8 Verifying routed nets | Checksum: 214c824e0  Time (s): cpu = 00:01:28 ; elapsed = 00:00:31 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2697 ; free virtual = 7905  Phase 9 Depositing Routes 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 9 Depositing Routes | Checksum: 2291e9a9b  Time (s): cpu = 00:01:29 ; elapsed = 00:00:32 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2696 ; free virtual = 7904  Phase 10 Post Router Timing 
// Tcl Message: INFO: [Route 35-57] Estimated Timing Summary | WNS=0.754  | TNS=0.000  | WHS=0.012  | THS=0.000  |  INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary. 
// Tcl Message: Phase 10 Post Router Timing | Checksum: 2291e9a9b  Time (s): cpu = 00:01:29 ; elapsed = 00:00:32 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2700 ; free virtual = 7907 
// Tcl Message: INFO: [Route 35-16] Router Completed Successfully 
// TclEventType: ROUTE_DESIGN
// Tcl Message:  Time (s): cpu = 00:01:31 ; elapsed = 00:00:34 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2742 ; free virtual = 7949 
// Tcl Message:  Routing Is Done. 
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 14 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered. route_design completed successfully 
// Tcl Message: route_design: Time (s): cpu = 00:01:35 ; elapsed = 00:00:37 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2742 ; free virtual = 7949 
// HMemoryUtils.trashcanNow. Engine heap size: 2,725 MB. GUI used memory: 127 MB. Current time: 4/25/19 12:39:40 PM BST
// Elapsed time: 37 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
// Elapsed time: 20 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_checkpoint -force ./checkpoints/top_mode1_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'write_checkpoint -force ./checkpoints/top_mode1_routed.dcp'
// Tcl Command: 'write_checkpoint -force ./checkpoints/top_mode1_routed.dcp'
// Tcl Message: write_checkpoint -force ./checkpoints/top_mode1_routed.dcp 
// Tcl Message: Writing placer database... Writing XDEF routing. Writing XDEF routing logical nets. Writing XDEF routing special nets. 
// Tcl Message: Write XDEF Complete: Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.61 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2704 ; free virtual = 7936 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Common 17-1381] The checkpoint '/home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/top_mode1_routed.dcp' has been generated. 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/top_mode1_routed.dcp 
// HMemoryUtils.trashcanNow. Engine heap size: 2,725 MB. GUI used memory: 114 MB. Current time: 4/25/19 12:40:06 PM BST
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {upda*}'
// Tcl Command: 'rdi::info_commands {update*}'
// Tcl Command: 'rdi::info_commands {update_design*}'
// Tcl Command: 'rdi::match_options {update_design} {cell}'
// Elapsed time: 75 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "update_design -cell"); // aF (ae, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper)]", 3); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1)]", 6); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1), partial_led_test_v1_0_0 (design_1_partial_led_test_v1_0_0_0)]", 18); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1), partial_led_test_v1_0_0 (design_1_partial_led_test_v1_0_0_0), inst (partial_led_test_v1_0)]", 20); // aW (O, cj)
// PAPropertyPanels.initPanels (partial_led_test_v1_0_S00_AXI_inst (partial_led_test_v1_0_S00_AXI)) elapsed time: 0.5s
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1), partial_led_test_v1_0_0 (design_1_partial_led_test_v1_0_0_0), inst (partial_led_test_v1_0), partial_led_test_v1_0_S00_AXI_inst (partial_led_test_v1_0_S00_AXI)]", 22, false); // aW (O, cj)
selectMenuItem(RDIResourceCommand.RDICommands_COPY, "Copy"); // ac (ai, cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::match_options {update_design} {}'
// Tcl Command: 'rdi::match_options {update_design} {blac}'
// Tcl Command: 'rdi::match_options {update_design} {blac}'
// Tcl Command: 'rdi::info_commands bd::match_path'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "update_design -cell design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst -black_box", true); // aF (ae, cj)
// Tcl Command: 'update_design -cell design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst -black_box'
// Tcl Command: 'update_design -cell design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst -black_box'
// TclEventType: NETLIST_UPDATE
// TclEventType: TIMING_RESULTS_STALE
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: update_design -cell design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst -black_box 
// Tcl Message: INFO: [Designutils 20-2277] Running 'update_design -black_box' on cell design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst. The cell has HD.RECONFIGURABLE property set to true and it will be turned into a black-box cell after this command. 
// TclEventType: PLACEDB_MODIFIY_PRE
// bs (cj):  Tcl Command Line : addNotify
// TclEventType: PLACEDB_MODIFIY_PRE
// TclEventType: NETLIST_UPDATE
// HMemoryUtils.trashcanNow. Engine heap size: 2,726 MB. GUI used memory: 113 MB. Current time: 4/25/19 12:41:38 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 2,726 MB. GUI used memory: 132 MB. Current time: 4/25/19 12:41:39 PM BST
dismissDialog("Tcl Command Line"); // bs (cj)
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "lock_design -level routing", true); // aF (ae, cj)
// Tcl Command: 'lock_design -level routing'
// Tcl Command: 'lock_design -level routing'
// Tcl Message: lock_design -level routing 
// Tcl Message: Locking Netlist... Locking Placement... 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: Locking Routing... 
// HMemoryUtils.trashcanNow. Engine heap size: 2,726 MB. GUI used memory: 117 MB. Current time: 4/25/19 12:41:49 PM BST
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_checkpoint -force ./checkpoints/static_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'write_checkpoint -force ./checkpoints/static_routed.dcp'
// Tcl Command: 'write_checkpoint -force ./checkpoints/static_routed.dcp'
// Tcl Message: write_checkpoint -force ./checkpoints/static_routed.dcp 
// Tcl Message: Writing placer database... 
// Tcl Message: Writing XDEF routing. Writing XDEF routing logical nets. Writing XDEF routing special nets. 
// Tcl Message: Write XDEF Complete: Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.62 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2678 ; free virtual = 7921 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Common 17-1381] The checkpoint '/home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/static_routed.dcp' has been generated. 
// Tcl Message: write_checkpoint: Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2701 ; free virtual = 7925 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/static_routed.dcp 
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {close_design*}'
// Elapsed time: 11 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "close_design", true); // aF (ae, cj)
// Tcl Command: 'close_design'
// Tcl Command: 'close_design'
// TclEventType: DESIGN_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 2,726 MB. GUI used memory: 106 MB. Current time: 4/25/19 12:42:14 PM BST
// Engine heap size: 2,726 MB. GUI used memory: 107 MB. Current time: 4/25/19 12:42:14 PM BST
// TclEventType: CURR_DESIGN_SET
// Tcl Message: close_design 
// TclEventType: DESIGN_CLOSE
// TclEventType: PROJECT_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 2,655 MB. GUI used memory: 101 MB. Current time: 4/25/19 12:42:15 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 2,655 MB. GUI used memory: 96 MB. Current time: 4/25/19 12:42:15 PM BST
// Tcl Command: 'rdi::info_commands bd::match_path'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "open_checkpoint ./checkpoints/static_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'open_checkpoint ./checkpoints/static_routed.dcp'
// Tcl Command: 'open_checkpoint ./checkpoints/static_routed.dcp'
// TclEventType: PACKAGER_OBJECT_ADD
// TclEventType: BDCELL_LOCK_CHANGE
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_ADD
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_NEW
// Tcl Message: open_checkpoint ./checkpoints/static_routed.dcp 
// Tcl Message: Command: open_checkpoint ./checkpoints/static_routed.dcp  Starting open_checkpoint Task  Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2906 ; free virtual = 8158 
// bs (cj):  Tcl Command Line : addNotify
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_CNS_STALE
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 2,656 MB. GUI used memory: 104 MB. Current time: 4/25/19 12:42:31 PM BST
// TclEventType: DESIGN_NEW
// Device: addNotify
// DeviceView Instantiated
// TclEventType: CURR_DESIGN_SET
// TclEventType: PROJ_DESIGN_MODE_SET
// Tcl Message: INFO: [Netlist 29-17] Analyzing 448 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// Tcl Message: Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp12/sys_top_board.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp12/sys_top_board.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp12/sys_top_early.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp12/sys_top_early.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp12/sys_top.xdc] 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp12/sys_top.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp12/sys_top_late.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp12/sys_top_late.xdc] Reading XDEF placement. Reading placer database... Reading XDEF routing. 
// Tcl Message: Read XDEF File: Time (s): cpu = 00:00:00.63 ; elapsed = 00:00:00.62 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2809 ; free virtual = 8064 
// Tcl Message: Restored from archive | CPU: 0.630000 secs | Memory: 14.204132 MB | 
// Tcl Message: Finished XDEF File Restore: Time (s): cpu = 00:00:00.63 ; elapsed = 00:00:00.62 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2810 ; free virtual = 8064 
// Tcl Message: INFO: [Project 1-486] Could not resolve non-primitive black box cell 'partial_led_test_v1_0_S00_AXI_bb' instantiated as 'design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst' [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/imports/hdl/partial_led_test_v1_0.v:47] INFO: [Project 1-111] Unisim Transformation Summary:   A total of 29 instances were transformed.   RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 24 instances   SRLC32E => SRL16E: 5 instances  
// Device view-level: 0.0
// TclEventType: PROJ_DESIGN_MODE_SET
// Device view-level: 0.0
// TclEventType: PROJ_DESIGN_MODE_SET
// TclEventType: DESIGN_MODE_CHANGE
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// RouteApi::loadEngineXgd elapsed time: 1.3s
// Device view-level: 0.0
// Tcl Message: INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221 
// Tcl Message: open_checkpoint: Time (s): cpu = 00:00:15 ; elapsed = 00:00:12 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2786 ; free virtual = 8019 
// Tcl Message: checkpoint_static_routed 
// HMemoryUtils.trashcanNow. Engine heap size: 2,675 MB. GUI used memory: 115 MB. Current time: 4/25/19 12:42:33 PM BST
// RouteApi: Init Delay Mediator Swing Worker Finished
// Elapsed time: 13 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Device view-level: 0.0
// Tcl Command: 'rdi::info_commands {read*}'
// Tcl Command: 'rdi::info_commands {read_chec*}'
// Tcl Command: 'rdi::info_commands {read_chec*}'
// Tcl Command: 'rdi::match_options {read_checkpoint} {cell}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "read_checkpoint -cell"); // aF (ae, cj)
selectMenuItem(RDIResourceCommand.RDICommands_PASTE, "Paste"); // ac (ai, cj)
// Tcl Command: 'rdi::match_options {read_checkpoint} {cell}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "read_checkpoint -cell"); // aF (ae, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper)]", 3); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1)]", 6); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1), partial_led_test_v1_0_0 (design_1_partial_led_test_v1_0_0_0)]", 18); // aW (O, cj)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1), partial_led_test_v1_0_0 (design_1_partial_led_test_v1_0_0_0), inst (partial_led_test_v1_0)]", 20); // aW (O, cj)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[sys_top, design_1_wrapper (design_1_wrapper), design_1_i (design_1), partial_led_test_v1_0_0 (design_1_partial_led_test_v1_0_0_0), inst (partial_led_test_v1_0), partial_led_test_v1_0_S00_AXI_inst (partial_led_test_v1_0_S00_AXI_bb)]", 22, false); // aW (O, cj)
selectMenuItem(RDIResourceCommand.RDICommands_COPY, "Copy"); // ac (ai, cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Elapsed time: 11 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst ./checkpoints/down.dcp", true); // aF (ae, cj)
// Tcl Command: 'read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst ./checkpoints/down.dcp'
// Tcl Command: 'read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst ./checkpoints/down.dcp'
// TclEventType: FILE_SET_CHANGE
// TclEventType: NETLIST_UPDATE
// Tcl Message: read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst ./checkpoints/down.dcp 
// Tcl Message: Command: read_checkpoint -cell design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst ./checkpoints/down.dcp 
// Tcl Message: INFO: [Netlist 29-17] Analyzing 6 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds 
// TclEventType: PLACEDB_MODIFIY_PRE
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: NETLIST_UPDATE
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: checkpoint_static_routed 
// HMemoryUtils.trashcanNow. Engine heap size: 2,668 MB. GUI used memory: 115 MB. Current time: 4/25/19 12:43:05 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 2,668 MB. GUI used memory: 117 MB. Current time: 4/25/19 12:43:06 PM BST
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {opt*}'
// Tcl Command: 'rdi::info_commands {opt_design*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "opt_design", true); // aF (ae, cj)
// Tcl Command: 'opt_design'
// Tcl Command: 'opt_design'
// TclEventType: NETLIST_UPDATE
// Tcl Message: opt_design 
// Tcl Message: Command: opt_design Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: Running DRC as a precondition to command opt_design  Starting DRC Task 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 8 threads 
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: INFO: [Project 1-461] DRC finished with 0 Errors INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message:  Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.86 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2780 ; free virtual = 8005 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message:  Starting Logic Optimization Task 
// Tcl Message:  Phase 1 Retarget 
// Tcl Message: INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). INFO: [Opt 31-49] Retargeted 0 cell(s). 
// Tcl Message: Phase 1 Retarget | Checksum: 2dcf9d75e  Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.79 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2757 ; free virtual = 7995 
// Tcl Message: INFO: [Opt 31-389] Phase Retarget created 0 cells and removed 0 cells 
// Tcl Message:  Phase 2 Constant propagation 
// Tcl Message: INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). 
// Tcl Message: Phase 2 Constant propagation | Checksum: 2dcf9d75e  Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2768 ; free virtual = 7994 
// Tcl Message: INFO: [Opt 31-389] Phase Constant propagation created 0 cells and removed 0 cells 
// Tcl Message:  Phase 3 Sweep 
// TclEventType: NETLIST_UPDATE
// Tcl Message: Phase 3 Sweep | Checksum: 2338e3674  Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2769 ; free virtual = 7994 
// Tcl Message: INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 0 cells 
// Tcl Message:  Phase 4 BUFG optimization 
// Tcl Message: Phase 4 BUFG optimization | Checksum: 2338e3674  Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2768 ; free virtual = 7993 
// Tcl Message: INFO: [Opt 31-389] Phase BUFG optimization created 0 cells and removed 0 cells 
// Tcl Message:  Phase 5 Shift Register Optimization 
// Tcl Message: Phase 5 Shift Register Optimization | Checksum: 2338e3674  Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2769 ; free virtual = 7994 
// Tcl Message: INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells 
// Tcl Message:  Starting Connectivity Check Task  Time (s): cpu = 00:00:00.04 ; elapsed = 00:00:00.04 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2771 ; free virtual = 7996 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Ending Logic Optimization Task | Checksum: 20142e713  Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2772 ; free virtual = 7996  Starting Power Optimization Task 
// Tcl Message: INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns. INFO: [Pwropt 34-232] Skipping BRAM gating because all BRAMs are in high frequency (i.e. period < 3.12 ns) clock domains. 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// TclEventType: NETLIST_UPDATE
// Tcl Message: INFO: [Physopt 32-619] Estimated Timing Summary | WNS=0.756 | TNS=0.000 | INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 54 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated. 
// Tcl Message: Ending Power Optimization Task | Checksum: 2781f07bc  Time (s): cpu = 00:00:06 ; elapsed = 00:00:02 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2756 ; free virtual = 7981 
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 19 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered. opt_design completed successfully 
// Tcl Message: opt_design: Time (s): cpu = 00:00:14 ; elapsed = 00:00:08 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2756 ; free virtual = 7981 
// HMemoryUtils.trashcanNow. Engine heap size: 2,732 MB. GUI used memory: 114 MB. Current time: 4/25/19 12:43:20 PM BST
// PAPropertyPanels.initPanels (partial_led_test_v1_0_S00_AXI_inst (partial_led_test_v1_0_S00_AXI)) elapsed time: 0.3s
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {place*}'
// Tcl Command: 'rdi::info_commands {place_*}'
// Tcl Command: 'rdi::info_commands {place_design*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "place_design", true); // aF (ae, cj)
// Tcl Command: 'place_design'
// Tcl Command: 'place_design'
// Tcl Message: place_design 
// Tcl Message: Command: place_design Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' INFO: [DRC 23-27] Running DRC with 8 threads INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message: Running DRC as a precondition to command place_design 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 8 threads 
// bs (cj):  Tcl Command Line : addNotify
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message:  Starting Placer Task 
// Tcl Message: INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 8 CPUs 
// Tcl Message:  Phase 1 Placer Initialization  Phase 1.1 Placer Initialization Netlist Sorting 
// Tcl Message: Netlist sorting complete. Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.02 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2723 ; free virtual = 7961 
// Tcl Message: Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 130736314  Time (s): cpu = 00:00:00.15 ; elapsed = 00:00:00.16 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2722 ; free virtual = 7960 
// Tcl Message: INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). 
// Tcl Message: Netlist sorting complete. Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.03 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2747 ; free virtual = 7973 
// Tcl Message:  Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// Tcl Message: Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: a5332ed8  Time (s): cpu = 00:00:05 ; elapsed = 00:00:05 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2728 ; free virtual = 7953  Phase 1.3 Build Placer Netlist Model 
// Tcl Message: Phase 1.3 Build Placer Netlist Model | Checksum: 1a2aa09a4  Time (s): cpu = 00:00:11 ; elapsed = 00:00:07 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2702 ; free virtual = 7927  Phase 1.4 Constrain Clocks/Macros Phase 1.4 Constrain Clocks/Macros | Checksum: 1a2aa09a4  Time (s): cpu = 00:00:11 ; elapsed = 00:00:07 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2701 ; free virtual = 7926 Phase 1 Placer Initialization | Checksum: 1a2aa09a4  Time (s): cpu = 00:00:11 ; elapsed = 00:00:07 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2702 ; free virtual = 7927  Phase 2 Global Placement 
// Tcl Message: Phase 2 Global Placement | Checksum: 1b7c77bad  Time (s): cpu = 00:00:20 ; elapsed = 00:00:10 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2677 ; free virtual = 7902  Phase 3 Detail Placement  Phase 3.1 Commit Multi Column Macros Phase 3.1 Commit Multi Column Macros | Checksum: 1b7c77bad  Time (s): cpu = 00:00:20 ; elapsed = 00:00:10 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2677 ; free virtual = 7902 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// Tcl Message:  Phase 4.1.1 Post Placement Optimization Post Placement Optimization Initialization | Checksum: 24c643037  Phase 4.1.1.1 BUFG Insertion 
// Tcl Message: INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 8 CPUs INFO: [Place 46-31] BUFG insertion identified 0 candidate nets, 0 success, 0 skipped for placement/routing, 0 skipped for timing, 0 skipped for netlist change reason. 
// Tcl Message: Phase 4.1.1.1 BUFG Insertion | Checksum: 24c643037  Time (s): cpu = 00:00:28 ; elapsed = 00:00:13 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2686 ; free virtual = 7913 
// Tcl Message: INFO: [Place 30-746] Post Placement Timing Summary WNS=0.756. For the most accurate timing information please run report_timing. 
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 2,733 MB. GUI used memory: 108 MB. Current time: 4/25/19 12:43:42 PM BST
// Engine heap size: 2,733 MB. GUI used memory: 109 MB. Current time: 4/25/19 12:43:42 PM BST
// TclEventType: DESIGN_CLOSE
// Tcl Message: Ending Placer Task | Checksum: 1ca9d7268  Time (s): cpu = 00:00:29 ; elapsed = 00:00:14 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2725 ; free virtual = 7952 
// TclEventType: DESIGN_CLOSE
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 2,733 MB. GUI used memory: 118 MB. Current time: 4/25/19 12:43:42 PM BST
// TclEventType: DESIGN_NEW
// Device: addNotify
// DeviceView Instantiated
// Device view-level: 0.1
// Device view-level: 0.0
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 15 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered. place_design completed successfully 
// Tcl Message: place_design: Time (s): cpu = 00:00:37 ; elapsed = 00:00:18 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2706 ; free virtual = 7941 
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// RouteApi::loadEngineXgd elapsed time: 1.3s
// HMemoryUtils.trashcanNow. Engine heap size: 2,742 MB. GUI used memory: 117 MB. Current time: 4/25/19 12:43:44 PM BST
// RouteApi: Init Delay Mediator Swing Worker Finished
// Device view-level: 0.1
// Elapsed time: 19 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {route*}'
// Tcl Command: 'rdi::info_commands {route_design*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "route_design", true); // aF (ae, cj)
// Tcl Command: 'route_design'
// Tcl Command: 'route_design'
// Tcl Message: route_design 
// Tcl Message: Command: route_design Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: Running DRC as a precondition to command route_design 
// Tcl Message: INFO: [DRC 23-27] Running DRC with 8 threads 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message:  
// Tcl Message:  Starting Routing Task 
// Tcl Message: INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 8 CPUs 
// Tcl Message: Checksum: PlaceDB: a23ffa7f ConstDB: 0 ShapeSum: bae5d750 RouteDB: 6d77a099 
// Tcl Message:  Phase 1 Build RT Design 
// Tcl Message: Phase 1 Build RT Design | Checksum: 1f8eda3ce  Time (s): cpu = 00:00:20 ; elapsed = 00:00:15 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2613 ; free virtual = 7839 
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: Post Restoration Checksum: NetGraph: f50d7f46 NumContArr: e73eae03 Constraints: f5330464 Timing: 0 
// Tcl Message:  Phase 2 Router Initialization  Phase 2.1 Create Timer Phase 2.1 Create Timer | Checksum: 2d17f31ad  Time (s): cpu = 00:00:21 ; elapsed = 00:00:16 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2613 ; free virtual = 7839  Phase 2.2 Fix Topology Constraints Phase 2.2 Fix Topology Constraints | Checksum: 2d17f31ad  Time (s): cpu = 00:00:21 ; elapsed = 00:00:16 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2574 ; free virtual = 7800  Phase 2.3 Pre Route Cleanup Phase 2.3 Pre Route Cleanup | Checksum: 2d17f31ad  Time (s): cpu = 00:00:21 ; elapsed = 00:00:16 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2574 ; free virtual = 7800 
// Tcl Message:  Number of Nodes with overlaps = 0 
// Tcl Message:  Phase 2.4 Update Timing 
// Tcl Message: Phase 2.4 Update Timing | Checksum: 291e6c89b  Time (s): cpu = 00:00:27 ; elapsed = 00:00:18 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2560 ; free virtual = 7788 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.640  | TNS=0.000  | WHS=-0.207 | THS=-87.709|  
// Tcl Message: Phase 2 Router Initialization | Checksum: 22c5038ce  Time (s): cpu = 00:00:29 ; elapsed = 00:00:18 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2534 ; free virtual = 7784  Phase 3 Initial Routing Phase 3 Initial Routing | Checksum: 24aea3441  Time (s): cpu = 00:00:31 ; elapsed = 00:00:18 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2534 ; free virtual = 7785  Phase 4 Rip-up And Reroute  Phase 4.1 Global Iteration 0 
// Tcl Message:  Number of Nodes with overlaps = 18  Number of Nodes with overlaps = 0 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.640  | TNS=0.000  | WHS=N/A    | THS=N/A    |  
// Tcl Message: Phase 4.1 Global Iteration 0 | Checksum: 11a9e0c6b  Time (s): cpu = 00:00:35 ; elapsed = 00:00:20 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2530 ; free virtual = 7782  Phase 4.2 Global Iteration 1 
// Tcl Message:  Number of Nodes with overlaps = 0 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.640  | TNS=0.000  | WHS=N/A    | THS=N/A    |  
// Tcl Message: Phase 6.1.1 Update Timing | Checksum: 12bec8d83  Time (s): cpu = 00:00:39 ; elapsed = 00:00:21 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2552 ; free virtual = 7783 
// Tcl Message: INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.755  | TNS=0.000  | WHS=0.012  | THS=0.000  |  
// Tcl Message: Phase 6.1 Hold Fix Iter | Checksum: 135050aa7  Time (s): cpu = 00:00:39 ; elapsed = 00:00:21 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2552 ; free virtual = 7783 Phase 6 Post Hold Fix | Checksum: 135050aa7  Time (s): cpu = 00:00:40 ; elapsed = 00:00:21 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2552 ; free virtual = 7783  Phase 7 Route finalize 
// Tcl Message:  Router Utilization Summary   Global Vertical Routing Utilization    = 0.0333955 %   Global Horizontal Routing Utilization  = 0.0367647 %   Routable Net Status*   *Does not include unroutable nets such as driverless and loadless.   Run report_route_status for detailed report.   Number of Failed Nets               = 0   Number of Unrouted Nets             = 0   Number of Partially Routed Nets     = 0   Number of Node Overlaps             = 0  
// Tcl Message: Phase 7 Route finalize | Checksum: 164ffd4d2  Time (s): cpu = 00:00:40 ; elapsed = 00:00:22 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2552 ; free virtual = 7783  Phase 8 Verifying routed nets 
// Tcl Message:   Verification completed successfully 
// Tcl Message: Phase 8 Verifying routed nets | Checksum: 164ffd4d2  Time (s): cpu = 00:00:40 ; elapsed = 00:00:22 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2551 ; free virtual = 7782  Phase 9 Depositing Routes 
// TclEventType: PLACEDB_MODIFIY_PRE
// Tcl Message: Phase 9 Depositing Routes | Checksum: 210adee64  Time (s): cpu = 00:00:42 ; elapsed = 00:00:23 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2540 ; free virtual = 7766  Phase 10 Post Router Timing 
// Tcl Message: INFO: [Route 35-57] Estimated Timing Summary | WNS=0.755  | TNS=0.000  | WHS=0.012  | THS=0.000  |  INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary. 
// Tcl Message: Phase 10 Post Router Timing | Checksum: 210adee64  Time (s): cpu = 00:00:42 ; elapsed = 00:00:23 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2540 ; free virtual = 7766 
// Tcl Message: INFO: [Route 35-16] Router Completed Successfully 
// TclEventType: ROUTE_DESIGN
// Tcl Message:  Time (s): cpu = 00:00:44 ; elapsed = 00:00:25 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2596 ; free virtual = 7822 
// Tcl Message:  Routing Is Done. 
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 13 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered. route_design completed successfully 
// Tcl Message: route_design: Time (s): cpu = 00:00:48 ; elapsed = 00:00:28 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2596 ; free virtual = 7822 
// HMemoryUtils.trashcanNow. Engine heap size: 2,734 MB. GUI used memory: 116 MB. Current time: 4/25/19 12:44:19 PM BST
// Elapsed time: 28 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_checkpoint -force ./checkpoints/top_mode2_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'write_checkpoint -force ./checkpoints/top_mode2_routed.dcp'
// Tcl Command: 'write_checkpoint -force ./checkpoints/top_mode2_routed.dcp'
// Tcl Message: write_checkpoint -force ./checkpoints/top_mode2_routed.dcp 
// Tcl Message: Writing placer database... 
// Tcl Message: Writing XDEF routing. Writing XDEF routing logical nets. Writing XDEF routing special nets. 
// Tcl Message: Write XDEF Complete: Time (s): cpu = 00:00:02 ; elapsed = 00:00:00.67 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2560 ; free virtual = 7810 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Common 17-1381] The checkpoint '/home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/top_mode2_routed.dcp' has been generated. 
// Tcl Message: write_checkpoint: Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2587 ; free virtual = 7824 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/checkpoints/top_mode2_routed.dcp 
// HMemoryUtils.trashcanNow. Engine heap size: 2,735 MB. GUI used memory: 115 MB. Current time: 4/25/19 12:44:30 PM BST
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {c*}'
// Tcl Command: 'rdi::info_commands {close*}'
// Tcl Command: 'rdi::info_commands {close_de*}'
// Tcl Command: 'rdi::info_commands {close_de*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "close_design", true); // aF (ae, cj)
// Tcl Command: 'close_design'
// Tcl Command: 'close_design'
// TclEventType: DESIGN_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 2,735 MB. GUI used memory: 108 MB. Current time: 4/25/19 12:44:36 PM BST
// Engine heap size: 2,735 MB. GUI used memory: 109 MB. Current time: 4/25/19 12:44:36 PM BST
// TclEventType: CURR_DESIGN_SET
// Tcl Message: close_design 
// TclEventType: DESIGN_CLOSE
// TclEventType: PROJECT_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 2,664 MB. GUI used memory: 105 MB. Current time: 4/25/19 12:44:37 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 2,656 MB. GUI used memory: 101 MB. Current time: 4/25/19 12:44:37 PM BST
// Tcl Command: 'rdi::info_commands {pr*}'
// Tcl Command: 'rdi::info_commands {pr*}'
// Tcl Command: 'rdi::info_commands {pr_*}'
// Tcl Command: 'rdi::info_commands {pr_verify*}'
// Tcl Command: 'rdi::match_options {pr_verify} {f}'
// Tcl Command: 'rdi::match_options {pr_verify} {f}'
// Tcl Command: 'rdi::match_options {pr_verify} {f}'
// Tcl Command: 'rdi::match_options {pr_verify} {fu}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Elapsed time: 25 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "pr_verify -full_check ./checkpoints/top_mode1_routed.dcp ./checkpoints/top_mode2_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'pr_verify -full_check ./checkpoints/top_mode1_routed.dcp ./checkpoints/top_mode2_routed.dcp'
// Tcl Command: 'pr_verify -full_check ./checkpoints/top_mode1_routed.dcp ./checkpoints/top_mode2_routed.dcp'
// Tcl Message: pr_verify -full_check ./checkpoints/top_mode1_routed.dcp ./checkpoints/top_mode2_routed.dcp 
// Tcl Message: Command: pr_verify -full_check ./checkpoints/top_mode1_routed.dcp ./checkpoints/top_mode2_routed.dcp 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [Netlist 29-17] Analyzing 454 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: READ_XDC_FILE_END
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp18/sys_top.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp18/sys_top_late.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp18/sys_top_late.xdc] Reading XDEF placement. Reading placer database... 
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// Tcl Message: Reading XDEF routing. 
// Tcl Message: Read XDEF File: Time (s): cpu = 00:00:00.67 ; elapsed = 00:00:00.65 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2731 ; free virtual = 8011 
// Tcl Message: Restored from archive | CPU: 0.680000 secs | Memory: 14.782120 MB | 
// Tcl Message: Finished XDEF File Restore: Time (s): cpu = 00:00:00.67 ; elapsed = 00:00:00.65 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2731 ; free virtual = 8011 
// Tcl Message: Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo/bit_buffer_fifo_clocks.xdc] for cell 'eth_bridge/bit_buffer/inst' Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo/bit_buffer_fifo_clocks.xdc] for cell 'eth_bridge/bit_buffer/inst' Sourcing Tcl File [/opt/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst' 
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221 
// Tcl Message: INFO: [Netlist 29-17] Analyzing 454 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp21/sys_top.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp21/sys_top_late.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp21/sys_top_late.xdc] Reading XDEF placement. Reading placer database... Reading XDEF routing. 
// Tcl Message: Read XDEF File: Time (s): cpu = 00:00:00.62 ; elapsed = 00:00:00.63 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2574 ; free virtual = 7855 
// Tcl Message: Restored from archive | CPU: 0.640000 secs | Memory: 14.567619 MB | 
// Tcl Message: Finished XDEF File Restore: Time (s): cpu = 00:00:00.62 ; elapsed = 00:00:00.63 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2574 ; free virtual = 7855 
// Tcl Message: Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo/bit_buffer_fifo_clocks.xdc] for cell 'eth_bridge/bit_buffer/inst' Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/ip/bit_buffer_fifo/bit_buffer_fifo/bit_buffer_fifo_clocks.xdc] for cell 'eth_bridge/bit_buffer/inst' Sourcing Tcl File [/opt/Xilinx/Vivado/2017.4/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_gray.tcl] for cell 'eth_bridge/bit_buffer/inst/gen_fifo_generator.fifo_generator_inst/inst_fifo_gen/gaxis_fifo.gaxisf.axisf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_cdc_inst' 
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: TIMING_RESULTS_STALE
// Tcl Message: INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221 
// TclEventType: DESIGN_CLOSE
// Tcl Message: INFO: [Constraints 18-1020] PR Verify Summary: 
// Tcl Message: INFO: [Vivado 12-3253] PR_VERIFY: check points ./checkpoints/top_mode1_routed.dcp and ./checkpoints/top_mode2_routed.dcp are compatible 
// TclEventType: DESIGN_NEW_FAILED
// TclEventType: DESIGN_CLOSE
// TclEventType: DESIGN_NEW_FAILED
// Tcl Message: pr_verify: Time (s): cpu = 00:00:22 ; elapsed = 00:00:21 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2765 ; free virtual = 7988 
// Elapsed time: 21 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
// Elapsed time: 38 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "open_checkpoint ./checkpoints/top_mode1_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'open_checkpoint ./checkpoints/top_mode1_routed.dcp'
// Tcl Command: 'open_checkpoint ./checkpoints/top_mode1_routed.dcp'
// TclEventType: PACKAGER_OBJECT_ADD
// TclEventType: BDCELL_LOCK_CHANGE
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_ADD
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_NEW
// Tcl Message: open_checkpoint ./checkpoints/top_mode1_routed.dcp 
// Tcl Message: Command: open_checkpoint ./checkpoints/top_mode1_routed.dcp  Starting open_checkpoint Task  Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2779 ; free virtual = 8039 
// bs (cj):  Tcl Command Line : addNotify
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_CNS_STALE
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 2,666 MB. GUI used memory: 111 MB. Current time: 4/25/19 12:46:12 PM BST
// TclEventType: DESIGN_NEW
// Device: addNotify
// DeviceView Instantiated
// TclEventType: CURR_DESIGN_SET
// TclEventType: PROJ_DESIGN_MODE_SET
// Tcl Message: INFO: [Netlist 29-17] Analyzing 454 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// Tcl Message: Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp24/sys_top_board.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp24/sys_top_board.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp24/sys_top_early.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp24/sys_top_early.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp24/sys_top.xdc] 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp24/sys_top.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp24/sys_top_late.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp24/sys_top_late.xdc] Reading XDEF placement. Reading placer database... Reading XDEF routing. 
// Tcl Message: Read XDEF File: Time (s): cpu = 00:00:00.65 ; elapsed = 00:00:00.65 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2731 ; free virtual = 7994 
// Tcl Message: Restored from archive | CPU: 0.660000 secs | Memory: 14.484177 MB | 
// Tcl Message: Finished XDEF File Restore: Time (s): cpu = 00:00:00.65 ; elapsed = 00:00:00.65 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2731 ; free virtual = 7994 
// Tcl Message: INFO: [Project 1-111] Unisim Transformation Summary:   A total of 29 instances were transformed.   RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 24 instances   SRLC32E => SRL16E: 5 instances  
// Device view-level: 0.0
// TclEventType: PROJ_DESIGN_MODE_SET
// Device view-level: 0.0
// TclEventType: PROJ_DESIGN_MODE_SET
// TclEventType: DESIGN_MODE_CHANGE
// Tcl Message: INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221 
// Tcl Message: open_checkpoint: Time (s): cpu = 00:00:14 ; elapsed = 00:00:11 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2717 ; free virtual = 7960 
// Tcl Message: checkpoint_top_mode1_routed 
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// RouteApi::loadEngineXgd elapsed time: 1.4s
// Device view-level: 0.0
// HMemoryUtils.trashcanNow. Engine heap size: 2,682 MB. GUI used memory: 119 MB. Current time: 4/25/19 12:46:14 PM BST
// RouteApi: Init Delay Mediator Swing Worker Finished
// Elapsed time: 12 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Device view-level: 0.0
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Elapsed time: 127 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_bitstream -force ./bitstreams/mode_up.bit", true); // aF (ae, cj)
// Tcl Command: 'write_bitstream -force ./bitstreams/mode_up.bit'
// Tcl Command: 'write_bitstream -force ./bitstreams/mode_up.bit'
// Tcl Message: write_bitstream -force ./bitstreams/mode_up.bit 
// Tcl Message: Command: write_bitstream -force ./bitstreams/mode_up.bit Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: Running DRC as a precondition to command write_bitstream 
// Tcl Message: INFO: [IP_Flow 19-1839] IP Catalog is up to date. 
// bs (cj):  Tcl Command Line : addNotify
// Tcl Message: INFO: [DRC 23-27] Running DRC with 8 threads 
// Tcl Message: INFO: [Vivado 12-3199] DRC finished with 0 Errors, 1 Warnings INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message: Partition "pblock_1" Reconfigurable Module "design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst" 
// Tcl Message: INFO: [Project 1-821] Please set project.enableDesignId to be 'true'. 
// Tcl Message: INFO: [Designutils 20-2272] Running write_bitstream with 8 threads. 
// Tcl Message: Loading data files... 
// Tcl Message: Loading site data... Loading route data... Processing options... Creating bitmap... 
// Tcl Message: Creating bitstream... 
// Tcl Message: Writing bitstream ./bitstreams/mode_up.bit... Process Partition "pblock_1" 
// Tcl Message: INFO: [Designutils 20-2272] Running write_bitstream with 8 threads. 
// Tcl Message: Loading data files... 
// Tcl Message: Loading site data... Loading route data... Processing options... 
// Tcl Message: Partition "pblock_1" has RESET_AFTER_RECONFIG = TRUE. Creating bitmap... 
// Tcl Message: Creating bitstream... Partial bitstream contains 2142688 bits. Writing bitstream ./bitstreams/mode_up_pblock_1_partial.bit... 
// Tcl Message: INFO: [Vivado 12-1842] Bitgen Completed Successfully. INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 10 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered. write_bitstream completed successfully 
// Tcl Message: write_bitstream: Time (s): cpu = 00:00:29 ; elapsed = 00:00:22 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2646 ; free virtual = 7889 
// Tcl Message: ./bitstreams/mode_up.bit 
// HMemoryUtils.trashcanNow. Engine heap size: 2,752 MB. GUI used memory: 131 MB. Current time: 4/25/19 12:48:43 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 2,752 MB. GUI used memory: 119 MB. Current time: 4/25/19 12:48:44 PM BST
// Elapsed time: 22 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {close*}'
// Tcl Command: 'rdi::info_commands {close_design*}'
// Tcl Command: 'rdi::info_commands {close_design*}'
// Elapsed time: 155 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "close_design", true); // aF (ae, cj)
// Tcl Command: 'close_design'
// Tcl Command: 'close_design'
// TclEventType: DESIGN_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 2,752 MB. GUI used memory: 111 MB. Current time: 4/25/19 12:51:20 PM BST
// Engine heap size: 2,752 MB. GUI used memory: 112 MB. Current time: 4/25/19 12:51:20 PM BST
// TclEventType: CURR_DESIGN_SET
// Tcl Message: close_design 
// TclEventType: DESIGN_CLOSE
// TclEventType: PROJECT_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 2,736 MB. GUI used memory: 108 MB. Current time: 4/25/19 12:51:20 PM BST
// Tcl Command: 'rdi::info_commands bd::match_path'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "open_checkpoint ./checkpoints/top_mode2_routed.dcp", true); // aF (ae, cj)
// Tcl Command: 'open_checkpoint ./checkpoints/top_mode2_routed.dcp'
// Tcl Command: 'open_checkpoint ./checkpoints/top_mode2_routed.dcp'
// TclEventType: PACKAGER_OBJECT_ADD
// TclEventType: BDCELL_LOCK_CHANGE
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_ADD
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_NEW
// Tcl Message: open_checkpoint ./checkpoints/top_mode2_routed.dcp 
// Tcl Message: Command: open_checkpoint ./checkpoints/top_mode2_routed.dcp  Starting open_checkpoint Task  Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2682 ; free virtual = 7923 
// TclEventType: PROJECT_NEW
// bs (cj):  Tcl Command Line : addNotify
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_CNS_STALE
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: MARK_DEBUG_NET
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: POWER_REPORT_STALE
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: MARK_DEBUG_NET
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: LOC_CONSTRAINT_REMOVE
// TclEventType: LOC_CONSTRAINT_ADD
// TclEventType: SIGNAL_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: READ_XDC_FILE_START
// TclEventType: SDC_CONSTRAINT_ADD
// TclEventType: PHY_BLOCK_NEW
// TclEventType: PHY_BLOCK_ADD_INST
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: PHY_RECT_SELECT
// TclEventType: PHY_BLOCK_MODIFY
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 2,742 MB. GUI used memory: 110 MB. Current time: 4/25/19 12:51:37 PM BST
// TclEventType: DESIGN_NEW
// Device: addNotify
// DeviceView Instantiated
// TclEventType: CURR_DESIGN_SET
// TclEventType: PROJ_DESIGN_MODE_SET
// Tcl Message: INFO: [Netlist 29-17] Analyzing 454 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2017.4 INFO: [Project 1-570] Preparing netlist for logic optimization 
// Tcl Message: Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp26/sys_top_board.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp26/sys_top_board.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp26/sys_top_early.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp26/sys_top_early.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp26/sys_top.xdc] 
// Tcl Message: Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp26/sys_top.xdc] Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp26/sys_top_late.xdc] Finished Parsing XDC File [/home/alex/GitHub/ZyEthCAP/nicap_extend/.Xil/Vivado-23358-alex-warc/dcp26/sys_top_late.xdc] Reading XDEF placement. Reading placer database... Reading XDEF routing. 
// Tcl Message: Read XDEF File: Time (s): cpu = 00:00:00.65 ; elapsed = 00:00:00.64 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2610 ; free virtual = 7882 
// Tcl Message: Restored from archive | CPU: 0.660000 secs | Memory: 14.519264 MB | 
// Tcl Message: Finished XDEF File Restore: Time (s): cpu = 00:00:00.65 ; elapsed = 00:00:00.65 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2610 ; free virtual = 7882 
// Tcl Message: INFO: [Project 1-111] Unisim Transformation Summary:   A total of 24 instances were transformed.   RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 24 instances  
// Device view-level: 0.0
// TclEventType: PROJ_DESIGN_MODE_SET
// Device view-level: 0.0
// TclEventType: PROJ_DESIGN_MODE_SET
// TclEventType: DESIGN_MODE_CHANGE
// Tcl Message: INFO: [Project 1-604] Checkpoint was created with Vivado v2017.4 (64-bit) build 2086221 
// Tcl Message: open_checkpoint: Time (s): cpu = 00:00:15 ; elapsed = 00:00:12 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2594 ; free virtual = 7844 
// Tcl Message: checkpoint_top_mode2_routed 
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// RouteApi::loadEngineXgd elapsed time: 1.4s
// Device view-level: 0.0
// HMemoryUtils.trashcanNow. Engine heap size: 2,758 MB. GUI used memory: 121 MB. Current time: 4/25/19 12:51:39 PM BST
// RouteApi: Init Delay Mediator Swing Worker Finished
// Elapsed time: 13 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Elapsed time: 12 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_bitstream -force ./bitstreams/mode_down.bit", true); // aF (ae, cj)
// Tcl Command: 'write_bitstream -force ./bitstreams/mode_down.bit'
// Tcl Command: 'write_bitstream -force ./bitstreams/mode_down.bit'
// Tcl Message: current_project nicap_test 
// Tcl Message: write_bitstream -force ./bitstreams/mode_down.bit 
// Tcl Message: Command: write_bitstream -force ./bitstreams/mode_down.bit Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 2 Infos, 0 Warnings, 0 Critical Warnings and 1 Errors encountered. write_bitstream failed 
// Tcl Message: ERROR: [Common 17-69] Command failed: The current design is not implemented. 
// Elapsed time: 18 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_bitstream -force ./bitstreams/mode_down.bit", true); // aF (ae, cj)
// Tcl Command: 'write_bitstream -force ./bitstreams/mode_down.bit'
// Tcl Command: 'write_bitstream -force ./bitstreams/mode_down.bit'
// Tcl Message: current_project project_top_mode2_routed 
// HMemoryUtils.trashcanNow. Engine heap size: 2,795 MB. GUI used memory: 120 MB. Current time: 4/25/19 12:52:11 PM BST
// Tcl Message: write_bitstream -force ./bitstreams/mode_down.bit 
// Tcl Message: Command: write_bitstream -force ./bitstreams/mode_down.bit Attempting to get a license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020' 
// Tcl Message: Running DRC as a precondition to command write_bitstream 
// Tcl Message: INFO: [IP_Flow 19-1839] IP Catalog is up to date. INFO: [DRC 23-27] Running DRC with 8 threads 
// Device view-level: 0.0
// bs (cj):  Tcl Command Line : addNotify
// HMemoryUtils.trashcanNow. Engine heap size: 2,790 MB. GUI used memory: 120 MB. Current time: 4/25/19 12:52:13 PM BST
// Tcl Message: INFO: [Vivado 12-3199] DRC finished with 0 Errors, 1 Warnings INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information. 
// Tcl Message: Partition "pblock_1" Reconfigurable Module "design_1_wrapper/design_1_i/partial_led_test_v1_0_0/inst/partial_led_test_v1_0_S00_AXI_inst" 
// Tcl Message: INFO: [Project 1-821] Please set project.enableDesignId to be 'true'. 
// Tcl Message: INFO: [Designutils 20-2272] Running write_bitstream with 8 threads. 
// Tcl Message: Loading data files... 
// Tcl Message: Loading site data... Loading route data... Processing options... Creating bitmap... 
// Tcl Message: Creating bitstream... 
// Tcl Message: Writing bitstream ./bitstreams/mode_down.bit... Process Partition "pblock_1" 
// Tcl Message: INFO: [Designutils 20-2272] Running write_bitstream with 8 threads. 
// Tcl Message: Loading data files... 
// Tcl Message: Loading site data... Loading route data... Processing options... 
// Tcl Message: Partition "pblock_1" has RESET_AFTER_RECONFIG = TRUE. Creating bitmap... 
// Tcl Message: Creating bitstream... Partial bitstream contains 2142688 bits. Writing bitstream ./bitstreams/mode_down_pblock_1_partial.bit... 
// Tcl Message: INFO: [Vivado 12-1842] Bitgen Completed Successfully. INFO: [Common 17-83] Releasing license: Implementation 
// Tcl Message: 10 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered. write_bitstream completed successfully 
// Tcl Message: write_bitstream: Time (s): cpu = 00:00:33 ; elapsed = 00:00:20 . Memory (MB): peak = 7956.273 ; gain = 0.000 ; free physical = 2565 ; free virtual = 7822 
// Tcl Message: ./bitstreams/mode_down.bit 
// Elapsed time: 21 seconds
dismissDialog("Tcl Command Line"); // bs (cj)
// Tcl Command: 'rdi::info_commands {close*}'
// Tcl Command: 'rdi::info_commands {close_*}'
// Tcl Command: 'rdi::info_commands {close_design*}'
// Elapsed time: 46 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "close_design", true); // aF (ae, cj)
// Tcl Command: 'close_design'
// Tcl Command: 'close_design'
// TclEventType: DESIGN_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 2,774 MB. GUI used memory: 114 MB. Current time: 4/25/19 12:53:17 PM BST
// Engine heap size: 2,774 MB. GUI used memory: 114 MB. Current time: 4/25/19 12:53:17 PM BST
// TclEventType: CURR_DESIGN_SET
// Tcl Message: close_design 
// TclEventType: DESIGN_CLOSE
// TclEventType: PROJECT_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 2,766 MB. GUI used memory: 110 MB. Current time: 4/25/19 12:53:18 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 2,758 MB. GUI used memory: 106 MB. Current time: 4/25/19 12:53:18 PM BST
// Tcl Command: 'rdi::info_commands {w*}'
// Tcl Command: 'rdi::info_commands {write*}'
// Tcl Command: 'rdi::info_commands {write_*}'
// Tcl Command: 'rdi::info_commands {write_h*}'
// Tcl Command: 'rdi::info_commands {write_hw*}'
// Tcl Command: 'rdi::info_commands {write_hw*}'
// Tcl Command: 'rdi::match_options {write_hwdef} {}'
// Tcl Command: 'rdi::match_options {write_hwdef} {file}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Elapsed time: 373 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "write_hwdef -file ./software/system.hdf", true); // aF (ae, cj)
// Tcl Command: 'write_hwdef -file ./software/system.hdf'
// Tcl Command: 'write_hwdef -file ./software/system.hdf'
// Tcl Message: write_hwdef -file ./software/system.hdf 
// Tcl Message: /home/alex/GitHub/ZyEthCAP/nicap_extend/software/system.hdf 
// Tcl Command: 'rdi::info_commands {l*}'
// Tcl Command: 'rdi::info_commands {launch*}'
// Tcl Command: 'rdi::info_commands {launch_*}'
// Tcl Command: 'rdi::info_commands {launch_sd*}'
// Tcl Command: 'rdi::info_commands {launch_sd*}'
// Tcl Command: 'rdi::match_options {launch_sdk} {wr}'
// Tcl Command: 'rdi::match_options {launch_sdk} {wro}'
// Tcl Command: 'rdi::match_options {launch_sdk} {w}'
// Tcl Command: 'rdi::match_options {launch_sdk} {wor}'
// Tcl Command: 'rdi::match_options {launch_sdk} {wor}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::match_options {launch_sdk} {}'
// Tcl Command: 'rdi::match_options {launch_sdk} {h}'
// Tcl Command: 'rdi::match_options {launch_sdk} {hws}'
// Tcl Command: 'rdi::match_options {launch_sdk} {hws}'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Tcl Command: 'rdi::info_commands bd::match_path'
// Elapsed time: 19 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "launch_sdk -workspace ./software -hwspec ./software/system.hdf", true); // aF (ae, cj)
// Tcl Command: 'launch_sdk -workspace ./software -hwspec ./software/system.hdf'
// Tcl Command: 'launch_sdk -workspace ./software -hwspec ./software/system.hdf'
// Tcl Message: launch_sdk -workspace ./software -hwspec ./software/system.hdf 
// Tcl Message: INFO: [Vivado 12-393] Launching SDK... INFO: [Vivado 12-417] Running xsdk -workspace ./software -hwspec ./software/system.hdf INFO: [Vivado 12-3157] SDK launch initiated. Please check console for any further messages. 
// HMemoryUtils.trashcanNow. Engine heap size: 2,758 MB. GUI used memory: 105 MB. Current time: 4/25/19 12:59:51 PM BST
// Elapsed time: 53 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, IP Integrator, Open Block Design]", 7, false); // u (O, cj)
// Run Command: PAResourceCommand.PACommandNames_OPEN_BLOCK_DESIGN
// bs (cj):  Open Block Design : addNotify
// TclEventType: LOAD_FEATURE
// TclEventType: RSB_CHANGE_CURRENT_DIAGRAM
// TclEventType: RSB_PROPERTY_CHANGE
// TclEventType: LOAD_FEATURE
// TclEventType: RSB_PROPERTY_CHANGE
// TclEventType: RSB_OPEN_DIAGRAM
// Tcl Message: open_bd_design {/home/alex/GitHub/ZyEthCAP/nicap_extend/nicap_test.srcs/sources_1/bd/design_1/design_1.bd} 
// TclEventType: RSB_OPEN_DIAGRAM
// TclEventType: RSB_CONNECTION_CHANGE
// TclEventType: RSB_LOCK_CHANGE
// TclEventType: RSB_CHANGE_CURRENT_DIAGRAM
// TclEventType: RSB_LOCK_CHANGE
// TclEventType: RSB_CHANGE_CURRENT_DIAGRAM
// 'bA' command handler elapsed time: 4 seconds
dismissDialog("Open Block Design"); // bs (cj)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "Address Editor", 1); // k (j, cj)
selectTreeTable(PAResourceAtoD.AddressTreeTablePanel_ADDRESS_TREE_TABLE, "zycap_0 ; S_AXI_LITE ; reg0 ; 0x43C1_0000 ; 64K ; 0x43C1_FFFF", 7, "0x43C1_0000", 3, false); // g (O, cj)
selectTreeTable(PAResourceAtoD.AddressTreeTablePanel_ADDRESS_TREE_TABLE, "partial_led_test_v1_0_0 ; s00_axi ; reg0 ; 0x43C0_0000 ; 64K ; 0x43C0_FFFF", 6, "0x43C0_0000", 3, false); // g (O, cj)
// HMemoryUtils.trashcanNow. Engine heap size: 2,764 MB. GUI used memory: 108 MB. Current time: 4/25/19 1:29:56 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 2,764 MB. GUI used memory: 104 MB. Current time: 4/25/19 1:59:56 PM BST
// [GUI Memory]: 159 MB (+58kb) [01:47:38]
// HMemoryUtils.trashcanNow. Engine heap size: 2,764 MB. GUI used memory: 103 MB. Current time: 4/25/19 2:29:56 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 2,764 MB. GUI used memory: 103 MB. Current time: 4/25/19 2:59:56 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 2,764 MB. GUI used memory: 103 MB. Current time: 4/25/19 3:29:56 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 2,764 MB. GUI used memory: 103 MB. Current time: 4/25/19 3:59:56 PM BST
// HMemoryUtils.trashcanNow. Engine heap size: 2,764 MB. GUI used memory: 103 MB. Current time: 4/25/19 4:29:56 PM BST
// Elapsed time: 13075 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "System", 0); // k (j, cj)
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /partial_led_test_v1_0_0_leds 
// Run Command: PAResourceCommand.PACommandNames_CUSTOMIZE_RSB_BLOC
// r (cj): Re-customize Module Reference: addNotify
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (r)
dismissDialog("Re-customize Module Reference"); // r (cj)
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /zycap_0_mm2s_introut 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
selectView(PAResourceOtoP.PAViews_SYSTEM, "System", 415, 162, 1158, 597, false, false, false, true, false); // fJ (k, cj) - Popup Trigger
selectMenu(PAResourceQtoS.SelectMenu_HIGHLIGHT, "Highlight"); // Z (ai, cj)
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
selectMenu(PAResourceQtoS.SystemBuilderView_ORIENTATION, "Orientation"); // Z (ai, cj)
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
selectTab((HResource) null, (HResource) null, "Sources", 0); // aF (Q, cj)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, sys_top (sys_top.v)]", 1); // B (D, cj)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, sys_top (sys_top.v), design_1_wrapper : design_1_wrapper (design_1_wrapper.v)]", 2); // B (D, cj)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, sys_top (sys_top.v), design_1_wrapper : design_1_wrapper (design_1_wrapper.v), design_1_i : design_1 (design_1.bd), design_1 (design_1.v)]", 4); // B (D, cj)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, sys_top (sys_top.v), design_1_wrapper : design_1_wrapper (design_1_wrapper.v), design_1_i : design_1 (design_1.bd), design_1 (design_1.v), partial_led_test_v1_0_0 : design_1_partial_led_test_v1_0_0_0 (Module Reference Wrapper)]", 16); // B (D, cj)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, sys_top (sys_top.v), design_1_wrapper : design_1_wrapper (design_1_wrapper.v), design_1_i : design_1 (design_1.bd), design_1 (design_1.v), partial_led_test_v1_0_0 : design_1_partial_led_test_v1_0_0_0 (Module Reference Wrapper), design_1_partial_led_test_v1_0_0_0 (design_1_partial_led_test_v1_0_0_0.v), inst : partial_led_test_v1_0 (partial_led_test_v1_0.v), partial_led_test_v1_0_S00_AXI_inst : partial_led_test_v1_0_S00_AXI (partial_led_test_v1_0_S00_AXI.v)]", 19, false); // B (D, cj)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, sys_top (sys_top.v), design_1_wrapper : design_1_wrapper (design_1_wrapper.v), design_1_i : design_1 (design_1.bd), design_1 (design_1.v), partial_led_test_v1_0_0 : design_1_partial_led_test_v1_0_0_0 (Module Reference Wrapper), design_1_partial_led_test_v1_0_0_0 (design_1_partial_led_test_v1_0_0_0.v), inst : partial_led_test_v1_0 (partial_led_test_v1_0.v), partial_led_test_v1_0_S00_AXI_inst : partial_led_test_v1_0_S00_AXI (partial_led_test_v1_0_S00_AXI.v)]", 19, false, false, false, false, false, true); // B (D, cj) - Double Click
// Elapsed time: 72 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, sys_top (sys_top.v), design_1_wrapper : design_1_wrapper (design_1_wrapper.v), design_1_i : design_1 (design_1.bd), design_1 (design_1.v), blk_mem_gen_1 : design_1_blk_mem_gen_0_1 (design_1_blk_mem_gen_0_1.xci)]", 15, false); // B (D, cj)
// Elapsed time: 52 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "System", 0); // k (j, cj)
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /EnIn_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /Lcl_M_AXIS_MM2S_TDATA_0_1 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_CLK0 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /rst_processing_system7_0_50M_peripheral_aresetn 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// CommandFailedException: ERROR: [BD 41-113] Interface Net not found: /processing_system7_0_FCLK_RESET0_N 
// HMemoryUtils.trashcanNow. Engine heap size: 2,767 MB. GUI used memory: 107 MB. Current time: 4/25/19 4:59:56 PM BST
